var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ButtonComponent.html",[0,0.07,1,0.925]],["body/components/ButtonComponent.html",[0,0.114,1,1.706,2,1.864,3,0.424,4,0.327,5,1.357,6,1.46,7,1.46,8,0.287,9,0.312,10,0.314,11,3.09,12,1.46,13,2.639,14,2.423,15,3.424,16,1.926,17,1.79,18,1.249,19,1.735,20,5.417,21,2.076,22,5.417,23,0.785,24,0.029,25,1.706,26,0.453,27,2.243,28,4.418,29,3.006,30,1.174,31,0.896,32,5.041,33,3.195,34,5.417,35,2.43,36,5.417,37,1.161,38,1.062,39,0.997,40,4.25,41,2.73,42,3.67,43,0.701,44,3.67,45,4.841,46,3.67,47,2.243,48,4.25,49,5.178,50,5.178,51,3.67,52,3.572,53,2.076,54,3.67,55,2.96,56,3.195,57,3.195,58,3.195,59,0.924,60,3.195,61,3.67,62,3.576,63,3.67,64,1.55,65,3.572,66,4.841,67,3.67,68,3.67,69,0.542,70,1.094,71,2.319,72,3.195,73,0.367,74,3.67,75,3.67,76,0.327,77,0.947,78,3.67,79,0.88,80,1.995,81,2.645,82,2.96,83,2.645,84,3.67,85,2.194,86,5.417,87,2.892,88,0.647,89,1.842,90,1.7,91,1.842,92,2.194,93,2.076,94,2.156,95,1.7,96,3.67,97,2.568,98,1.7,99,2.708,100,2.005,101,1.842,102,1.574,103,1.842,104,2.708,105,3.195,106,3.572,107,2.708,108,2.708,109,2.422,110,2.243,111,2.471,112,3.67,113,2.194,114,3.67,115,2.194,116,2.194,117,2.422,118,3.67,119,4.561,120,1.7,121,3.67,122,2.194,123,2.422,124,2.324,125,2.005,126,2.43,127,2.43,128,3.09,129,1.842,130,2.194,131,2.708,132,0.947,133,1.926,134,1.926,135,1.46,136,2.292,137,1.46,138,0.72,139,1.926,140,1.175,141,1.46,142,0.947,143,1.46,144,1.175,145,1.46,146,1.018,147,1.46,148,1.018,149,1.46,150,1.094,151,0.409,152,1.46,153,1.018,154,1.46,155,1.094,156,1.094,157,1.46,158,1.262,159,1.46,160,1.46,161,1.46,162,0.02,163,0.02]],["title/components/ButtonComponent-1.html",[0,0.059,1,0.774,102,1.197]],["body/components/ButtonComponent-1.html",[0,0.084,1,1.111,2,1.067,3,0.497,4,0.13,5,1.147,6,0.58,7,0.58,8,0.114,9,0.265,10,0.269,12,0.58,13,2.18,14,1.147,15,3.339,16,0.963,17,1.598,18,0.376,21,1.038,23,0.236,24,0.029,26,0.299,27,1.121,28,4.109,29,3.313,30,1.256,31,0.795,32,3.372,35,1.215,37,0.961,38,1.058,39,0.7,40,3.187,41,2.305,43,0.915,47,1.121,52,2.665,53,1.549,55,3.61,56,4.172,57,4.172,58,4.172,59,1.222,60,4.064,65,1.786,69,0.146,71,1.692,73,0.146,76,0.13,77,0.801,80,2.096,81,1.695,82,2.36,83,1.695,85,0.872,87,1.558,88,0.706,89,0.732,91,2.937,92,3.499,93,2.984,94,2.328,95,2.982,97,2.054,98,1.121,100,1.322,101,2.405,102,0.625,103,1.215,110,3.07,111,2.923,113,3.718,115,3.849,116,1.855,117,3.021,119,1.228,120,2.002,122,2.16,123,0.963,124,2.054,126,0.732,127,1.215,129,1.215,130,0.872,132,0.376,133,0.963,134,2.18,135,0.58,136,2.766,137,0.58,138,0.36,139,0.963,140,0.467,141,0.58,142,0.376,143,0.58,144,0.467,145,0.58,146,0.405,147,0.58,148,0.405,149,0.58,150,0.435,151,0.163,152,0.58,153,0.405,154,0.58,155,0.435,156,0.435,157,0.58,158,0.502,159,0.58,160,0.58,161,0.58,162,0.01,163,0.01,164,0.611,165,1.228,166,0.35,167,1.447,168,1.322,169,0.625,170,1.786,171,1.322,172,2.612,173,1.598,174,2.42,175,1.786,176,2.384,177,2.038,178,1.215,179,1.322,180,1.322,181,3.102,182,1.322,183,2.42,184,1.058,185,1.322,186,2.42,187,2.42,188,3.102,189,3.102,190,3.102,191,1.458,192,1.076,193,1.458,194,1.458,195,0.945,196,0.446,197,0.745,198,1.458,199,1.458,200,3.041,201,3.041,202,1.458,203,1.111,204,2.42,205,3.187,206,3.637,207,2.42,208,2.42,209,1.695,210,1.695,211,1.973,212,2.188,213,1.695,214,3.102,215,0.547,216,1.458,217,2.169,218,1.458,219,1.458,220,0.797,221,0.797,222,0.797,223,0.797,224,1.458,225,2.42,226,2.42,227,4.79,228,1.458,229,1.458,230,1.458,231,1.458,232,1.458,233,1.458,234,1.973,235,1.368,236,3.73,237,2.665,238,2.188,239,2.36,240,2.42,241,5.077,242,3.6,243,2.42,244,2.42,245,6.589,246,2.42,247,2.42,248,3.611,249,2.42,250,2.42,251,3.611,252,2.42,253,2.42,254,3.611,255,2.42,256,2.42,257,3.611,258,1.598,259,2.42,260,3.611,261,2.42,262,2.42,263,3.611,264,3.611,265,2.852,266,2.384,267,3.611,268,2.188,269,1.695,270,1.598,271,1.598,272,1.598,273,2.42,274,1.458,275,1.458,276,1.458,277,1.458,278,1.458,279,1.458,280,1.458,281,1.458,282,1.458,283,1.458,284,1.458,285,1.458,286,1.458,287,1.458,288,1.458,289,0.963,290,1.458,291,1.458,292,1.458,293,1.786,294,1.786,295,1.786,296,1.695,297,1.458,298,0.963,299,1.458,300,1.458,301,2.42,302,1.458,303,1.458,304,2.42,305,1.458,306,1.458,307,2.42,308,1.458,309,1.458,310,2.42,311,0.963,312,1.458,313,2.42,314,0.963,315,1.458,316,2.038,317,2.42,318,2.42,319,0.797,320,3.611,321,3.102,322,3.205,323,3.822,324,2.048,325,2.42,326,2.42,327,1.786,328,0.892,329,2.36,330,1.236,331,0.405,332,1.228,333,3.281,334,0.801,335,2.612,336,2.289,337,1.437,338,0.804,339,1.458,340,1.228,341,1.458,342,3.822,343,2.038,344,0.581,345,1.447,346,1.458,347,0.797,348,0.35,349,1.228,350,1.458,351,2.42,352,1.558,353,2.42,354,0.872,355,1.458,356,1.228,357,1.458,358,1.458,359,1.228,360,1.228,361,1.458,362,0.797,363,1.076,364,1.228,365,1.458,366,1.458,367,0.963,368,1.228,369,1.458]],["title/interfaces/DataGridColumn.html",[370,0.412,371,1.068]],["body/interfaces/DataGridColumn.html",[0,0.053,3,0.197,4,0.463,8,0.197,9,0.122,10,0.122,23,1.001,24,0.029,25,0.698,26,0.545,30,0.709,31,0.908,37,1.621,38,0.408,39,0.938,43,1.269,59,0.48,64,2.167,69,0.252,73,0.252,76,0.571,79,0.603,88,0.779,138,0.552,151,0.751,162,0.015,163,0.015,164,0.28,166,0.603,169,0.649,184,0.767,192,1.998,195,0.519,196,0.31,197,0.519,203,0.698,215,0.655,235,0.767,328,0.519,330,1.14,331,0.698,334,0.649,338,0.56,344,1.442,348,1.06,370,0.753,371,1.667,372,0.805,373,0.805,374,1.374,375,1.679,376,1.914,377,2.193,378,2.015,379,1.805,380,1.853,381,2.085,382,1.805,383,1.902,384,2.085,385,1.892,386,1.805,387,2.186,388,1.805,389,1.805,390,1.805,391,1.94,392,1.925,393,1.875,394,1.875,395,0.984,396,2.015,397,2.305,398,1.991,399,1.805,400,1.634,401,2.144,402,1.647,403,2.033,404,1.805,405,1.374,406,1.805,407,1.52,408,1.374,409,1.679,410,1.451,411,1.107,412,2.015,413,1.374,414,2.085,415,1.94,416,1.374,417,1.189,418,1.189,419,1.745,420,0.865,421,0.865,422,1.031,423,0.865,424,1.667,425,0.865,426,0.865,427,0.805,428,0.865,429,0.865,430,0.865,431,0.865,432,0.865,433,0.865,434,0.865,435,1.415,436,0.865,437,0.865,438,1.681,439,1.52,440,1.107,441,0.805,442,1.107,443,2.068,444,1.189,445,1.634,446,0.93,447,1.374,448,0.865,449,1.189,450,0.93,451,1.805,452,1.189,453,1.374,454,2.033,455,1.189,456,1.455,457,1.679,458,2.164,459,0.93,460,0.93,461,0.93,462,1.031,463,0.805,464,0.93,465,1.415,466,0.93,467,0.93,468,0.805,469,2.14,470,1.634,471,0.93,472,0.93,473,1.317,474,0.93,475,1.14,476,1.374,477,0.93,478,0.93,479,0.93,480,0.93,481,0.93,482,1.455,483,0.93,484,0.93,485,0.865,486,1.278,487,0.93,488,0.93,489,1.625,490,0.93,491,0.93,492,0.93,493,0.93,494,1.625,495,0.93,496,0.93,497,0.93,498,0.93,499,0.865,500,0.93,501,0.865,502,1.278,503,0.93,504,0.93,505,0.93,506,1.564,507,1.107,508,0.805,509,0.805,510,1.634,511,0.93,512,0.93,513,1.805,514,0.959,515,0.93,516,0.93,517,0.93,518,0.805,519,0.93,520,0.93,521,1.415,522,0.93,523,0.865,524,1.26,525,1.805,526,1.374,527,1.679,528,1.374,529,0.93,530,0.805,531,0.93,532,0.865,533,2.015,534,0.93,535,0.805,536,0.93,537,0.93,538,0.93,539,0.93,540,0.93,541,0.93,542,0.865,543,0.805,544,0.749,545,0.93]],["title/interfaces/DataGridEvent.html",[370,0.412,509,1.068]],["body/interfaces/DataGridEvent.html",[0,0.057,3,0.211,4,0.449,8,0.211,9,0.13,10,0.13,23,0.868,24,0.029,25,0.747,26,0.567,30,0.746,31,0.896,37,1.608,38,0.437,39,1.014,43,1.244,59,0.514,64,2.038,69,0.269,73,0.269,76,0.583,79,0.937,88,0.688,138,0.4,151,0.757,162,0.016,163,0.016,164,0.3,166,0.646,169,1.008,184,0.806,192,1.994,195,0.556,196,0.332,197,0.556,203,0.747,215,0.688,235,0.556,328,0.556,330,0.695,331,0.747,334,0.695,338,1.024,344,1.21,348,0.646,370,0.764,371,1.788,372,0.862,373,0.862,374,0.996,375,1.581,376,1.933,377,2.169,378,1.445,379,0.996,380,1.472,381,1.7,382,0.996,383,1.922,384,1.7,385,1.615,386,0.996,387,1.98,388,0.996,389,0.996,390,0.996,391,1.581,392,1.714,393,1.344,394,1.344,395,0.6,396,1.7,397,1.98,398,1.735,399,1.445,400,1.445,401,2.152,402,1.63,403,2.069,404,1.7,405,0.996,406,1.445,407,1.344,408,0.996,409,1.344,410,1.406,411,0.803,412,1.7,413,0.996,414,2.182,415,1.921,416,0.996,417,0.862,418,0.862,419,1.788,420,0.926,421,0.926,422,1.084,423,0.926,424,1.714,425,0.926,426,0.926,427,0.862,428,0.926,429,0.926,430,0.926,431,0.926,432,0.926,433,0.926,434,0.926,435,1.472,436,0.926,437,0.926,438,1.717,439,1.581,440,1.165,441,0.862,442,1.37,443,2.101,444,1.251,445,1.7,446,0.996,447,1.445,448,0.926,449,1.251,450,0.996,451,1.865,452,1.251,453,1.445,454,2.129,455,1.251,456,1.503,457,1.735,458,2.242,459,0.996,460,0.996,461,0.996,462,1.084,463,0.862,464,0.996,465,1.472,466,0.996,467,0.996,468,0.862,469,2.182,470,1.7,471,0.996,472,0.996,473,1.37,474,0.996,475,1.382,476,1.445,477,0.996,478,0.996,479,0.996,480,0.996,481,0.996,482,1.503,483,0.996,484,0.996,485,0.926,486,1.344,487,0.996,488,0.996,489,1.821,490,0.996,491,0.996,492,0.996,493,0.996,494,1.665,495,0.996,496,0.996,497,0.996,498,0.996,499,0.926,500,0.996,501,0.926,502,1.581,503,0.996,504,0.996,505,0.996,506,1.766,507,1.37,508,1.251,509,1.251,510,2.13,511,1.445,512,1.445,513,2.182,514,1.302,515,1.445,516,1.865,517,0.996,518,0.862,519,0.996,520,0.996,521,1.472,522,0.996,523,0.926,524,1.302,525,1.865,526,1.445,527,1.735,528,1.445,529,0.996,530,0.862,531,0.996,532,0.926,533,2.065,534,0.996,535,0.862,536,0.996,537,0.996,538,0.996,539,0.996,540,0.996,541,0.996,542,0.926,543,0.862,544,0.803,545,0.996]],["title/interfaces/DataGridFilterState.html",[370,0.412,449,1.068]],["body/interfaces/DataGridFilterState.html",[0,0.059,3,0.22,4,0.458,8,0.22,9,0.136,10,0.136,23,0.883,24,0.029,25,0.779,26,0.581,30,0.769,31,0.856,37,1.614,38,0.455,39,1.012,43,1.251,59,0.536,69,0.281,73,0.281,76,0.581,79,0.674,88,0.709,138,0.418,151,0.756,162,0.016,163,0.016,164,0.313,166,0.674,169,0.725,184,0.831,192,2.002,195,0.58,196,0.347,197,0.58,203,0.779,215,0.709,235,0.58,328,0.58,330,0.725,331,0.779,334,0.725,338,0.625,344,1.233,348,0.674,370,0.77,371,1.646,372,0.899,373,0.899,374,1.038,375,1.619,376,1.944,377,2.166,378,1.489,379,1.038,380,1.507,381,1.741,382,1.038,383,1.934,384,1.741,385,1.814,386,1.038,387,2.013,388,1.038,389,1.038,390,1.038,391,1.619,392,1.743,393,1.385,394,1.385,395,0.625,396,1.741,397,2.013,398,1.769,399,1.489,400,1.489,401,2.188,402,1.654,403,2.09,404,2.157,405,1.038,406,1.489,407,1.385,408,1.038,409,1.385,410,1.417,411,0.837,412,1.741,413,1.038,414,2.095,415,1.948,416,1.038,417,0.899,418,0.899,419,1.814,420,0.966,421,0.966,422,1.117,423,0.966,424,1.814,425,0.966,426,0.966,427,0.899,428,0.966,429,0.966,430,0.966,431,0.966,432,0.966,433,0.966,434,0.966,435,1.507,436,0.966,437,0.966,438,1.739,439,1.619,440,1.2,441,0.899,442,1.2,443,2.147,444,1.289,445,1.901,446,1.038,447,1.489,448,0.966,449,1.507,450,1.489,451,1.901,452,1.289,453,1.489,454,2.09,455,1.289,456,1.533,457,1.769,458,2.205,459,1.038,460,1.038,461,1.038,462,1.117,463,0.899,464,1.038,465,1.507,466,1.038,467,1.038,468,0.899,469,2.207,470,1.741,471,1.038,472,1.038,473,1.403,474,1.038,475,1.215,476,1.489,477,1.038,478,1.038,479,1.038,480,1.038,481,1.038,482,1.533,483,1.038,484,1.038,485,0.966,486,1.385,487,1.038,488,1.038,489,1.688,490,1.038,491,1.038,492,1.038,493,1.038,494,1.688,495,1.038,496,1.038,497,1.038,498,1.038,499,0.966,500,1.038,501,0.966,502,1.385,503,1.038,504,1.038,505,1.038,506,1.619,507,1.2,508,0.899,509,0.899,510,1.741,511,1.038,512,1.038,513,1.901,514,1.039,515,1.038,516,1.038,517,1.038,518,0.899,519,1.038,520,1.038,521,1.507,522,1.038,523,0.966,524,1.327,525,1.901,526,1.489,527,1.769,528,1.489,529,1.038,530,0.899,531,1.038,532,0.966,533,2.095,534,1.038,535,0.899,536,1.038,537,1.038,538,1.038,539,1.038,540,1.038,541,1.038,542,0.966,543,0.899,544,0.837,545,1.038]],["title/interfaces/DataGridGroupRow.html",[370,0.412,530,1.068]],["body/interfaces/DataGridGroupRow.html",[0,0.059,3,0.218,4,0.455,8,0.218,9,0.134,10,0.134,23,0.879,24,0.029,25,0.771,26,0.578,30,0.763,31,0.869,37,1.619,38,0.451,39,0.943,43,1.237,59,0.531,64,1.279,69,0.278,73,0.278,76,0.58,79,0.667,88,0.704,138,0.413,151,0.756,162,0.016,163,0.016,164,0.31,166,0.667,169,0.717,184,0.825,192,2.004,195,0.574,196,0.343,197,0.574,203,0.771,215,0.704,235,0.574,328,0.574,330,0.717,331,0.771,334,1.321,338,0.619,344,1.227,348,0.667,370,0.769,371,1.638,372,0.89,373,0.89,374,1.028,375,1.61,376,1.942,377,2.161,378,1.478,379,1.028,380,1.498,381,1.73,382,1.028,383,1.876,384,1.73,385,1.638,386,1.028,387,2.005,388,1.028,389,1.028,390,1.028,391,1.61,392,1.736,393,1.375,394,1.375,395,0.619,396,1.73,397,2.005,398,1.76,399,1.478,400,1.478,401,2.184,402,1.639,403,2.001,404,1.73,405,1.028,406,1.478,407,1.375,408,1.028,409,1.375,410,1.435,411,0.828,412,1.73,413,1.028,414,2.087,415,1.942,416,1.028,417,0.89,418,0.89,419,1.807,420,0.956,421,0.956,422,1.109,423,0.956,424,1.736,425,0.956,426,0.956,427,0.89,428,0.956,429,0.956,430,0.956,431,0.956,432,0.956,433,0.956,434,0.956,435,1.498,436,0.956,437,0.956,438,1.734,439,1.61,440,1.191,441,0.89,442,1.191,443,2.116,444,1.279,445,1.73,446,1.028,447,1.478,448,0.956,449,1.279,450,1.028,451,1.892,452,1.279,453,1.478,454,2.216,455,1.279,456,1.525,457,1.76,458,2.216,459,1.028,460,1.028,461,1.028,462,1.109,463,0.89,464,1.028,465,1.498,466,1.028,467,1.028,468,0.89,469,2.201,470,1.73,471,1.028,472,1.028,473,1.395,474,1.028,475,1.208,476,1.478,477,1.028,478,1.028,479,1.028,480,1.028,481,1.028,482,1.525,483,1.028,484,1.028,485,0.956,486,1.375,487,1.028,488,1.028,489,1.734,490,1.028,491,1.028,492,1.028,493,1.028,494,1.682,495,1.028,496,1.028,497,1.028,498,1.028,499,0.956,500,1.028,501,0.956,502,1.375,503,1.028,504,1.028,505,1.028,506,1.614,507,1.191,508,0.89,509,0.89,510,1.73,511,1.028,512,1.028,513,1.892,514,1.031,515,1.028,516,1.028,517,1.028,518,0.89,519,1.028,520,1.028,521,1.807,522,1.028,523,0.956,524,1.536,525,2.201,526,1.73,527,2.047,528,1.478,529,1.028,530,1.279,531,1.478,532,1.375,533,2.275,534,1.028,535,0.89,536,1.028,537,1.028,538,1.028,539,1.028,540,1.028,541,1.028,542,0.956,543,0.89,544,0.828,545,1.028]],["title/interfaces/DataGridGroupState.html",[370,0.412,452,1.068]],["body/interfaces/DataGridGroupState.html",[0,0.059,3,0.221,4,0.458,8,0.221,9,0.136,10,0.136,23,0.884,24,0.029,25,0.782,26,0.582,30,0.771,31,0.848,37,1.615,38,0.457,39,0.947,43,1.252,59,0.538,69,0.282,73,0.282,76,0.581,79,0.676,88,0.711,138,0.419,151,0.756,162,0.017,163,0.017,164,0.314,166,0.676,169,0.727,184,0.833,192,2.002,195,0.582,196,0.348,197,0.582,203,0.782,215,0.711,235,0.582,328,0.582,330,0.727,331,0.782,334,0.727,338,0.628,344,1.235,348,0.676,370,0.771,371,1.649,372,0.902,373,0.902,374,1.042,375,1.622,376,1.945,377,2.163,378,1.493,379,1.042,380,1.51,381,1.744,382,1.042,383,1.935,384,1.744,385,1.649,386,1.042,387,2.015,388,1.042,389,1.042,390,1.042,391,1.622,392,1.87,393,1.388,394,1.388,395,0.628,396,1.744,397,2.015,398,1.771,399,1.493,400,1.493,401,2.19,402,1.655,403,2.009,404,1.744,405,1.042,406,1.493,407,1.388,408,1.042,409,1.388,410,1.417,411,0.84,412,1.744,413,1.042,414,2.16,415,2.123,416,1.042,417,0.902,418,0.902,419,1.816,420,0.969,421,0.969,422,1.12,423,0.969,424,1.745,425,0.969,426,0.969,427,0.902,428,0.969,429,0.969,430,0.969,431,0.969,432,0.969,433,0.969,434,0.969,435,1.51,436,0.969,437,0.969,438,1.741,439,1.622,440,1.203,441,0.902,442,1.203,443,2.149,444,1.292,445,1.904,446,1.042,447,1.493,448,0.969,449,1.292,450,1.042,451,2.015,452,1.51,453,1.744,454,2.123,455,1.292,456,1.535,457,1.771,458,2.206,459,1.042,460,1.042,461,1.042,462,1.12,463,0.902,464,1.042,465,1.51,466,1.042,467,1.042,468,0.902,469,2.209,470,1.744,471,1.042,472,1.042,473,1.406,474,1.042,475,1.217,476,1.493,477,1.042,478,1.042,479,1.042,480,1.042,481,1.042,482,1.535,483,1.042,484,1.042,485,0.969,486,1.388,487,1.042,488,1.042,489,1.69,490,1.042,491,1.042,492,1.042,493,1.042,494,1.69,495,1.042,496,1.042,497,1.042,498,1.042,499,0.969,500,1.042,501,0.969,502,1.388,503,1.042,504,1.042,505,1.042,506,1.62,507,1.203,508,0.902,509,0.902,510,1.744,511,1.042,512,1.042,513,1.904,514,1.042,515,1.042,516,1.042,517,1.042,518,0.902,519,1.042,520,1.042,521,1.51,522,1.042,523,0.969,524,1.329,525,1.904,526,1.493,527,1.771,528,1.493,529,1.042,530,0.902,531,1.042,532,0.969,533,2.097,534,1.042,535,0.902,536,1.042,537,1.042,538,1.042,539,1.042,540,1.042,541,1.042,542,0.969,543,0.902,544,0.84,545,1.042]],["title/interfaces/DataGridOptions.html",[370,0.412,463,1.068]],["body/interfaces/DataGridOptions.html",[0,0.077,3,0.192,4,0.458,8,0.192,9,0.118,10,0.118,23,0.835,24,0.029,25,0.679,26,0.537,30,0.92,31,0.913,37,1.657,38,0.591,39,0.906,43,1.228,59,0.831,64,2.182,69,0.245,73,0.245,76,0.572,79,0.587,88,0.642,138,0.364,151,0.753,162,0.015,163,0.015,164,0.273,166,0.587,169,0.632,184,1.114,192,2.034,195,0.898,196,0.537,197,0.898,203,0.679,215,0.642,235,0.505,328,0.505,330,0.632,331,1.011,334,0.632,338,0.545,344,1.156,348,0.587,370,0.748,371,1.728,372,0.784,373,0.784,374,0.905,375,1.657,376,1.926,377,2.153,378,1.347,379,0.905,380,1.393,381,1.996,382,0.905,383,1.829,384,1.996,385,1.542,386,0.905,387,1.904,388,0.905,389,0.905,390,0.905,391,1.857,392,1.649,393,1.253,394,1.253,395,0.545,396,1.608,397,1.904,398,1.657,399,1.347,400,1.608,401,2.111,402,1.601,403,1.923,404,1.608,405,0.905,406,1.347,407,1.253,408,0.905,409,1.253,410,1.424,411,0.73,412,1.608,413,0.905,414,1.996,415,1.857,416,0.905,417,0.784,418,0.784,419,1.839,420,0.842,421,0.842,422,1.207,423,0.842,424,1.79,425,0.842,426,0.842,427,0.784,428,0.842,429,0.842,430,0.842,431,0.842,432,0.842,433,0.842,434,0.842,435,1.649,436,0.842,437,0.842,438,1.749,439,1.496,440,1.086,441,0.784,442,1.086,443,2.055,444,1.166,445,1.608,446,0.905,447,1.347,448,0.842,449,1.166,450,0.905,451,1.996,452,1.166,453,1.347,454,2.019,455,1.166,456,1.609,457,1.657,458,2.171,459,0.905,460,0.905,461,0.905,462,1.337,463,1.166,464,1.347,465,1.79,466,1.347,467,1.347,468,1.542,469,2.35,470,1.996,471,1.781,472,1.781,473,1.436,474,1.781,475,1.329,476,1.904,477,1.781,478,1.347,479,1.347,480,1.781,481,1.781,482,1.712,483,1.347,484,1.347,485,1.657,486,1.657,487,1.781,488,1.347,489,1.666,490,1.781,491,1.347,492,1.781,493,1.347,494,1.829,495,1.781,496,1.347,497,1.781,498,1.781,499,1.657,500,1.781,501,1.657,502,1.496,503,1.347,504,1.347,505,1.781,506,1.551,507,1.086,508,0.784,509,0.784,510,1.608,511,0.905,512,0.905,513,1.781,514,0.94,515,0.905,516,0.905,517,0.905,518,0.784,519,0.905,520,0.905,521,1.393,522,0.905,523,0.842,524,1.243,525,1.781,526,1.347,527,1.657,528,1.347,529,0.905,530,0.784,531,0.905,532,0.842,533,1.996,534,0.905,535,0.784,536,0.905,537,0.905,538,0.905,539,0.905,540,0.905,541,0.905,542,0.842,543,0.784,544,0.73,545,0.905]],["title/interfaces/DataGridRow.html",[370,0.412,521,1.068]],["body/interfaces/DataGridRow.html",[0,0.058,3,0.215,4,0.48,8,0.215,9,0.133,10,0.133,23,0.874,24,0.029,25,0.761,26,0.715,30,0.756,31,0.878,37,1.622,38,0.445,39,0.939,43,1.235,59,0.524,64,1.899,69,0.274,73,0.274,76,0.579,79,0.658,88,0.697,138,0.408,151,0.759,162,0.016,163,0.016,164,0.306,166,0.658,169,0.708,184,0.817,192,2.005,195,0.566,196,0.338,197,0.566,203,0.761,215,0.697,235,0.566,328,0.566,330,0.708,331,0.761,334,0.708,338,0.611,344,1.22,348,0.658,370,0.767,371,1.628,372,0.878,373,0.878,374,1.014,375,1.598,376,1.938,377,2.158,378,1.464,379,1.014,380,1.487,381,1.717,382,1.014,383,1.871,384,1.717,385,1.628,386,1.014,387,1.994,388,1.014,389,1.014,390,1.014,391,1.598,392,1.727,393,1.361,394,1.361,395,0.611,396,1.717,397,1.994,398,1.749,399,1.464,400,1.464,401,2.179,402,1.635,403,1.993,404,1.717,405,1.014,406,1.464,407,1.361,408,1.014,409,1.361,410,1.448,411,0.817,412,1.717,413,1.014,414,2.078,415,1.933,416,1.014,417,0.878,418,0.878,419,1.799,420,0.943,421,0.943,422,1.098,423,0.943,424,1.727,425,0.943,426,0.943,427,0.878,428,0.943,429,0.943,430,0.943,431,0.943,432,0.943,433,0.943,434,0.943,435,1.487,436,0.943,437,0.943,438,1.727,439,1.598,440,1.18,441,0.878,442,1.18,443,2.11,444,1.267,445,1.717,446,1.014,447,1.464,448,0.943,449,1.267,450,1.014,451,1.881,452,1.267,453,1.717,454,2.078,455,1.267,456,1.516,457,2.04,458,2.281,459,1.014,460,1.014,461,1.014,462,1.098,463,0.878,464,1.014,465,1.487,466,1.014,467,1.014,468,0.878,469,2.193,470,1.717,471,1.014,472,1.014,473,1.384,474,1.014,475,1.199,476,1.464,477,1.014,478,1.014,479,1.014,480,1.014,481,1.014,482,1.516,483,1.014,484,1.014,485,0.943,486,1.361,487,1.014,488,1.014,489,1.768,490,1.014,491,1.014,492,1.014,493,1.014,494,1.675,495,1.014,496,1.014,497,1.014,498,1.014,499,0.943,500,1.014,501,0.943,502,1.361,503,1.014,504,1.014,505,1.014,506,1.607,507,1.384,508,0.878,509,0.878,510,1.717,511,1.014,512,1.014,513,1.881,514,1.022,515,1.014,516,1.014,517,1.014,518,0.878,519,1.014,520,1.014,521,1.628,522,1.464,523,1.361,524,1.53,525,2.193,526,1.717,527,2.04,528,2.078,529,1.464,530,0.878,531,1.014,532,0.943,533,2.078,534,1.014,535,0.878,536,1.014,537,1.014,538,1.014,539,1.014,540,1.014,541,1.014,542,0.943,543,0.878,544,0.817,545,1.014]],["title/interfaces/DataGridSelectionState.html",[370,0.412,455,1.068]],["body/interfaces/DataGridSelectionState.html",[0,0.059,3,0.22,4,0.458,8,0.22,9,0.136,10,0.136,23,0.883,24,0.029,25,0.779,26,0.581,30,0.769,31,0.856,37,1.614,38,0.455,39,0.946,43,1.239,59,0.536,69,0.281,73,0.281,76,0.581,79,0.674,88,0.709,138,0.418,151,0.757,162,0.016,163,0.016,164,0.313,166,0.674,169,0.725,184,0.831,192,2.002,195,0.58,196,0.347,197,0.58,203,0.779,215,0.709,235,0.58,328,0.58,330,0.725,331,0.779,334,0.725,338,0.625,344,1.233,348,0.674,370,0.77,371,1.646,372,0.899,373,0.899,374,1.038,375,1.619,376,1.944,377,2.163,378,1.489,379,1.038,380,1.507,381,1.741,382,1.038,383,1.88,384,1.741,385,1.646,386,1.038,387,2.013,388,1.038,389,1.038,390,1.038,391,1.619,392,1.743,393,1.385,394,1.385,395,0.625,396,1.741,397,2.013,398,1.769,399,1.489,400,1.489,401,2.188,402,1.654,403,2.007,404,1.741,405,1.038,406,1.489,407,1.385,408,1.038,409,1.385,410,1.417,411,0.837,412,1.741,413,1.038,414,2.095,415,1.948,416,1.038,417,0.899,418,0.899,419,1.814,420,0.966,421,0.966,422,1.117,423,0.966,424,1.743,425,0.966,426,0.966,427,0.899,428,0.966,429,0.966,430,0.966,431,0.966,432,0.966,433,0.966,434,0.966,435,1.507,436,0.966,437,0.966,438,1.811,439,2.007,440,1.533,441,0.899,442,1.2,443,2.147,444,1.289,445,1.741,446,1.038,447,1.489,448,0.966,449,1.289,450,1.038,451,1.901,452,1.289,453,1.489,454,2.09,455,1.507,456,1.688,457,1.948,458,2.232,459,1.901,460,1.489,461,1.901,462,1.117,463,0.899,464,1.038,465,1.507,466,1.038,467,1.038,468,0.899,469,2.207,470,1.741,471,1.038,472,1.038,473,1.403,474,1.038,475,1.215,476,1.489,477,1.038,478,1.038,479,1.038,480,1.038,481,1.038,482,1.533,483,1.038,484,1.038,485,0.966,486,1.385,487,1.038,488,1.038,489,1.688,490,1.038,491,1.038,492,1.038,493,1.038,494,1.688,495,1.038,496,1.038,497,1.038,498,1.038,499,0.966,500,1.038,501,0.966,502,1.385,503,1.038,504,1.038,505,1.038,506,1.619,507,1.2,508,0.899,509,0.899,510,1.741,511,1.038,512,1.038,513,1.901,514,1.039,515,1.038,516,1.038,517,1.038,518,0.899,519,1.038,520,1.038,521,1.507,522,1.038,523,0.966,524,1.327,525,1.901,526,1.489,527,1.769,528,1.489,529,1.038,530,0.899,531,1.038,532,0.966,533,2.095,534,1.038,535,0.899,536,1.038,537,1.038,538,1.038,539,1.038,540,1.038,541,1.038,542,0.966,543,0.899,544,0.837,545,1.038]],["title/interfaces/DataGridSortState.html",[370,0.412,444,1.068]],["body/interfaces/DataGridSortState.html",[0,0.059,3,0.219,4,0.457,8,0.219,9,0.135,10,0.135,23,0.881,24,0.029,25,0.777,26,0.58,30,0.767,31,0.856,37,1.614,38,0.454,39,0.945,43,1.251,59,0.535,64,1.286,69,0.28,73,0.28,76,0.58,79,0.672,88,0.708,138,0.416,151,0.755,162,0.016,163,0.016,164,0.312,166,0.672,169,0.723,184,0.829,192,2.001,195,0.578,196,0.346,197,0.578,203,0.777,215,0.708,235,0.578,328,0.578,330,0.723,331,0.777,334,0.723,338,0.623,344,1.232,348,0.672,370,0.77,371,1.644,372,0.896,373,0.896,374,1.035,375,1.616,376,1.944,377,2.166,378,1.486,379,1.035,380,1.505,381,1.738,382,1.035,383,1.933,384,1.738,385,1.644,386,1.035,387,2.01,388,1.035,389,1.035,390,1.035,391,1.616,392,1.866,393,1.382,394,1.382,395,0.623,396,1.738,397,2.01,398,1.766,399,1.486,400,1.486,401,2.187,402,1.653,403,2.005,404,1.738,405,1.035,406,1.486,407,1.382,408,1.035,409,1.382,410,1.436,411,0.835,412,1.738,413,1.035,414,2.205,415,2.12,416,1.035,417,0.896,418,0.896,419,1.909,420,0.963,421,0.963,422,1.115,423,0.963,424,1.741,425,0.963,426,0.963,427,0.896,428,0.963,429,0.963,430,0.963,431,0.963,432,0.963,433,0.963,434,0.963,435,1.505,436,0.963,437,0.963,438,1.737,439,1.616,440,1.198,441,0.896,442,1.198,443,2.146,444,1.505,445,1.899,446,1.486,447,2.092,448,1.382,449,1.286,450,1.035,451,1.899,452,1.286,453,1.486,454,2.089,455,1.286,456,1.53,457,1.766,458,2.204,459,1.035,460,1.035,461,1.035,462,1.115,463,0.896,464,1.035,465,1.505,466,1.035,467,1.035,468,0.896,469,2.205,470,1.738,471,1.035,472,1.035,473,1.401,474,1.035,475,1.213,476,1.486,477,1.035,478,1.035,479,1.035,480,1.035,481,1.035,482,1.53,483,1.035,484,1.035,485,0.963,486,1.382,487,1.035,488,1.035,489,1.687,490,1.035,491,1.035,492,1.035,493,1.035,494,1.687,495,1.035,496,1.035,497,1.035,498,1.035,499,0.963,500,1.035,501,0.963,502,1.382,503,1.035,504,1.035,505,1.035,506,1.617,507,1.198,508,0.896,509,0.896,510,1.738,511,1.035,512,1.035,513,1.899,514,1.037,515,1.035,516,1.035,517,1.035,518,0.896,519,1.035,520,1.035,521,1.505,522,1.035,523,0.963,524,1.325,525,1.899,526,1.486,527,1.766,528,1.486,529,1.035,530,0.896,531,1.035,532,0.963,533,2.092,534,1.035,535,0.896,536,1.035,537,1.035,538,1.035,539,1.035,540,1.035,541,1.035,542,0.963,543,0.896,544,0.835,545,1.035]],["title/interfaces/DataGridState.html",[370,0.412,518,1.068]],["body/interfaces/DataGridState.html",[0,0.058,3,0.216,4,0.454,8,0.216,9,0.134,10,0.134,23,0.877,24,0.029,25,0.766,26,0.575,30,0.759,31,0.884,37,1.612,38,0.448,39,0.941,43,1.236,59,0.527,69,0.276,73,0.276,76,0.579,79,0.662,88,0.701,138,0.411,151,0.755,162,0.016,163,0.016,164,0.308,166,0.662,169,0.713,184,0.821,192,1.998,195,0.57,196,0.341,197,0.57,203,0.766,215,0.701,235,0.57,328,0.57,330,0.713,331,0.766,334,0.713,338,0.615,344,1.224,348,0.662,370,0.768,371,1.803,372,0.884,373,0.884,374,1.021,375,1.604,376,1.94,377,2.163,378,1.471,379,1.021,380,1.493,381,1.724,382,1.021,383,1.874,384,1.724,385,1.633,386,1.021,387,2,388,1.021,389,1.021,390,1.021,391,1.604,392,1.731,393,1.368,394,1.368,395,0.615,396,1.724,397,2,398,1.755,399,1.471,400,1.471,401,2.182,402,1.695,403,2.113,404,1.724,405,1.021,406,1.471,407,1.368,408,1.021,409,1.368,410,1.412,411,0.823,412,1.724,413,1.021,414,2.238,415,1.937,416,1.021,417,0.884,418,0.884,419,1.858,420,0.95,421,0.95,422,1.104,423,0.95,424,1.803,425,0.95,426,0.95,427,0.884,428,0.95,429,0.95,430,0.95,431,0.95,432,0.95,433,0.95,434,0.95,435,1.493,436,0.95,437,0.95,438,1.854,439,1.604,440,1.186,441,0.884,442,1.186,443,2.227,444,1.633,445,1.724,446,1.021,447,1.471,448,0.95,449,1.633,450,1.021,451,2,452,1.633,453,1.471,454,2.162,455,1.633,456,1.521,457,1.755,458,2.199,459,1.021,460,1.021,461,1.021,462,1.104,463,0.884,464,1.021,465,1.803,466,1.021,467,1.021,468,0.884,469,2.197,470,1.724,471,1.021,472,1.021,473,1.73,474,1.021,475,1.203,476,1.471,477,1.021,478,1.021,479,1.021,480,1.021,481,1.021,482,1.521,483,1.021,484,1.021,485,0.95,486,1.368,487,1.021,488,1.021,489,1.679,490,1.021,491,1.021,492,1.021,493,1.021,494,1.679,495,1.021,496,1.021,497,1.021,498,1.021,499,0.95,500,1.021,501,0.95,502,1.368,503,1.021,504,1.021,505,1.021,506,1.61,507,1.186,508,0.884,509,0.884,510,1.724,511,1.021,512,1.021,513,1.887,514,1.027,515,1.021,516,1.021,517,1.471,518,1.274,519,1.021,520,1.471,521,1.493,522,1.021,523,0.95,524,1.317,525,1.887,526,1.471,527,1.755,528,1.471,529,1.021,530,0.884,531,1.021,532,0.95,533,2.083,534,1.021,535,0.884,536,1.021,537,1.021,538,1.021,539,1.021,540,1.021,541,1.021,542,0.95,543,0.884,544,0.823,545,1.021,546,3.978]],["title/interfaces/DataGridSummary.html",[370,0.412,535,1.068]],["body/interfaces/DataGridSummary.html",[0,0.058,3,0.216,4,0.454,8,0.216,9,0.134,10,0.134,23,0.877,24,0.029,25,1.104,26,0.575,30,0.759,31,0.868,37,1.612,38,0.448,39,0.963,43,1.271,59,0.527,64,1.633,69,0.276,73,0.276,76,0.579,79,0.662,88,0.822,138,0.411,151,0.755,162,0.016,163,0.016,164,0.308,166,0.662,169,0.713,184,0.821,192,1.998,195,0.57,196,0.341,197,0.57,203,0.766,215,0.701,235,0.57,328,0.57,330,0.713,331,0.766,334,0.713,338,0.615,344,1.224,348,0.662,370,0.768,371,1.633,372,0.884,373,0.884,374,1.021,375,1.755,376,1.94,377,2.159,378,1.471,379,1.021,380,1.493,381,1.724,382,1.021,383,1.93,384,1.724,385,1.633,386,1.021,387,2.272,388,1.021,389,1.021,390,1.021,391,1.604,392,1.731,393,1.368,394,1.368,395,0.615,396,1.724,397,2,398,1.755,399,1.471,400,1.471,401,2.162,402,1.637,403,1.997,404,1.724,405,1.021,406,1.471,407,1.368,408,1.021,409,1.368,410,1.412,411,0.823,412,1.724,413,1.021,414,2.083,415,1.937,416,1.021,417,0.884,418,0.884,419,1.803,420,0.95,421,0.95,422,1.104,423,0.95,424,1.731,425,0.95,426,0.95,427,0.884,428,0.95,429,0.95,430,0.95,431,0.95,432,0.95,433,0.95,434,0.95,435,1.493,436,0.95,437,0.95,438,1.73,439,1.604,440,1.186,441,0.884,442,1.186,443,2.113,444,1.274,445,1.724,446,1.021,447,1.471,448,0.95,449,1.274,450,1.021,451,1.887,452,1.274,453,1.471,454,2.082,455,1.274,456,1.521,457,1.755,458,2.199,459,1.021,460,1.021,461,1.021,462,1.104,463,0.884,464,1.021,465,1.493,466,1.021,467,1.021,468,0.884,469,2.197,470,1.724,471,1.021,472,1.021,473,1.39,474,1.021,475,1.203,476,1.471,477,1.021,478,1.021,479,1.021,480,1.021,481,1.021,482,1.521,483,1.021,484,1.021,485,0.95,486,1.368,487,1.021,488,1.021,489,1.679,490,1.021,491,1.021,492,1.021,493,1.021,494,1.679,495,1.021,496,1.021,497,1.021,498,1.021,499,0.95,500,1.021,501,0.95,502,1.368,503,1.021,504,1.021,505,1.021,506,1.61,507,1.186,508,0.884,509,0.884,510,1.724,511,1.021,512,1.021,513,1.887,514,1.027,515,1.021,516,1.021,517,1.021,518,0.884,519,1.021,520,1.021,521,1.493,522,1.021,523,0.95,524,1.317,525,1.887,526,1.471,527,1.755,528,1.471,529,1.021,530,0.884,531,1.021,532,0.95,533,2.272,534,1.471,535,1.274,536,1.471,537,1.471,538,1.471,539,1.887,540,1.724,541,1.724,542,1.604,543,1.493,544,1.39,545,1.887]],["title/components/HeaderComponent.html",[0,0.07,140,1.068]],["body/components/HeaderComponent.html",[0,0.121,1,1.727,2,1.977,3,0.325,4,0.37,5,1.536,6,1.653,7,1.653,8,0.325,9,0.301,10,0.307,12,1.653,13,2.683,14,2.455,15,2.633,16,2.087,17,1.939,18,1.354,19,1.84,21,2.249,23,0.85,24,0.029,26,0.513,27,2.43,30,1.001,31,0.845,33,3.462,38,0.674,39,0.674,41,2.589,62,4.261,69,0.604,70,1.238,71,1.939,72,3.985,73,0.416,76,0.37,77,1.072,79,1.379,80,1.946,88,1.013,89,2.633,90,2.43,93,1.782,94,2.287,97,2.589,98,1.925,99,3.065,100,2.27,101,2.086,102,1.782,103,2.086,104,3.065,105,3.462,106,3.87,107,3.065,108,3.065,109,2.742,111,1.782,117,2.742,120,1.925,123,2.742,124,1.782,125,3.14,129,2.633,130,2.484,132,1.072,133,2.087,134,2.087,135,1.653,136,2.402,137,1.653,138,0.78,139,2.087,140,1.933,141,1.653,142,1.072,143,1.653,144,1.33,145,1.653,146,1.153,147,1.653,148,1.153,149,1.653,150,1.238,151,0.463,152,1.653,153,1.153,154,1.653,155,1.238,156,1.238,157,1.653,158,1.429,159,1.653,160,1.653,161,1.653,162,0.021,163,0.021,203,1.675,266,2.742,322,2.086,324,2.742,329,3.14,330,1.072,331,1.455,334,1.072,335,3.498,336,3.065,337,2.569,347,2.27,348,0.997,354,3.136,362,3.14,395,0.925,409,2.22,435,1.33,547,3.498,548,5.747,549,5.747,550,6.037,551,5.747,552,4.839,553,4.839,554,4.839,555,4.154,556,4.154,557,4.154,558,4.154,559,4.154,560,4.154,561,3.065,562,3.065,563,3.136,564,4.154]],["title/components/InputComponent.html",[0,0.07,142,0.861]],["body/components/InputComponent.html",[0,0.125,1,1.039,2,1.53,3,0.199,4,0.226,5,1.644,6,1.769,7,1.011,8,0.199,9,0.302,10,0.307,12,1.011,13,2.486,14,1.644,16,1.49,17,1.385,18,0.967,19,1.424,21,1.606,23,0.412,24,0.029,25,1.696,26,0.314,27,1.735,29,2.747,30,1.212,31,0.83,35,1.88,38,1.03,39,1.03,41,2.652,43,1.045,47,1.735,59,0.937,64,1.199,69,0.445,70,0.758,71,2.508,73,0.254,76,0.226,77,1.148,80,2.066,81,2.429,82,2.857,83,2.046,85,1.52,87,1.276,88,0.66,90,1.178,91,1.276,93,2.897,94,2.527,95,1.735,97,2.585,101,1.276,103,2.232,110,2.273,111,2.809,113,3.472,115,3.128,116,1.52,120,2.06,122,2.659,124,2.427,125,1.389,126,2.463,127,1.276,129,1.276,132,0.656,133,1.49,134,2.359,135,1.011,136,2.616,137,1.011,138,0.557,139,1.49,140,0.814,141,1.011,142,1.266,143,1.011,144,0.814,145,1.011,146,0.705,147,1.011,148,0.705,149,1.011,150,0.758,151,0.283,152,1.011,153,0.705,154,1.011,155,0.758,156,0.758,157,1.011,158,0.874,159,1.011,160,1.011,161,1.011,162,0.015,163,0.015,164,0.697,166,0.61,167,2.239,168,2.046,169,0.967,171,2.046,175,2.763,176,3.238,177,3.153,178,1.88,179,2.046,180,2.046,182,2.046,184,1.289,185,2.046,195,1.168,196,0.675,197,1.244,209,2.429,210,2.429,211,2.68,212,2.68,213,2.429,215,0.66,217,2.232,220,1.389,221,1.389,222,1.389,223,1.389,234,2.68,235,1.387,236,3.735,238,2.68,239,1.389,242,2.989,258,1.678,265,2.935,268,2.68,269,1.389,270,1.678,271,1.678,272,1.678,289,1.678,296,1.389,298,1.678,311,1.678,314,2.935,319,1.389,322,2.747,323,2.472,324,1.678,328,0.773,329,1.389,330,0.656,333,2.472,334,0.656,344,1.067,345,2.934,347,2.989,348,0.61,352,2.232,354,1.52,362,2.046,367,2.472,383,1.116,395,0.834,402,0.967,410,1.165,411,1.116,494,1.559,514,1.148,561,1.875,563,2.934,565,2.14,566,3.153,567,2.472,568,3.153,569,4.175,570,4.447,571,2.763,572,4.446,573,3.745,574,4.446,575,2.046,576,4.13,577,3.912,578,4.446,579,3.978,580,3.281,581,2.763,582,4.607,583,4.446,584,3.612,585,2.542,586,4.13,587,4.13,588,2.542,589,2.542,590,2.472,591,3.153,592,2.542,593,2.542,594,2.542,595,2.542,596,3.745,597,3.745,598,3.281,599,3.744,600,2.935,601,2.935,602,3.744,603,2.763,604,3.153,605,1.389,606,3.744,607,3.745,608,2.542,609,3.153,610,3.153,611,3.153,612,2.542,613,1.875,614,2.14,615,2.14,616,2.542,617,1.875,618,2.542,619,1.875,620,2.763,621,4.609,622,1.875,623,2.081,624,1.875,625,4.175,626,1.875,627,2.542,628,1.875,629,1.875,630,2.542,631,2.763,632,1.875,633,2.935,634,2.763,635,1.875,636,3.745,637,3.281,638,2.542,639,1.875,640,1.875,641,1.875,642,3.238,643,1.875,644,1.678,645,1.678,646,2.763,647,2.14,648,2.472,649,2.542,650,2.542,651,2.542,652,4.446,653,3.62,654,2.542,655,1.875]],["title/components/PageComponent.html",[0,0.07,144,1.068]],["body/components/PageComponent.html",[0,0.141,1,1.273,2,2.067,3,0.265,4,0.302,5,1.253,6,1.348,7,1.348,8,0.265,9,0.282,10,0.291,12,1.348,13,2.609,14,2.537,16,1.826,17,1.697,18,1.184,19,1.666,21,1.968,23,0.744,24,0.029,26,0.418,30,1.065,31,0.623,38,0.549,39,0.549,41,2.392,69,0.558,70,1.01,73,0.339,76,0.302,77,0.874,80,1.864,88,0.917,89,2.613,90,2.411,93,1.453,94,2.32,95,1.57,97,2.636,98,2.126,99,3.386,100,3.047,101,2.927,102,1.453,103,1.701,104,2.5,105,3.029,106,3.386,107,2.5,108,2.5,109,2.236,110,1.57,111,2.232,123,2.236,124,2.232,125,1.851,127,2.8,128,2.852,129,2.304,130,2.026,131,2.5,132,0.874,133,1.826,134,1.826,135,1.348,136,2.22,137,1.348,138,0.829,139,1.826,140,1.786,141,1.348,142,0.874,143,1.348,144,1.786,145,1.348,146,0.94,147,1.348,148,0.94,149,1.348,150,1.01,151,0.731,152,1.348,153,0.94,154,1.348,155,1.01,156,1.01,157,1.348,158,1.165,159,1.348,160,1.348,161,1.348,162,0.019,163,0.019,203,1.617,215,0.809,217,2.613,268,2.843,329,2.843,331,1.444,333,2.236,337,2.446,344,1.398,347,2.507,348,1.101,352,1.701,356,2.852,359,4.382,362,3.5,363,2.5,364,2.852,395,0.754,475,1.744,527,1.79,532,1.79,543,1.085,562,3.386,563,3.486,575,2.507,605,2.843,623,2.071,632,2.5,656,2.852,657,5.204,658,4.183,659,5.204,660,5.204,661,5.204,662,6.01,663,5.204,664,3.84,665,5.204,666,5.204,667,4.382,668,6.01,669,5.204,670,5.204,671,5.204,672,5.204,673,5.204,674,5.204,675,5.204,676,3.84,677,5.204,678,5.204,679,5.204,680,5.204,681,5.204,682,4.382,683,5.204,684,5.204,685,5.204,686,5.204,687,5.204,688,4.382,689,3.84,690,5.204,691,6.01,692,5.204,693,5.204,694,5.204,695,4.382,696,5.204,697,5.204,698,4.382,699,5.204,700,6.146,701,5.204,702,4.382,703,5.204,704,5.204,705,5.204,706,5.578,707,5.578,708,5.578,709,3.388,710,3.388,711,3.388,712,3.388,713,3.388,714,5.204,715,3.864,716,3.864,717,2.5,718,3.388,719,3.388,720,3.388,721,2.236,722,3.388,723,3.388,724,3.388,725,3.388,726,5.204,727,4.589,728,3.388,729,3.388,730,3.388]],["title/components/SelectComponent.html",[0,0.07,146,0.925]],["body/components/SelectComponent.html",[0,0.124,1,0.847,2,1.297,3,0.152,4,0.173,5,1.395,6,0.774,7,0.774,8,0.152,9,0.295,10,0.3,12,0.774,13,2.35,14,1.395,15,1.533,16,1.215,17,1.717,18,0.788,19,1.208,21,1.31,23,0.315,24,0.029,25,1.706,26,0.693,27,1.415,29,2.756,30,1.232,31,0.791,35,1.533,37,0.467,38,1.005,39,1.042,41,2.591,43,0.941,47,1.415,53,1.31,59,0.816,64,0.978,69,0.428,70,0.58,71,2.307,73,0.195,76,0.173,77,0.973,80,2.045,81,2.816,82,2.537,83,1.669,85,1.163,87,0.976,88,1.026,89,1.893,90,2.388,91,2.474,92,3.283,93,2.876,94,2.584,95,2.284,97,2.757,98,1.98,101,2.588,102,2.114,103,1.893,110,2.603,111,2.777,113,2.947,115,2.777,116,1.163,120,2.473,122,3.482,124,2.41,125,2.916,126,0.976,127,0.976,129,0.976,132,0.502,133,1.215,134,2.124,135,0.774,136,2.525,137,0.774,138,0.794,139,1.215,140,0.623,141,0.774,142,0.502,143,0.774,144,0.623,145,0.774,146,1.186,147,0.774,148,0.54,149,0.774,150,0.58,151,0.612,152,0.774,153,0.54,154,0.774,155,0.58,156,0.58,157,0.774,158,0.669,159,0.774,160,0.774,161,0.774,162,0.013,163,0.013,164,0.68,166,0.905,167,1.826,168,1.669,169,0.788,171,1.669,173,2.016,176,2.016,178,1.533,179,1.669,180,1.669,182,1.669,184,1.219,185,1.669,192,0.91,195,1.064,196,0.573,197,1.133,209,2.06,210,2.06,211,2.334,212,2.334,213,2.06,215,0.753,217,2.145,220,1.062,221,1.062,222,1.062,223,1.062,234,2.334,235,1.364,236,3.402,238,2.334,239,1.062,242,2.693,258,1.284,268,2.334,269,1.062,270,1.284,271,1.284,272,1.284,289,1.284,296,1.062,298,1.284,311,1.284,314,2.489,316,1.637,319,1.062,322,2.923,323,2.016,324,1.284,328,1.133,329,2.816,330,1.103,331,1.046,332,3.175,333,2.016,334,0.502,336,3.426,337,1.501,338,1.511,340,1.637,342,2.016,343,4.15,344,1.397,345,3.531,347,3.069,348,1.348,349,3.175,352,1.893,354,2.255,362,2.537,367,3.065,395,1.098,398,0.669,402,0.788,417,0.623,438,1.274,443,1.051,456,0.91,457,1.97,462,1.186,468,1.758,482,0.91,506,1.615,514,0.973,523,1.051,524,1.199,542,0.669,561,4.051,563,3.482,575,1.669,577,3.624,579,3.781,581,2.253,584,2.821,590,2.821,598,2.783,601,2.489,603,1.435,605,1.669,613,1.435,617,2.783,619,1.435,620,2.253,621,4.41,622,1.435,623,1.848,624,1.435,625,3.939,626,1.435,628,1.435,629,1.435,631,1.435,633,3.065,634,3.939,635,1.435,637,3.637,639,1.435,640,1.435,641,1.435,642,3.065,643,1.435,644,2.821,646,1.435,648,2.489,653,1.435,655,1.435,664,1.435,682,3.175,717,2.783,731,1.637,732,2.571,733,3.598,734,3.054,735,3.054,736,3.054,737,2.253,738,3.175,739,3.771,740,3.054,741,4.622,742,3.054,743,4.273,744,4.622,745,5.49,746,3.524,747,3.771,748,1.945,749,4.929,750,3.054,751,1.945,752,5.49,753,4.226,754,1.945,755,1.945,756,3.054,757,1.945,758,1.945,759,2.571,760,1.945,761,1.945,762,1.945,763,2.253,764,3.054,765,3.054,766,3.054,767,1.637,768,1.945,769,3.054,770,3.771,771,3.771,772,1.826,773,3.054,774,3.054,775,1.945,776,3.054,777,3.054,778,2.571,779,1.945,780,1.945,781,1.435,782,1.284,783,1.945,784,1.945,785,1.945,786,6.196,787,3.637,788,4.929,789,1.945,790,1.945,791,1.945,792,1.945,793,3.054,794,1.945,795,4.929,796,3.771,797,3.771,798,2.783,799,3.771,800,4.273,801,1.435,802,1.945,803,1.945,804,4.273,805,1.945,806,2.016,807,3.054,808,1.945,809,1.945,810,1.435,811,1.945,812,1.945,813,1.945,814,1.637,815,3.771,816,3.771,817,1.945,818,1.945,819,1.945,820,1.637,821,1.637,822,1.637,823,1.945,824,1.637,825,1.945]],["title/components/TextareaComponent.html",[0,0.07,148,0.925]],["body/components/TextareaComponent.html",[0,0.121,1,0.91,2,1.375,3,0.167,4,0.19,5,1.478,6,1.591,7,0.848,8,0.167,9,0.306,10,0.31,12,0.848,13,2.399,14,1.478,16,1.305,17,1.792,18,0.846,19,1.28,21,1.407,23,0.346,24,0.029,25,1.627,26,0.263,27,1.519,29,2.569,30,1.164,31,0.86,35,1.646,37,0.511,38,1.042,39,1.027,41,2.699,43,1.018,47,1.519,48,2.95,59,0.857,64,1.639,69,0.4,70,0.635,71,2.229,73,0.213,76,0.292,77,1.032,80,2.052,81,1.792,82,2.648,83,1.792,85,1.275,87,1.07,88,0.704,90,0.987,91,1.07,93,2.854,94,2.334,95,1.519,97,2.516,98,1.852,100,1.164,101,2.254,103,1.646,105,1.407,109,1.407,110,2.08,111,2.699,113,2.898,115,3.188,116,1.275,120,1.852,122,1.961,124,2.287,126,2.677,127,1.07,129,1.07,130,1.275,131,1.573,132,0.55,133,1.305,134,2.122,135,0.848,136,2.534,137,0.848,138,0.667,139,1.305,140,0.682,141,0.848,142,0.55,143,0.848,144,0.682,145,0.848,146,0.591,147,0.848,148,1.245,149,0.848,150,0.635,151,0.238,152,0.848,153,0.591,154,0.848,155,0.635,156,0.635,157,0.848,158,0.733,159,0.848,160,0.848,161,0.848,162,0.013,163,0.013,164,0.706,166,0.959,167,1.961,168,1.792,169,0.846,170,2.42,171,1.792,173,1.407,175,2.42,176,2.165,178,1.646,179,1.792,180,1.792,182,1.792,184,1.244,185,1.792,192,0.978,195,1.1,196,0.598,197,1.165,206,2.761,209,2.184,210,2.184,211,2.452,212,2.452,213,2.184,215,0.578,217,2.254,220,1.164,221,1.164,222,1.164,223,1.164,234,2.452,235,1.392,236,3.199,238,2.452,239,1.164,242,2.648,258,2.165,265,2.639,268,2.452,269,1.164,270,1.407,271,1.407,272,1.407,289,2.165,296,1.164,298,1.407,311,2.165,314,2.639,319,1.164,322,2.433,323,2.639,328,1,329,1.164,330,0.55,334,0.55,344,1.279,345,3.06,347,2.452,348,1.077,352,2.677,360,4.489,362,1.164,363,1.573,367,2.639,368,1.794,394,1.544,395,0.89,402,1.488,410,1.14,411,0.978,418,1.28,427,0.682,454,0.733,462,0.91,482,0.978,486,1.128,489,1.192,494,1.445,502,1.375,506,1.566,514,1.321,524,0.55,543,1.846,544,1.338,563,3.06,569,4.447,570,4.644,571,2.42,575,1.792,576,3.779,577,3.726,579,3.726,580,4.54,581,2.42,582,4.309,584,2.963,590,2.165,591,2.761,598,2.95,599,3.366,600,2.639,601,2.639,602,3.366,603,2.95,604,2.761,605,1.792,606,3.366,609,2.761,610,2.761,611,2.761,613,1.573,614,1.794,615,1.794,617,1.573,619,1.573,620,2.42,621,4.496,622,1.573,623,1.929,624,2.42,625,4.165,626,1.573,628,1.573,629,1.573,631,1.573,632,1.573,633,3.378,634,2.95,635,1.573,637,2.42,639,3.312,640,1.573,641,1.573,642,3.199,643,1.573,644,2.963,645,1.407,646,1.573,647,1.794,648,2.639,653,1.573,655,1.573,717,1.573,746,1.407,767,1.794,772,1.961,782,1.407,810,2.42,814,2.761,824,1.794,826,1.573,827,4.012,828,2.761,829,3.997,830,3.28,831,5.645,832,3.997,833,3.28,834,3.997,835,4.753,836,3.28,837,3.997,838,2.131,839,3.28,840,3.28,841,4.489,842,4.489,843,2.131,844,2.131,845,3.366,846,2.131,847,2.131,848,3.28,849,2.131,850,2.131,851,2.131,852,2.131,853,3.28,854,2.131,855,3.28,856,3.28,857,5.118,858,2.131,859,4.489,860,3.28,861,3.997,862,3.997,863,3.997,864,3.997,865,4.08,866,3.997,867,3.28,868,3.28,869,2.131,870,3.28,871,2.131,872,2.131,873,1.573,874,3.997,875,2.131,876,3.28,877,2.131,878,2.131,879,1.794,880,1.794,881,2.131,882,1.794,883,2.131,884,4.753,885,2.131,886,1.794,887,3.28,888,2.131,889,3.997,890,2.95,891,2.131,892,2.131,893,2.131,894,2.131,895,2.131,896,2.131]],["title/interfaces/User.html",[337,1.327,370,0.412]],["body/interfaces/User.html",[3,0.416,4,0.473,8,0.416,9,0.257,10,0.257,24,0.027,26,0.655,31,0.721,43,1.22,76,0.473,138,0.975,162,0.025,163,0.025,215,1.071,337,2.419,370,0.655,372,1.7,897,4.47]],["title/modules/ZtDataGridModule.html",[898,1.147,899,2.201]],["body/modules/ZtDataGridModule.html",[3,0.395,4,0.449,8,0.395,9,0.244,10,0.244,18,1.302,19,1.89,24,0.028,53,2.164,69,0.645,70,1.504,73,0.505,76,0.449,77,1.302,80,1.504,132,1.302,150,2.05,151,0.698,162,0.024,163,0.024,164,0.563,196,0.623,623,2.008,898,1.736,899,4.434,900,2.338,901,2.164,902,3.418,903,2.757,904,3.418,905,4.248,906,4.248,907,4.248,908,3.225,909,4.248,910,5.046,911,5.903,912,5.046,913,5.046,914,5.046,915,3.53]],["title/modules/ZtInputModule.html",[898,1.147,916,2.201]],["body/modules/ZtInputModule.html",[3,0.4,4,0.454,8,0.4,9,0.247,10,0.247,18,1.533,19,1.902,24,0.028,53,2.188,69,0.629,70,1.52,73,0.51,76,0.454,77,1.317,132,1.317,142,1.777,162,0.024,163,0.024,164,0.569,196,0.63,623,2.03,898,1.755,900,2.363,901,2.188,902,2.787,903,2.787,904,3.434,908,3.245,915,3.552,916,4.444,917,4.295,918,4.295,919,4.295,920,5.101,921,5.101,922,5.101]],["title/components/ZtPaginatorComponent.html",[0,0.07,153,0.925]],["body/components/ZtPaginatorComponent.html",[0,0.124,1,1.135,2,1.639,3,0.225,4,0.256,5,1.062,6,1.143,7,1.143,8,0.225,9,0.315,10,0.316,12,1.143,13,2.541,14,1.762,16,1.628,17,1.513,18,1.056,19,1.526,21,1.755,23,0.466,24,0.029,26,0.354,27,1.895,31,0.815,33,2.7,35,2.054,38,0.925,39,0.773,41,2.777,43,0.992,55,2.999,59,0.992,62,3.428,64,1.31,69,0.409,70,0.856,71,2.03,72,2.7,73,0.287,76,0.256,77,1.23,79,1.143,80,2.048,87,1.442,88,0.967,89,1.442,90,1.33,91,1.442,92,1.717,93,1.755,95,1.33,97,1.232,98,1.33,102,2.575,110,1.895,111,2.228,120,1.33,124,1.755,125,1.569,126,1.442,132,0.741,133,1.628,134,2.185,135,1.143,136,2.466,137,1.143,138,0.772,139,1.628,140,0.919,141,1.143,142,0.741,143,1.143,144,0.919,145,1.143,146,0.797,147,1.143,148,0.797,149,1.143,150,0.856,151,0.531,152,1.143,153,1.441,154,1.143,155,0.856,156,2.034,157,1.143,158,0.988,159,1.143,160,1.143,161,1.143,162,0.017,163,0.017,164,0.726,166,1.143,168,2.235,171,2.235,178,2.054,179,2.235,180,2.235,182,2.235,184,1.318,185,2.235,195,1.212,196,0.641,197,1.072,205,3.018,209,2.603,210,2.603,211,2.837,212,2.837,213,2.603,215,1.006,217,3.067,220,1.569,221,1.569,222,1.569,223,1.569,234,2.837,235,1.294,237,3.516,238,2.837,239,3.118,241,4.429,242,3.208,266,1.895,269,2.235,293,2.119,294,2.119,295,2.119,296,2.603,319,1.569,322,1.442,327,2.119,328,0.844,337,1.143,338,0.639,342,4.215,352,1.442,395,0.639,402,1.341,410,1.442,422,1.322,456,1.219,473,1.548,475,1.74,506,1.441,507,1.219,508,1.31,514,1.056,567,2.7,575,2.235,601,2.7,605,3.337,658,3.624,676,3.018,721,3.767,746,3.767,763,3.018,772,2.446,782,2.7,787,3.018,873,3.516,886,3.444,890,2.119,923,4.297,924,2.418,925,4.091,926,4.805,927,3.018,928,3.444,929,4.373,930,3.444,931,4.091,932,4.091,933,3.444,934,4.765,935,4.765,936,4.091,937,4.805,938,4.622,939,3.444,940,4.373,941,4.373,942,4.373,943,4.012,944,3.444,945,4.373,946,4.012,947,4.012,948,4.012,949,2.871,950,2.871,951,3.444,952,2.871,953,2.871,954,3.832,955,4.091,956,3.444,957,2.871,958,2.871,959,4.944,960,3.444,961,2.871,962,3.444,963,2.871,964,3.444,965,2.871,966,2.418,967,3.444,968,4.373,969,2.871,970,3.444,971,3.444,972,3.444,973,3.444,974,2.871,975,2.871,976,2.871,977,2.418,978,2.418,979,2.871,980,2.871,981,2.871,982,4.622,983,2.418,984,2.871,985,4.012,986,2.871,987,2.418,988,2.418,989,2.418,990,2.418,991,2.871,992,2.418,993,2.418]],["title/modules/ZtPaginatorModule.html",[898,1.147,994,2.201]],["body/modules/ZtPaginatorModule.html",[3,0.39,4,0.443,8,0.39,9,0.241,10,0.241,18,1.285,19,1.875,24,0.028,53,2.135,69,0.643,70,1.484,73,0.498,76,0.443,77,1.285,80,1.746,132,1.285,153,1.905,155,2.047,156,1.746,162,0.024,163,0.024,164,0.555,196,0.614,623,1.981,898,1.713,900,2.307,901,2.135,902,3.399,903,2.72,904,3.399,908,3.2,915,3.502,923,3.286,994,4.501,995,4.192,996,4.192,997,4.192,998,4.978,999,4.978,1000,3.673,1001,4.978]],["title/components/ZtPaginatorXComponent.html",[0,0.07,155,0.994]],["body/components/ZtPaginatorXComponent.html",[0,0.117,1,0.993,2,1.476,3,0.336,4,0.213,5,1.885,6,0.952,7,0.952,8,0.187,9,0.314,10,0.316,12,0.952,13,2.457,14,1.586,16,1.424,17,1.324,18,0.924,19,1.373,21,1.535,23,0.388,24,0.029,26,0.295,27,1.658,28,2.641,31,0.829,33,2.363,35,1.797,38,0.99,39,0.899,41,2.776,43,1.059,47,1.658,55,2.786,59,0.909,62,3.143,64,1.373,69,0.358,70,0.713,71,2.051,72,2.363,73,0.239,76,0.213,77,1.107,79,1.029,80,2.027,87,1.201,88,1.046,89,1.201,90,1.108,91,2.154,92,2.141,93,1.84,94,1.707,95,1.658,97,1.026,98,1.108,102,2.547,110,1.658,111,2.042,117,1.579,120,1.108,124,1.535,126,1.201,127,1.201,132,0.617,133,1.424,134,2.029,135,0.952,136,2.363,137,0.952,138,0.758,139,1.424,140,0.766,141,0.952,142,0.617,143,0.952,144,0.766,145,0.952,146,0.664,147,0.952,148,0.664,149,0.952,150,0.713,151,0.267,152,0.952,153,0.664,154,0.952,155,1.419,156,2.071,157,0.952,158,0.823,159,0.952,160,0.952,161,0.952,162,0.015,163,0.015,164,0.725,166,1.142,168,1.956,178,1.797,179,1.956,180,1.956,182,1.956,184,1.307,185,1.956,195,1.145,196,0.588,197,0.983,205,2.641,209,2.343,210,2.343,211,2.601,212,2.601,213,2.786,215,0.943,217,3.027,220,1.307,221,1.307,222,1.307,223,1.307,234,2.601,235,1.245,237,3.514,238,2.601,239,2.923,241,4.093,242,3.031,266,1.579,268,1.956,269,1.956,293,1.765,294,1.765,295,1.765,296,2.343,319,1.307,322,1.201,327,1.765,328,0.885,337,0.952,338,0.533,342,4.075,352,1.201,354,1.43,395,0.533,402,1.381,410,1.494,411,1.419,422,1.415,456,1.419,473,1.595,475,1.753,482,1.067,494,1.067,506,1.321,507,1.067,508,1.146,514,0.617,544,1.279,567,2.363,575,1.956,590,3.143,600,2.363,605,3.336,642,1.579,644,1.579,648,1.579,658,3.98,664,2.641,676,2.641,721,3.532,737,2.641,746,3.143,763,3.514,772,2.565,782,3.143,787,2.641,798,3.165,806,3.532,821,3.014,822,3.014,873,3.165,884,4.802,890,1.765,923,4.291,926,4.802,927,3.514,929,3.014,933,3.014,937,4.802,938,3.612,939,3.014,940,4.009,941,4.009,942,4.009,943,3.612,944,3.014,945,4.009,946,3.612,947,3.612,948,3.612,951,3.014,954,3.514,956,3.014,959,4.67,960,3.014,962,3.014,964,3.014,966,2.014,967,3.014,968,4.009,970,3.014,971,3.014,972,3.014,973,3.014,977,2.014,978,3.612,982,4.67,983,2.014,985,3.612,987,3.014,988,3.014,989,3.014,990,3.014,992,2.014,993,2.014,1000,4.796,1002,2.014,1003,3.579,1004,3.579,1005,3.579,1006,4.29,1007,4.29,1008,3.579,1009,3.579,1010,4.762,1011,4.29,1012,4.67,1013,3.579,1014,2.392,1015,3.612,1016,2.392,1017,3.579,1018,2.392,1019,2.392,1020,3.579,1021,2.392,1022,4.762,1023,3.579,1024,2.392,1025,3.579,1026,4.293,1027,2.392,1028,4.762,1029,2.392,1030,2.392,1031,2.392,1032,2.392,1033,2.392,1034,2.392,1035,2.392,1036,2.392,1037,2.392,1038,4.29,1039,5.099,1040,3.579,1041,3.579,1042,2.392,1043,3.579,1044,2.392,1045,1.765,1046,2.392,1047,2.392]],["title/modules/ZtSelectModule.html",[898,1.147,1048,2.201]],["body/modules/ZtSelectModule.html",[3,0.397,4,0.452,8,0.397,9,0.245,10,0.245,18,1.528,19,1.896,24,0.028,53,2.176,69,0.647,70,1.512,73,0.508,76,0.452,77,1.309,132,1.309,146,1.909,162,0.024,163,0.024,164,0.566,196,0.626,623,2.019,738,4.986,781,3.743,898,1.745,900,2.351,901,2.176,902,2.772,903,2.772,904,3.426,908,3.235,915,3.541,1048,4.439,1049,4.271,1050,4.271,1051,4.271,1052,5.073,1053,5.073,1054,5.073]],["title/modules/ZtTextareaModule.html",[898,1.147,1055,2.201]],["body/modules/ZtTextareaModule.html",[3,0.399,4,0.454,8,0.399,9,0.247,10,0.247,18,1.315,19,1.901,24,0.028,53,2.186,69,0.629,70,1.519,73,0.51,76,0.454,77,1.315,132,1.315,148,1.91,162,0.024,163,0.024,164,0.568,196,0.629,623,2.028,898,1.753,900,2.361,901,2.186,902,3.432,903,2.784,904,3.432,908,3.244,915,3.551,1055,4.443,1056,4.291,1057,4.291,1058,4.291,1059,5.096,1060,5.096,1061,5.096]],["title/components/ZtUiComponents.html",[0,0.07,158,1.147]],["body/components/ZtUiComponents.html",[0,0.129,1,1.596,2,2.31,3,0.379,4,0.43,5,2.272,6,1.923,7,1.923,8,0.379,9,0.234,10,0.325,12,1.923,13,2.731,14,2.272,18,1.247,23,0.933,24,0.028,69,0.484,73,0.484,76,0.43,77,1.247,80,2.045,132,1.247,133,2.29,134,2.29,135,1.923,136,2.531,137,1.923,138,0.856,139,2.29,140,1.547,141,1.923,142,1.247,143,1.923,144,1.547,145,1.923,146,1.341,147,1.923,148,1.341,149,1.923,150,1.44,151,0.539,152,1.923,153,1.341,154,1.923,155,1.44,156,1.44,157,1.923,158,2.188,159,2.445,160,1.923,161,1.923,162,0.024,163,0.024,164,0.539,1062,4.069,1063,6.145]],["title/coverage.html",[1064,3.822]],["body/coverage.html",[0,0.136,1,1.271,8,0.265,9,0.339,10,0.339,11,2.845,15,1.697,24,0.029,31,0.89,71,1.25,79,0.811,94,2.763,140,1.082,142,0.872,144,1.082,146,0.938,148,0.938,150,1.007,151,0.745,153,0.938,155,1.007,156,1.549,158,1.163,162,0.019,163,0.019,164,0.757,165,2.845,337,1.345,338,0.753,370,0.804,371,1.082,373,2.121,380,1.082,385,1.082,392,1.082,440,1.007,444,1.082,449,1.082,452,1.082,455,1.082,463,1.082,509,1.082,518,1.082,521,1.082,530,1.082,535,1.082,547,2.845,565,2.845,633,4.436,645,2.231,656,2.845,731,2.845,801,2.493,826,2.493,827,2.021,897,2.845,909,2.845,923,3.024,924,2.845,1000,2.493,1002,2.845,1062,2.845,1064,2.845,1065,2.845,1066,3.379,1067,3.379,1068,3.379,1069,3.379,1070,3.379,1071,5.198,1072,3.379,1073,3.379,1074,3.379,1075,3.379,1076,3.379,1077,3.379,1078,6.512,1079,5.572,1080,3.379,1081,4.581,1082,3.379,1083,3.379,1084,3.379,1085,3.379,1086,3.379,1087,3.379,1088,3.379,1089,6.933,1090,3.379,1091,3.379,1092,4.431,1093,6.887,1094,2.845,1095,5.261,1096,2.845,1097,2.845,1098,4.61,1099,4.532,1100,4.532,1101,2.845,1102,2.845,1103,2.845,1104,2.845,1105,2.845,1106,4.581,1107,4.112,1108,3.857,1109,3.857,1110,4.298,1111,2.845,1112,4.112,1113,4.431,1114,2.845,1115,2.845,1116,2.845,1117,4.298,1118,2.845,1119,4.298,1120,2.845,1121,2.845,1122,3.379,1123,3.379,1124,2.845]],["title/dependencies.html",[901,1.719,1125,2.349]],["body/dependencies.html",[24,0.028,70,1.581,73,0.531,162,0.025,163,0.025,781,3.913,901,2.275,1126,6.729,1127,5.304,1128,5.304,1129,3.913,1130,5.304,1131,5.304,1132,5.304,1133,5.304,1134,5.304]],["title/miscellaneous/enumerations.html",[1135,1.524,1136,3.374]],["body/miscellaneous/enumerations.html",[0,0.112,9,0.258,10,0.258,24,0.026,26,0.658,39,0.865,162,0.025,163,0.025,164,0.595,173,3.521,524,1.377,826,3.936,827,3.19,865,5.132,879,4.491,880,4.491,882,5.132,1135,2.914,1136,4.491,1137,5.334]],["title/index.html",[26,0.412,1138,3.334]],["body/index.html",[0,0.133,1,1.428,2,2.255,3,0.316,4,0.359,5,2.096,8,0.316,9,0.195,10,0.31,14,1.903,15,2.998,16,2.256,17,1.491,18,1.041,24,0.028,29,2.024,30,0.77,38,0.654,47,1.868,48,2.975,49,3.395,50,3.395,52,2.975,55,2.203,56,2.661,57,2.661,58,2.661,59,0.983,60,2.661,65,2.975,69,0.515,71,2.208,76,0.359,77,1.041,80,2.002,88,0.999,100,2.203,142,1.328,151,0.703,156,1.78,162,0.021,163,0.021,167,3.689,169,1.041,170,2.975,171,2.811,172,4.333,178,3.397,184,1.273,195,0.832,196,0.635,197,1.062,200,3.395,201,3.395,235,1.062,338,1.262,375,1.387,376,1.534,377,1.291,383,1.202,410,1.146,418,1.648,419,1.648,422,1.119,424,1.291,438,1.202,442,1.78,448,1.387,458,1.387,462,1.657,465,1.648,473,1.689,475,1.463,489,1.202,524,1.041,544,1.202,566,3.395,567,2.661,568,5.398,569,4.182,570,3.797,571,4.182,586,3.395,587,3.395,600,2.661,689,2.975,695,4.333,721,2.661,732,3.395,733,4.333,737,3.797,753,2.975,759,3.395,798,3.797,806,2.661,810,2.975,827,3.077,828,3.395,898,1.387,901,1.729,927,3.797,928,3.395,930,3.395,954,2.975,1026,4.333,1045,4.731,1065,5.027,1124,3.395,1129,2.975,1139,5.146,1140,4.032,1141,4.032,1142,6.169,1143,5.146,1144,4.032,1145,4.032,1146,4.032,1147,4.032,1148,4.032,1149,4.032,1150,4.032,1151,4.032,1152,4.032,1153,4.032,1154,4.032,1155,4.032,1156,6.308,1157,6.308,1158,4.032,1159,4.032,1160,4.032,1161,4.032,1162,4.032,1163,4.032,1164,4.032,1165,4.032,1166,6.308,1167,5.668,1168,4.032,1169,4.032,1170,4.032,1171,4.032,1172,4.032,1173,4.032,1174,4.032,1175,4.032,1176,5.146,1177,5.146,1178,4.032,1179,4.032,1180,4.032,1181,4.032,1182,4.032,1183,4.032,1184,5.668,1185,4.032,1186,4.032,1187,5.146,1188,4.032,1189,4.032,1190,5.146,1191,4.032,1192,4.032,1193,4.032,1194,4.032,1195,4.032,1196,4.032,1197,5.146,1198,4.032,1199,4.032,1200,4.032,1201,4.032,1202,4.032,1203,4.032,1204,4.032,1205,4.032,1206,4.032,1207,4.032,1208,4.032,1209,5.668,1210,4.032,1211,4.032,1212,4.032,1213,4.032,1214,4.032,1215,4.032,1216,4.032]],["title/modules.html",[900,2.103]],["body/modules.html",[24,0.025,162,0.025,163,0.025,562,4.912,899,3.501,900,2.457,916,3.501,994,3.501,1045,4.912,1048,3.501,1055,3.501,1129,4.912,1217,6.657]],["title/overview.html",[1218,3.822]],["body/overview.html",[2,1.681,24,0.028,53,2.096,94,1.945,132,1.261,142,1.723,146,1.852,148,1.852,150,1.99,153,1.852,155,1.99,162,0.024,163,0.024,196,0.603,372,1.565,623,1.945,898,1.681,899,4.302,900,2.264,901,2.096,902,2.67,903,2.67,904,2.67,905,4.115,906,4.115,907,4.115,908,3.165,916,4.302,917,4.115,918,4.115,919,4.115,994,4.441,995,4.115,996,4.115,997,4.115,1048,4.302,1049,4.115,1050,4.115,1051,4.115,1055,4.302,1056,4.115,1057,4.115,1058,4.115,1218,4.115,1219,4.115,1220,4.115,1221,4.115]],["title/properties.html",[215,0.706,1125,2.349]],["body/properties.html",[24,0.026,162,0.025,163,0.025,215,0.954,1222,5.417,1223,5.417]],["title/routes.html",[1224,3.822]],["body/routes.html",[24,0.025,162,0.025,163,0.025,1224,4.574]],["title/miscellaneous/typealiases.html",[1135,1.524,1225,4.007]],["body/miscellaneous/typealiases.html",[9,0.326,10,0.326,24,0.028,26,0.59,31,0.776,37,1.146,43,0.912,151,0.722,162,0.023,163,0.023,164,0.533,203,1.326,328,0.986,373,1.53,376,1.823,377,1.53,380,1.83,385,1.83,392,1.83,401,2.18,403,1.644,407,1.644,410,1.064,415,1.644,419,1.53,420,1.644,421,1.644,422,1.326,423,1.644,424,1.53,425,1.644,426,1.644,427,1.53,428,1.644,429,1.644,430,1.644,431,1.644,432,1.644,433,1.644,434,1.644,435,1.53,436,1.644,437,1.644,438,1.424,439,1.644,440,1.704,441,1.53,442,1.424,1092,3.526,1098,5.091,1099,3.526,1100,4.218,1107,3.526,1110,3.526,1112,3.526,1113,3.526,1117,3.526,1119,3.526,1135,2.611,1226,4.779,1227,6.337,1228,4.023,1229,4.023,1230,4.023,1231,4.023,1232,4.023,1233,4.023,1234,4.023,1235,4.023,1236,6.702]],["title/miscellaneous/variables.html",[1135,1.524,1237,3.374]],["body/miscellaneous/variables.html",[0,0.118,1,1.224,3,0.251,9,0.263,10,0.263,15,2.646,17,2.377,23,1.027,24,0.029,26,0.255,29,1.606,30,1.187,31,0.929,37,1.212,38,1.109,39,1.076,40,4.216,47,2.341,55,1.748,56,2.112,57,2.112,58,2.112,59,1.091,60,3.771,71,1.766,79,0.495,80,1.991,81,2.76,82,3.442,83,2.411,102,2.048,138,0.924,140,0.661,142,0.533,144,0.661,146,0.573,148,0.573,150,0.615,151,0.23,153,0.573,156,1.168,162,0.013,163,0.013,184,1.342,195,1.332,196,0.739,197,1.283,235,0.426,265,2.586,328,0.986,337,0.821,338,1.425,344,0.767,345,1.913,376,0.615,383,1.315,391,1.518,393,2.032,410,0.872,417,0.661,440,1.315,441,0.661,442,0.615,462,1.725,465,1.413,468,1.687,475,1.139,485,1.518,489,1.168,499,1.518,501,1.518,507,0.954,524,1.011,552,1.738,553,1.738,554,1.738,577,3.899,579,3.691,580,2.89,584,3.335,645,2.112,658,3.691,667,5.335,688,5.76,689,2.36,698,2.693,702,1.738,715,3.298,716,2.693,741,1.738,744,3.298,753,1.523,772,1.913,778,1.738,801,2.36,806,2.112,820,1.738,827,2.856,835,3.298,845,3.715,1012,3.715,1015,4.253,1092,1.523,1094,2.693,1095,5.433,1096,2.693,1097,2.693,1098,4.761,1099,1.523,1100,3.888,1101,2.693,1102,2.693,1103,2.693,1104,4.02,1105,4.02,1107,1.523,1108,3.715,1109,3.715,1110,1.523,1111,2.693,1112,1.523,1113,1.523,1114,2.693,1115,2.693,1116,2.693,1117,1.523,1118,2.693,1119,1.523,1120,2.693,1121,2.693,1135,1.127,1219,3.298,1220,1.738,1221,2.693,1228,4.02,1229,4.253,1230,3.298,1231,3.715,1232,3.298,1233,4.02,1234,3.715,1235,3.715,1237,1.738,1238,6.336,1239,3.199,1240,5.052,1241,6.539,1242,6.499,1243,5.907,1244,2.064,1245,2.064,1246,2.064,1247,3.199,1248,3.199,1249,2.064,1250,3.199,1251,3.199,1252,5.27,1253,4.413,1254,4.413,1255,4.413,1256,4.413,1257,4.413,1258,4.413,1259,4.413,1260,2.064,1261,6.053,1262,6.053,1263,2.064,1264,2.064,1265,2.064,1266,2.064,1267,2.064,1268,2.064,1269,2.064,1270,2.064,1271,2.064,1272,2.064,1273,2.064,1274,2.064,1275,2.064,1276,2.064,1277,2.064,1278,2.064,1279,2.064,1280,2.064,1281,2.064,1282,2.064,1283,2.064,1284,2.064,1285,2.064,1286,3.917,1287,2.064,1288,3.199,1289,2.064,1290,2.064,1291,2.064,1292,2.064,1293,2.064,1294,2.064,1295,2.064,1296,2.064,1297,2.064,1298,2.064,1299,2.064,1300,2.064,1301,2.064,1302,2.064,1303,2.064,1304,2.064,1305,2.064,1306,2.064,1307,2.064,1308,2.064,1309,2.064,1310,2.064,1311,2.064,1312,2.064,1313,3.199,1314,2.064,1315,2.064,1316,2.064,1317,2.064,1318,3.199,1319,4.413,1320,3.199,1321,3.917,1322,2.064,1323,2.064,1324,2.064,1325,3.917,1326,2.064,1327,2.064,1328,3.199,1329,3.199,1330,2.064,1331,4.413,1332,2.064,1333,2.064,1334,2.064,1335,2.064,1336,2.064,1337,2.064,1338,2.064]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":94,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.2",{"_index":1223,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":1047,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["0.1",{"_index":266,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["0.15",{"_index":118,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.15s",{"_index":643,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["0.2",{"_index":267,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0.2s",{"_index":648,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["0.3",{"_index":353,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0.3s",{"_index":655,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["0.4",{"_index":355,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0.5",{"_index":822,"title":{},"body":{"components/SelectComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["0.5em",{"_index":357,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0.75em",{"_index":321,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0.8",{"_index":366,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0/1",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":237,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["00000000",{"_index":805,"title":{},"body":{"components/SelectComponent.html":{}}}],["004085",{"_index":248,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0056b3",{"_index":247,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["007bff",{"_index":239,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["0275d8",{"_index":622,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["0c5460",{"_index":254,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["0px",{"_index":119,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{}}}],["1",{"_index":102,"title":{"components/ButtonComponent-1.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":325,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["1/1",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10/10",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":633,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["1000",{"_index":350,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["100px",{"_index":417,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"miscellaneous/variables.html":{}}}],["10px",{"_index":125,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{}}}],["11",{"_index":1220,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["117a8b",{"_index":253,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["11px",{"_index":128,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{}}}],["12",{"_index":1221,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["12/12",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":264,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["12px",{"_index":127,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["13/15",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":364,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/PageComponent.html":{}}}],["14px",{"_index":130,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{}}}],["15/15",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":641,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["155724",{"_index":251,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["1565c0",{"_index":307,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["15px",{"_index":561,"title":{},"body":{"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{}}}],["16px",{"_index":126,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["17/20",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["171",{"_index":294,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["17a2b8",{"_index":252,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["18",{"_index":1173,"title":{},"body":{"index.html":{}}}],["18/18",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":809,"title":{},"body":{"components/SelectComponent.html":{}}}],["1976d2",{"_index":306,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["1a202c",{"_index":273,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["1d2124",{"_index":263,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["1e7e34",{"_index":250,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["1ea7fd",{"_index":730,"title":{},"body":{"components/PageComponent.html":{}}}],["1em",{"_index":359,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/PageComponent.html":{}}}],["1px",{"_index":120,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["2",{"_index":845,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":418,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["20.3.0",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["20/20",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":129,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["212121",{"_index":314,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["2196f3",{"_index":305,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["23272b",{"_index":262,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["238",{"_index":318,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["24",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["247",{"_index":295,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["24px",{"_index":131,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{}}}],["25",{"_index":820,"title":{},"body":{"components/SelectComponent.html":{},"miscellaneous/variables.html":{}}}],["25/25",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":265,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["27",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["276749",{"_index":280,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["28",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28a745",{"_index":249,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["29",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a69ac",{"_index":276,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["2c5282",{"_index":275,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["2c7a7b",{"_index":284,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["2d3748",{"_index":270,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["2e7d32",{"_index":304,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["2f855a",{"_index":279,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["2px",{"_index":637,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["3",{"_index":1015,"title":{},"body":{"components/ZtPaginatorXComponent.html":{},"miscellaneous/variables.html":{}}}],["3/3",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30px",{"_index":356,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/PageComponent.html":{}}}],["31",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3182ce",{"_index":274,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["319795",{"_index":283,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["32",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":720,"title":{},"body":{"components/PageComponent.html":{}}}],["33",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["333",{"_index":123,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["343a40",{"_index":261,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["35",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["357a14",{"_index":725,"title":{},"body":{"components/PageComponent.html":{}}}],["35px",{"_index":799,"title":{},"body":{"components/SelectComponent.html":{}}}],["36",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38/44",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["388e3c",{"_index":303,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["38a169",{"_index":278,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["38b2ac",{"_index":282,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["38px",{"_index":320,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["3b00a1",{"_index":301,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["3em",{"_index":96,"title":{},"body":{"components/ButtonComponent.html":{}}}],["3px",{"_index":363,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{}}}],["4",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":326,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["40px",{"_index":727,"title":{},"body":{"components/PageComponent.html":{}}}],["42",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["424242",{"_index":315,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["46px",{"_index":358,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["48bb78",{"_index":277,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["48px",{"_index":632,"title":{},"body":{"components/InputComponent.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{}}}],["495057",{"_index":791,"title":{},"body":{"components/SelectComponent.html":{}}}],["4a5568",{"_index":271,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["4c00d4",{"_index":300,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["4caf50",{"_index":302,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["4dabf7",{"_index":269,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["4fd1c9",{"_index":281,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["4px",{"_index":268,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["5",{"_index":1219,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5/5",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":343,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{}}}],["50px",{"_index":824,"title":{},"body":{"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["555ab9",{"_index":112,"title":{},"body":{"components/ButtonComponent.html":{}}}],["565151",{"_index":789,"title":{},"body":{"components/SelectComponent.html":{}}}],["56px",{"_index":351,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["5px",{"_index":886,"title":{},"body":{"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{}}}],["6",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6/6",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":819,"title":{},"body":{"components/SelectComponent.html":{}}}],["600",{"_index":993,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["600px",{"_index":718,"title":{},"body":{"components/PageComponent.html":{}}}],["616161",{"_index":316,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{}}}],["6200ee",{"_index":296,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["63b3f7",{"_index":992,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["6c757d",{"_index":628,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["6e6f70",{"_index":991,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["6px",{"_index":354,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["7",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":99,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["718096",{"_index":272,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["7px",{"_index":647,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["8",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/8",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":352,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["9",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/9",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["9b2c2c",{"_index":292,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["9b9b9b",{"_index":626,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["9c4221",{"_index":288,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["9e9e9e",{"_index":629,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["a0aec0",{"_index":790,"title":{},"body":{"components/SelectComponent.html":{}}}],["above",{"_index":1196,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":634,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["accessors",{"_index":35,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["acme",{"_index":549,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":1164,"title":{},"body":{"index.html":{}}}],["active",{"_index":342,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["actual_component",{"_index":161,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["adb5bd",{"_index":244,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["add",{"_index":1205,"title":{},"body":{"index.html":{}}}],["additional",{"_index":511,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["addon",{"_index":704,"title":{},"body":{"components/PageComponent.html":{}}}],["adjust",{"_index":701,"title":{},"body":{"components/PageComponent.html":{}}}],["advanced",{"_index":1003,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["afterviewinit",{"_index":1006,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["age",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregate",{"_index":539,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["aggregation",{"_index":537,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["alias",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1226,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alice",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":329,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["alignment",{"_index":378,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["allowcolumnreordering",{"_index":495,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["allowcolumnresizing",{"_index":497,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["allowed",{"_index":494,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["allowfiltering",{"_index":500,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["allowgrouping",{"_index":498,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["allows",{"_index":734,"title":{},"body":{"components/SelectComponent.html":{}}}],["allowselection",{"_index":501,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/variables.html":{}}}],["allowsorting",{"_index":499,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":1028,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["anderson",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angeles",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":1142,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":70,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":781,"title":{},"body":{"components/SelectComponent.html":{},"modules/ZtSelectModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["antonio",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1192,"title":{},"body":{"index.html":{}}}],["app",{"_index":677,"title":{},"body":{"components/PageComponent.html":{}}}],["appearance",{"_index":807,"title":{},"body":{"components/SelectComponent.html":{}}}],["appearances",{"_index":177,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{}}}],["applicable",{"_index":1206,"title":{},"body":{"index.html":{}}}],["applies",{"_index":210,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["args",{"_index":688,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["argtypes",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":767,"title":{},"body":{"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["arial",{"_index":108,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["around",{"_index":484,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["array",{"_index":456,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["array(this.pages",{"_index":979,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["arrow",{"_index":806,"title":{},"body":{"components/SelectComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["asc",{"_index":420,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["assemble",{"_index":690,"title":{},"body":{"components/PageComponent.html":{}}}],["assets/variables",{"_index":619,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["associated",{"_index":512,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["async",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atomic",{"_index":665,"title":{},"body":{"components/PageComponent.html":{}}}],["attr.disabled",{"_index":186,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["attr.type",{"_index":187,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["attribute",{"_index":206,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/TextareaComponent.html":{}}}],["austin",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":717,"title":{},"body":{"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["autodocs",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":422,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["average",{"_index":839,"title":{},"body":{"components/TextareaComponent.html":{}}}],["avg",{"_index":541,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["await",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b71c1c",{"_index":313,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["b8312f",{"_index":361,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["background",{"_index":110,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["bar",{"_index":814,"title":{},"body":{"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["bar:after",{"_index":816,"title":{},"body":{"components/SelectComponent.html":{}}}],["bar:before",{"_index":815,"title":{},"body":{"components/SelectComponent.html":{}}}],["bars",{"_index":813,"title":{},"body":{"components/SelectComponent.html":{}}}],["based",{"_index":213,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["basic",{"_index":1156,"title":{},"body":{"index.html":{}}}],["bd2130",{"_index":260,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["being",{"_index":445,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["below",{"_index":848,"title":{},"body":{"components/TextareaComponent.html":{}}}],["between",{"_index":435,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"miscellaneous/typealiases.html":{}}}],["bg",{"_index":242,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["binding",{"_index":733,"title":{},"body":{"components/SelectComponent.html":{},"index.html":{}}}],["black",{"_index":236,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["block",{"_index":90,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["bob",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bold",{"_index":889,"title":{},"body":{"components/TextareaComponent.html":{}}}],["boolean",{"_index":37,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":196,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap_input",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrap_select",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrap_textarea",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["border",{"_index":93,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["borders",{"_index":483,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["both",{"_index":1004,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["bottom",{"_index":347,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["box",{"_index":115,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["box_input",{"_index":630,"title":{},"body":{"components/InputComponent.html":{}}}],["box_select",{"_index":792,"title":{},"body":{"components/SelectComponent.html":{}}}],["box_textarea",{"_index":885,"title":{},"body":{"components/TextareaComponent.html":{}}}],["branch",{"_index":1203,"title":{},"body":{"index.html":{}}}],["break",{"_index":1040,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["brown",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":1217,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1129,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bs",{"_index":584,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["bs_select",{"_index":823,"title":{},"body":{"components/SelectComponent.html":{}}}],["bs_textarea",{"_index":896,"title":{},"body":{"components/TextareaComponent.html":{}}}],["build",{"_index":671,"title":{},"body":{"components/PageComponent.html":{}}}],["building",{"_index":660,"title":{},"body":{"components/PageComponent.html":{}}}],["buildrunning",{"_index":1186,"title":{},"body":{"index.html":{}}}],["built",{"_index":1143,"title":{},"body":{"index.html":{}}}],["button",{"_index":15,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["button'},{'name",{"_index":139,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["button.component",{"_index":559,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button.component.html",{"_index":183,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button.component.scss",{"_index":181,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button.css",{"_index":22,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.module",{"_index":913,"title":{},"body":{"modules/ZtDataGridModule.html":{}}}],["button/button.component",{"_index":75,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button/button.component.ts",{"_index":165,"title":{},"body":{"components/ButtonComponent-1.html":{},"coverage.html":{}}}],["button/button.component.ts:29",{"_index":199,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:35",{"_index":191,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:41",{"_index":202,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:47",{"_index":193,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:53",{"_index":194,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:59",{"_index":198,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:65",{"_index":208,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:79",{"_index":207,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/button.component.ts:87",{"_index":204,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["button/zt",{"_index":912,"title":{},"body":{"modules/ZtDataGridModule.html":{}}}],["buttonclass",{"_index":188,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["buttoncomponent",{"_index":1,"title":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buttoninput",{"_index":1159,"title":{},"body":{"index.html":{}}}],["buttontype",{"_index":189,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["c05621",{"_index":287,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["c53030",{"_index":291,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["c82333",{"_index":259,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["calc(100",{"_index":894,"title":{},"body":{"components/TextareaComponent.html":{}}}],["calculate",{"_index":536,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["calculations",{"_index":534,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["canvas",{"_index":702,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["canvas.getbyrole('button",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaselement",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":86,"title":{},"body":{"components/ButtonComponent.html":{}}}],["cd",{"_index":1181,"title":{},"body":{"index.html":{}}}],["cells",{"_index":396,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["celltemplate",{"_index":379,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["center",{"_index":330,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["change",{"_index":746,"title":{},"body":{"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["change(event",{"_index":768,"title":{},"body":{"components/SelectComponent.html":{}}}],["changed",{"_index":973,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["changedetection",{"_index":179,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["changedetectionstrategy",{"_index":220,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":180,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["changes",{"_index":954,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["character",{"_index":569,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["charlie",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chicago",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child",{"_index":532,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/PageComponent.html":{}}}],["choose",{"_index":778,"title":{},"body":{"components/SelectComponent.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":77,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"index.html":{}}}],["classes",{"_index":212,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["classes.join",{"_index":228,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["classes.push(`zt",{"_index":225,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["clear",{"_index":759,"title":{},"body":{"components/SelectComponent.html":{},"index.html":{}}}],["clears",{"_index":776,"title":{},"body":{"components/SelectComponent.html":{}}}],["cli",{"_index":1174,"title":{},"body":{"index.html":{}}}],["click",{"_index":65,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"index.html":{}}}],["clone",{"_index":1176,"title":{},"body":{"index.html":{}}}],["close",{"_index":795,"title":{},"body":{"components/SelectComponent.html":{}}}],["cluster_ztdatagridmodule",{"_index":905,"title":{},"body":{"modules/ZtDataGridModule.html":{},"overview.html":{}}}],["cluster_ztdatagridmodule_declarations",{"_index":907,"title":{},"body":{"modules/ZtDataGridModule.html":{},"overview.html":{}}}],["cluster_ztdatagridmodule_exports",{"_index":906,"title":{},"body":{"modules/ZtDataGridModule.html":{},"overview.html":{}}}],["cluster_ztinputmodule",{"_index":917,"title":{},"body":{"modules/ZtInputModule.html":{},"overview.html":{}}}],["cluster_ztinputmodule_exports",{"_index":919,"title":{},"body":{"modules/ZtInputModule.html":{},"overview.html":{}}}],["cluster_ztinputmodule_imports",{"_index":918,"title":{},"body":{"modules/ZtInputModule.html":{},"overview.html":{}}}],["cluster_ztpaginatormodule",{"_index":995,"title":{},"body":{"modules/ZtPaginatorModule.html":{},"overview.html":{}}}],["cluster_ztpaginatormodule_declarations",{"_index":996,"title":{},"body":{"modules/ZtPaginatorModule.html":{},"overview.html":{}}}],["cluster_ztpaginatormodule_exports",{"_index":997,"title":{},"body":{"modules/ZtPaginatorModule.html":{},"overview.html":{}}}],["cluster_ztselectmodule",{"_index":1049,"title":{},"body":{"modules/ZtSelectModule.html":{},"overview.html":{}}}],["cluster_ztselectmodule_exports",{"_index":1051,"title":{},"body":{"modules/ZtSelectModule.html":{},"overview.html":{}}}],["cluster_ztselectmodule_imports",{"_index":1050,"title":{},"body":{"modules/ZtSelectModule.html":{},"overview.html":{}}}],["cluster_zttextareamodule",{"_index":1056,"title":{},"body":{"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["cluster_zttextareamodule_declarations",{"_index":1058,"title":{},"body":{"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["cluster_zttextareamodule_exports",{"_index":1057,"title":{},"body":{"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["codes",{"_index":880,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["collection",{"_index":1140,"title":{},"body":{"index.html":{}}}],["color",{"_index":111,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["cols",{"_index":834,"title":{},"body":{"components/TextareaComponent.html":{}}}],["column",{"_index":377,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["columns",{"_index":465,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":1195,"title":{},"body":{"index.html":{}}}],["comments",{"_index":1153,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":19,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{}}}],["complete",{"_index":517,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["compodoc",{"_index":1190,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":214,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["component_template",{"_index":137,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"index.html":{},"overview.html":{}}}],["components.git",{"_index":1180,"title":{},"body":{"index.html":{}}}],["components.ts",{"_index":1062,"title":{},"body":{"components/ZtUiComponents.html":{},"coverage.html":{}}}],["components/src/lib/zt",{"_index":164,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["components/src/stories/button.component.ts",{"_index":11,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["components/src/stories/button.component.ts:24",{"_index":54,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.component.ts:28",{"_index":61,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.component.ts:32",{"_index":46,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.component.ts:36",{"_index":42,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.component.ts:40",{"_index":51,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.component.ts:48",{"_index":44,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.component.ts:52",{"_index":63,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.component.ts:54",{"_index":68,"title":{},"body":{"components/ButtonComponent.html":{}}}],["components/src/stories/button.stories.ts",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/data",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/header.component.ts",{"_index":547,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["components/src/stories/header.component.ts:66",{"_index":555,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/src/stories/header.component.ts:69",{"_index":557,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/src/stories/header.component.ts:72",{"_index":558,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/src/stories/header.component.ts:75",{"_index":556,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/src/stories/header.stories.ts",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/input.stories.ts",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/page.component.ts",{"_index":656,"title":{},"body":{"components/PageComponent.html":{},"coverage.html":{}}}],["components/src/stories/page.component.ts:69",{"_index":712,"title":{},"body":{"components/PageComponent.html":{}}}],["components/src/stories/page.component.ts:71",{"_index":711,"title":{},"body":{"components/PageComponent.html":{}}}],["components/src/stories/page.component.ts:75",{"_index":710,"title":{},"body":{"components/PageComponent.html":{}}}],["components/src/stories/page.component.ts:79",{"_index":709,"title":{},"body":{"components/PageComponent.html":{}}}],["components/src/stories/page.stories.ts",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/paginator.stories.ts",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/select.stories.ts",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/textarea.stories.ts",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/src/stories/user.ts",{"_index":897,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["components/tsconfig.lib.jsonapi",{"_index":1191,"title":{},"body":{"index.html":{}}}],["componentsusage",{"_index":1168,"title":{},"body":{"index.html":{}}}],["compose",{"_index":686,"title":{},"body":{"components/PageComponent.html":{}}}],["comprehensive",{"_index":1139,"title":{},"body":{"index.html":{}}}],["configurable",{"_index":737,"title":{},"body":{"components/SelectComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["configuration",{"_index":375,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{}}}],["configurations",{"_index":520,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["connected",{"_index":684,"title":{},"body":{"components/PageComponent.html":{}}}],["console.log(this.key",{"_index":784,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log(this.value",{"_index":785,"title":{},"body":{"components/SelectComponent.html":{}}}],["const",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":948,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["containing",{"_index":972,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["contains",{"_index":427,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{},"miscellaneous/typealiases.html":{}}}],["content",{"_index":336,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/SelectComponent.html":{}}}],["contents",{"_index":45,"title":{},"body":{"components/ButtonComponent.html":{}}}],["contributing",{"_index":1199,"title":{},"body":{"index.html":{}}}],["control",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controls",{"_index":928,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"index.html":{}}}],["count",{"_index":544,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["counting",{"_index":828,"title":{},"body":{"components/TextareaComponent.html":{},"index.html":{}}}],["coverage",{"_index":1064,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1201,"title":{},"body":{"index.html":{}}}],["css",{"_index":211,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["current",{"_index":402,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["currently",{"_index":763,"title":{},"body":{"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["currentpage",{"_index":937,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["currentpagesize",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currenttextlength",{"_index":831,"title":{},"body":{"components/TextareaComponent.html":{}}}],["cursor",{"_index":91,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["custom",{"_index":398,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{}}}],["customizable",{"_index":167,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["customization",{"_index":1005,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["d2d2d2",{"_index":620,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["d32f2f",{"_index":312,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["d39e00",{"_index":257,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["dallas",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["danger",{"_index":58,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dark",{"_index":59,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":151,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["datagrid",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datagridarrowpaginator",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datagridcolumn",{"_index":371,"title":{"interfaces/DataGridColumn.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridevent",{"_index":509,"title":{"interfaces/DataGridEvent.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridfilterstate",{"_index":449,"title":{"interfaces/DataGridFilterState.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridgrouprow",{"_index":530,"title":{"interfaces/DataGridGroupRow.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridgroupstate",{"_index":452,"title":{"interfaces/DataGridGroupState.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridoptions",{"_index":463,"title":{"interfaces/DataGridOptions.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridrow",{"_index":521,"title":{"interfaces/DataGridRow.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridselectionstate",{"_index":455,"title":{"interfaces/DataGridSelectionState.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridsortstate",{"_index":444,"title":{"interfaces/DataGridSortState.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridstate",{"_index":518,"title":{"interfaces/DataGridState.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datagridstriped",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datagridsummary",{"_index":535,"title":{"interfaces/DataGridSummary.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{}}}],["datasource",{"_index":468,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":380,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["date",{"_index":407,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["david",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davis",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dc3545",{"_index":258,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["dd6b20",{"_index":286,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["declarations",{"_index":902,"title":{},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["decoration",{"_index":327,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["decorators",{"_index":603,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["dee2e6",{"_index":246,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["defines",{"_index":374,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["definitions",{"_index":464,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["delete",{"_index":865,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["deletebuttontype",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demos",{"_index":1154,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":901,"title":{"dependencies.html":{}},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["desc",{"_index":421,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["description",{"_index":166,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["design",{"_index":1148,"title":{},"body":{"index.html":{}}}],["details",{"_index":1212,"title":{},"body":{"index.html":{}}}],["development",{"_index":695,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["diana",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diego",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":175,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["direct",{"_index":610,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["direction",{"_index":415,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["directive",{"_index":135,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["disabled",{"_index":28,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/ZtPaginatorXComponent.html":{}}}],["display",{"_index":88,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["displayed",{"_index":590,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["displayformat",{"_index":545,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["displaying",{"_index":405,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["displays",{"_index":925,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["displayvalue",{"_index":744,"title":{},"body":{"components/SelectComponent.html":{},"miscellaneous/variables.html":{}}}],["docreateaccount",{"_index":706,"title":{},"body":{"components/PageComponent.html":{}}}],["docs",{"_index":699,"title":{},"body":{"components/PageComponent.html":{}}}],["docs/autodocs",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1065,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation/index.html",{"_index":1198,"title":{},"body":{"index.html":{}}}],["documented",{"_index":1151,"title":{},"body":{"index.html":{}}}],["doe",{"_index":716,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["dologin",{"_index":707,"title":{},"body":{"components/PageComponent.html":{}}}],["dologout",{"_index":708,"title":{},"body":{"components/PageComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["down",{"_index":811,"title":{},"body":{"components/SelectComponent.html":{}}}],["driven",{"_index":662,"title":{},"body":{"components/PageComponent.html":{}}}],["dropdown",{"_index":732,"title":{},"body":{"components/SelectComponent.html":{},"index.html":{}}}],["dynamically",{"_index":209,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["e.g",{"_index":406,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["e0a800",{"_index":256,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["e0e0e0",{"_index":298,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["e53e3e",{"_index":290,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["e7fdd8",{"_index":724,"title":{},"body":{"components/PageComponent.html":{}}}],["e9ecef",{"_index":243,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["ease",{"_index":644,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["easy",{"_index":670,"title":{},"body":{"components/PageComponent.html":{}}}],["ed8936",{"_index":285,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["edit",{"_index":510,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["edit/delete",{"_index":1163,"title":{},"body":{"index.html":{}}}],["editable",{"_index":381,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["editbuttontype",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editing",{"_index":400,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["edittemplate",{"_index":382,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["edward",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eeeeee",{"_index":299,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["ef6c00",{"_index":310,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["element",{"_index":134,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["elementref",{"_index":606,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["email",{"_index":586,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["emits",{"_index":929,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["emitted",{"_index":508,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["empty",{"_index":591,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["enabled",{"_index":469,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["ending",{"_index":666,"title":{},"body":{"components/PageComponent.html":{}}}],["endswith",{"_index":430,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["enforce",{"_index":599,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["enter",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":416,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["entry",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":881,"title":{},"body":{"components/TextareaComponent.html":{}}}],["enumeration",{"_index":879,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1136,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equals",{"_index":425,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["eve",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":506,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["event.key",{"_index":877,"title":{},"body":{"components/TextareaComponent.html":{}}}],["event.target.value",{"_index":783,"title":{},"body":{"components/SelectComponent.html":{}}}],["eventemitter",{"_index":62,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["events",{"_index":514,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["example",{"_index":178,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["example/header",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example/page",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expanded",{"_index":525,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["expect(loginbutton).not.tobeinthedocument",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(loginbutton).tobeinthedocument",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(logoutbutton).tobeinthedocument",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":76,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"index.html":{}}}],["exportable",{"_index":481,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["exports",{"_index":904,"title":{},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["extends",{"_index":531,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["extensive",{"_index":1146,"title":{},"body":{"index.html":{}}}],["f30e0e",{"_index":624,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["f44336",{"_index":311,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["f56565",{"_index":289,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["f57c00",{"_index":309,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["f5f5f5",{"_index":297,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["f8f9fa",{"_index":240,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["false",{"_index":40,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":103,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["feature",{"_index":1202,"title":{},"body":{"index.html":{}}}],["features",{"_index":568,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["ff9800",{"_index":308,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["ffc107",{"_index":255,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["ffffff",{"_index":238,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["field",{"_index":383,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":1160,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"index.html":{}}}],["fill",{"_index":729,"title":{},"body":{"components/PageComponent.html":{}}}],["fill(0",{"_index":980,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["filter",{"_index":403,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["filterable",{"_index":384,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["filtered",{"_index":450,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["filtering",{"_index":424,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filteroperator",{"_index":385,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":386,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["fiona",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":960,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["firstname",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixed",{"_index":346,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["flex",{"_index":324,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{}}}],["float",{"_index":890,"title":{},"body":{"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["floating",{"_index":201,"title":{},"body":{"components/ButtonComponent-1.html":{},"index.html":{}}}],["floating_button",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fn",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focus",{"_index":621,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["font",{"_index":97,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["fork",{"_index":1200,"title":{},"body":{"index.html":{}}}],["form__field",{"_index":646,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["form__field::placeholder",{"_index":649,"title":{},"body":{"components/InputComponent.html":{}}}],["form__field:focus",{"_index":653,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["form__field:placeholder",{"_index":650,"title":{},"body":{"components/InputComponent.html":{}}}],["form__group",{"_index":631,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["form__label",{"_index":652,"title":{},"body":{"components/InputComponent.html":{}}}],["format",{"_index":387,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["formats",{"_index":408,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["formsmodule",{"_index":738,"title":{},"body":{"components/SelectComponent.html":{},"modules/ZtSelectModule.html":{}}}],["frank",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["garcia",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generated",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generates",{"_index":1025,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["generation",{"_index":1194,"title":{},"body":{"index.html":{}}}],["george",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getbuttonclass",{"_index":216,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["getbuttontype",{"_index":218,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["getinputclass",{"_index":612,"title":{},"body":{"components/InputComponent.html":{}}}],["getisdisabled",{"_index":219,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["getpageno",{"_index":939,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["getpageno(currentpage",{"_index":956,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["getpagenumbers",{"_index":1009,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["getpagenumbers(start",{"_index":1023,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["getpaginatorclass",{"_index":977,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["getselectclass",{"_index":780,"title":{},"body":{"components/SelectComponent.html":{}}}],["gettextareaclass",{"_index":872,"title":{},"body":{"components/TextareaComponent.html":{}}}],["getztsize",{"_index":67,"title":{},"body":{"components/ButtonComponent.html":{}}}],["git",{"_index":1178,"title":{},"body":{"index.html":{}}}],["github",{"_index":1216,"title":{},"body":{"index.html":{}}}],["global",{"_index":862,"title":{},"body":{"components/TextareaComponent.html":{}}}],["globally",{"_index":470,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["gofirst",{"_index":940,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["golast",{"_index":941,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["gonext",{"_index":942,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["goprevious",{"_index":943,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["grace",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gray",{"_index":625,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["greaterthan",{"_index":431,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["greaterthanorequal",{"_index":432,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["grid",{"_index":376,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["grid'},{'name",{"_index":152,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["grid.component",{"_index":914,"title":{},"body":{"modules/ZtDataGridModule.html":{}}}],["grid.component.ts",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["grid.module.ts",{"_index":910,"title":{},"body":{"modules/ZtDataGridModule.html":{}}}],["grid.stories.ts",{"_index":1100,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["grid/models.ts",{"_index":373,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["grid/zt",{"_index":909,"title":{},"body":{"modules/ZtDataGridModule.html":{},"coverage.html":{}}}],["group",{"_index":454,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{}}}],["groupable",{"_index":472,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["grouped",{"_index":453,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["grouping",{"_index":451,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["guided",{"_index":693,"title":{},"body":{"components/PageComponent.html":{}}}],["h1",{"_index":564,"title":{},"body":{"components/HeaderComponent.html":{}}}],["h2",{"_index":719,"title":{},"body":{"components/PageComponent.html":{}}}],["handler",{"_index":66,"title":{},"body":{"components/ButtonComponent.html":{}}}],["handles",{"_index":598,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["handy",{"_index":679,"title":{},"body":{"components/PageComponent.html":{}}}],["header",{"_index":409,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":141,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["header.component",{"_index":713,"title":{},"body":{"components/PageComponent.html":{}}}],["header.css",{"_index":548,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":140,"title":{"components/HeaderComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":491,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["headertemplate",{"_index":388,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["height",{"_index":101,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["helen",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helps",{"_index":685,"title":{},"body":{"components/PageComponent.html":{}}}],["helvetica",{"_index":106,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["here",{"_index":678,"title":{},"body":{"components/PageComponent.html":{}}}],["hidden",{"_index":369,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["higher",{"_index":683,"title":{},"body":{"components/PageComponent.html":{}}}],["highlight",{"_index":818,"title":{},"body":{"components/SelectComponent.html":{}}}],["highlighter",{"_index":817,"title":{},"body":{"components/SelectComponent.html":{}}}],["highly",{"_index":1149,"title":{},"body":{"index.html":{}}}],["hook",{"_index":971,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["horizontal",{"_index":488,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["host",{"_index":319,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["host(.theme",{"_index":234,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["hostbinding",{"_index":221,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["hostbinding('attr.disabled",{"_index":232,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["hostbinding('attr.type",{"_index":229,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["hostbinding('class",{"_index":222,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["hostbindings",{"_index":185,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["hostlistener",{"_index":613,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["hostlistener('change",{"_index":774,"title":{},"body":{"components/SelectComponent.html":{}}}],["hostlistener('keydown",{"_index":604,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["hostlistener('window:keyup",{"_index":868,"title":{},"body":{"components/TextareaComponent.html":{}}}],["hostlisteners",{"_index":581,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["houston",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hover",{"_index":241,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["hover:not(:disabled",{"_index":1046,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["html",{"_index":133,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["https://github.com/yourusername/zt",{"_index":1179,"title":{},"body":{"index.html":{}}}],["https://storybook.js.org/docs/configure/story",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://storybook.js.org/docs/writing",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ian",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":796,"title":{},"body":{"components/SelectComponent.html":{}}}],["icon:after",{"_index":797,"title":{},"body":{"components/SelectComponent.html":{}}}],["id",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":933,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"index.html":{}}}],["important",{"_index":825,"title":{},"body":{"components/SelectComponent.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"index.html":{}}}],["in/i",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inherit",{"_index":333,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{}}}],["inline",{"_index":89,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["input",{"_index":71,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["input'},{'name",{"_index":143,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["input.component",{"_index":922,"title":{},"body":{"modules/ZtInputModule.html":{}}}],["input.component.html",{"_index":573,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":572,"title":{},"body":{"components/InputComponent.html":{}}}],["input.module.ts",{"_index":921,"title":{},"body":{"modules/ZtInputModule.html":{}}}],["input/input.component.ts",{"_index":565,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["input/input.component.ts:32",{"_index":608,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:38",{"_index":595,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:44",{"_index":589,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:50",{"_index":593,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:56",{"_index":588,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:62",{"_index":585,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:68",{"_index":594,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:74",{"_index":592,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:80",{"_index":596,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component.ts:88",{"_index":597,"title":{},"body":{"components/InputComponent.html":{}}}],["input/zt",{"_index":920,"title":{},"body":{"modules/ZtInputModule.html":{}}}],["input::placeholder",{"_index":627,"title":{},"body":{"components/InputComponent.html":{}}}],["input:focus",{"_index":636,"title":{},"body":{"components/InputComponent.html":{}}}],["input_bs",{"_index":654,"title":{},"body":{"components/InputComponent.html":{}}}],["inputclass",{"_index":583,"title":{},"body":{"components/InputComponent.html":{}}}],["inputcomponent",{"_index":142,"title":{"components/InputComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":27,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["inputstyle",{"_index":577,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["inputtype",{"_index":578,"title":{},"body":{"components/InputComponent.html":{}}}],["inset",{"_index":121,"title":{},"body":{"components/ButtonComponent.html":{}}}],["install",{"_index":1167,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1165,"title":{},"body":{"index.html":{}}}],["integer",{"_index":842,"title":{},"body":{"components/TextareaComponent.html":{}}}],["integration",{"_index":930,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"index.html":{}}}],["interface",{"_index":370,"title":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"interfaces/User.html":{}},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":372,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isdisabled",{"_index":190,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["isempty",{"_index":436,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["isnotempty",{"_index":437,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["issue",{"_index":1215,"title":{},"body":{"index.html":{}}}],["item",{"_index":765,"title":{},"body":{"components/SelectComponent.html":{}}}],["items",{"_index":334,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["jacksonville",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jane",{"_index":715,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["john",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["johnson",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jose",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsdoc",{"_index":1152,"title":{},"body":{"index.html":{}}}],["julia",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["justify",{"_index":335,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{}}}],["key",{"_index":524,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key/identifier",{"_index":756,"title":{},"body":{"components/SelectComponent.html":{}}}],["key_code",{"_index":882,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["key_code.delete",{"_index":878,"title":{},"body":{"components/TextareaComponent.html":{}}}],["keyboard",{"_index":866,"title":{},"body":{"components/TextareaComponent.html":{}}}],["keyboardevent",{"_index":859,"title":{},"body":{"components/TextareaComponent.html":{}}}],["keydown",{"_index":582,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["keyevent",{"_index":833,"title":{},"body":{"components/TextareaComponent.html":{}}}],["keyevent(event",{"_index":867,"title":{},"body":{"components/TextareaComponent.html":{}}}],["keys",{"_index":460,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["keyup",{"_index":863,"title":{},"body":{"components/TextareaComponent.html":{}}}],["label",{"_index":25,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["laquo",{"_index":987,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["large",{"_index":50,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{}}}],["last",{"_index":962,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["lato",{"_index":892,"title":{},"body":{"components/TextareaComponent.html":{}}}],["layout",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":395,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["legend",{"_index":132,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"overview.html":{}}}],["length",{"_index":570,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["lessthan",{"_index":433,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["lessthanorequal",{"_index":434,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["level",{"_index":527,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/PageComponent.html":{}}}],["lg",{"_index":83,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":723,"title":{},"body":{"components/PageComponent.html":{}}}],["lib",{"_index":159,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["lib/zt",{"_index":74,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library",{"_index":1144,"title":{},"body":{"index.html":{}}}],["license",{"_index":1209,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":970,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["light",{"_index":195,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":884,"title":{},"body":{"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["limits",{"_index":600,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["line",{"_index":100,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["lines",{"_index":486,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{}}}],["link",{"_index":60,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":736,"title":{},"body":{"components/SelectComponent.html":{}}}],["listens",{"_index":861,"title":{},"body":{"components/TextareaComponent.html":{}}}],["lists",{"_index":932,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["literal",{"_index":546,"title":{},"body":{"interfaces/DataGridState.html":{}}}],["log",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggedin",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggedout",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginbutton",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logoutbutton",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["los",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lsaquo",{"_index":988,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["make",{"_index":1204,"title":{},"body":{"index.html":{}}}],["makes",{"_index":669,"title":{},"body":{"components/PageComponent.html":{}}}],["managing",{"_index":681,"title":{},"body":{"components/PageComponent.html":{}}}],["manipulation",{"_index":611,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["map((x",{"_index":981,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["margin",{"_index":362,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["martinez",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":764,"title":{},"body":{"components/SelectComponent.html":{}}}],["matching",{"_index":163,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":197,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["material_input",{"_index":645,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["material_select",{"_index":801,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["material_textarea",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":543,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{}}}],["maximum",{"_index":411,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["maxwidth",{"_index":389,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["md",{"_index":82,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":49,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{}}}],["message",{"_index":741,"title":{},"body":{"components/SelectComponent.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["methods",{"_index":575,"title":{},"body":{"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["middle",{"_index":332,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{}}}],["miller",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":542,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{}}}],["minimum",{"_index":413,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["minwidth",{"_index":390,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["miscellaneous",{"_index":1135,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1210,"title":{},"body":{"index.html":{}}}],["mock",{"_index":668,"title":{},"body":{"components/PageComponent.html":{}}}],["mode",{"_index":439,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["modern",{"_index":1145,"title":{},"body":{"index.html":{}}}],["module",{"_index":898,"title":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{}},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":900,"title":{"modules.html":{}},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":698,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["moz",{"_index":339,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["ms",{"_index":341,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["multi",{"_index":448,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{}}}],["multiple",{"_index":442,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mycomponent",{"_index":1170,"title":{},"body":{"index.html":{}}}],["name",{"_index":138,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":676,"title":{},"body":{"components/PageComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["navigates",{"_index":959,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["navigation",{"_index":927,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["nbsp",{"_index":883,"title":{},"body":{"components/TextareaComponent.html":{}}}],["need",{"_index":1169,"title":{},"body":{"index.html":{}}}],["needing",{"_index":675,"title":{},"body":{"components/PageComponent.html":{}}}],["nested",{"_index":529,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["nesting",{"_index":526,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["neue",{"_index":107,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["new",{"_index":79,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":964,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["ngafterviewinit",{"_index":1010,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["ngmodule",{"_index":915,"title":{},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{}}}],["ngonchanges",{"_index":944,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["ngonchanges(changes",{"_index":967,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["ngoninit",{"_index":945,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["node.js",{"_index":1172,"title":{},"body":{"index.html":{}}}],["none",{"_index":328,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":800,"title":{},"body":{"components/SelectComponent.html":{}}}],["not(input[value",{"_index":638,"title":{},"body":{"components/InputComponent.html":{}}}],["not(select[value",{"_index":794,"title":{},"body":{"components/SelectComponent.html":{}}}],["not(textarea[value",{"_index":888,"title":{},"body":{"components/TextareaComponent.html":{}}}],["notcontains",{"_index":428,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["notequals",{"_index":426,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["npm",{"_index":1166,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1189,"title":{},"body":{"index.html":{}}}],["null",{"_index":203,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":410,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(this.textlength",{"_index":615,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["numbers",{"_index":926,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["nunito",{"_index":104,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["o",{"_index":227,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["obj",{"_index":786,"title":{},"body":{"components/SelectComponent.html":{}}}],["obj[displayvalue",{"_index":788,"title":{},"body":{"components/SelectComponent.html":{}}}],["object",{"_index":507,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":749,"title":{},"body":{"components/SelectComponent.html":{}}}],["old",{"_index":515,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["oldvalue",{"_index":516,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["once",{"_index":1017,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["onchange",{"_index":742,"title":{},"body":{"components/SelectComponent.html":{}}}],["onchange(event",{"_index":773,"title":{},"body":{"components/SelectComponent.html":{}}}],["onchanges",{"_index":934,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["onclear",{"_index":743,"title":{},"body":{"components/SelectComponent.html":{}}}],["onclick",{"_index":34,"title":{},"body":{"components/ButtonComponent.html":{}}}],["oncreateaccount",{"_index":552,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":873,"title":{},"body":{"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["onkeydown",{"_index":576,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["onlogin",{"_index":553,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["onlogout",{"_index":554,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["onpagechange",{"_index":946,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["opacity",{"_index":821,"title":{},"body":{"components/SelectComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["open",{"_index":1197,"title":{},"body":{"index.html":{}}}],["operations",{"_index":502,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{}}}],["operator",{"_index":404,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["operators",{"_index":423,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["option",{"_index":753,"title":{},"body":{"components/SelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["option's",{"_index":771,"title":{},"body":{"components/SelectComponent.html":{}}}],["optional",{"_index":64,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["options",{"_index":462,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":522,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["otherwise",{"_index":231,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["out",{"_index":623,"title":{},"body":{"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["out/i",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outline",{"_index":29,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["outline_button",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outlined",{"_index":1158,"title":{},"body":{"index.html":{}}}],["output",{"_index":72,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["outputs",{"_index":33,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["overflow",{"_index":368,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/TextareaComponent.html":{}}}],["overview",{"_index":1218,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":721,"title":{},"body":{"components/PageComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["package",{"_index":1125,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":124,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["page",{"_index":475,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/PageComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["page'},{'name",{"_index":145,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["page.css",{"_index":657,"title":{},"body":{"components/PageComponent.html":{}}}],["pageable",{"_index":474,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["pagecomponent",{"_index":144,"title":{"components/PageComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageindex",{"_index":519,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["pagenumbers",{"_index":938,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["pages",{"_index":658,"title":{},"body":{"components/PageComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/variables.html":{}}}],["pagesize",{"_index":476,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["pagesizeoptions",{"_index":477,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["pageslimit",{"_index":1011,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["pagination",{"_index":473,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["paginator",{"_index":156,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["paginator'},{'name",{"_index":154,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["paginator.component",{"_index":999,"title":{},"body":{"modules/ZtPaginatorModule.html":{}}}],["paginator.component.html",{"_index":936,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":935,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts",{"_index":924,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"coverage.html":{}}}],["paginator.component.ts:104",{"_index":963,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:112",{"_index":965,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:120",{"_index":961,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:37",{"_index":976,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:42",{"_index":975,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:48",{"_index":950,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:54",{"_index":953,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:60",{"_index":952,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:66",{"_index":955,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:68",{"_index":949,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:72",{"_index":974,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:78",{"_index":969,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:88",{"_index":957,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.component.ts:96",{"_index":958,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["paginator.module.ts",{"_index":998,"title":{},"body":{"modules/ZtPaginatorModule.html":{}}}],["paginator/zt",{"_index":923,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{}}}],["paginatorbootstrap",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginatorclass",{"_index":947,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["paginatordark",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginatormaterial",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginatorstyle",{"_index":1012,"title":{},"body":{"components/ZtPaginatorXComponent.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":782,"title":{},"body":{"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["parameters",{"_index":772,"title":{},"body":{"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":528,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["particularly",{"_index":864,"title":{},"body":{"components/TextareaComponent.html":{}}}],["password",{"_index":587,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["path",{"_index":728,"title":{},"body":{"components/PageComponent.html":{}}}],["patterns",{"_index":680,"title":{},"body":{"components/PageComponent.html":{}}}],["perform",{"_index":538,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["performed",{"_index":503,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["philadelphia",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phoenix",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pixels",{"_index":412,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["placeholder",{"_index":579,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":1214,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":92,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["populate",{"_index":750,"title":{},"body":{"components/SelectComponent.html":{}}}],["position",{"_index":345,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":841,"title":{},"body":{"components/TextareaComponent.html":{}}}],["powerful",{"_index":1161,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":1171,"title":{},"body":{"index.html":{}}}],["pressed",{"_index":245,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["previous",{"_index":966,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["primary",{"_index":55,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["priority",{"_index":447,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["process",{"_index":663,"title":{},"body":{"components/PageComponent.html":{}}}],["projects/.../button.stories.ts",{"_index":1228,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":1229,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../header.stories.ts",{"_index":1230,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../input.stories.ts",{"_index":1231,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../models.ts",{"_index":1227,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../page.stories.ts",{"_index":1232,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../paginator.stories.ts",{"_index":1233,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../select.stories.ts",{"_index":1234,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../textarea.component.ts",{"_index":1137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../textarea.stories.ts",{"_index":1235,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/zt",{"_index":9,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":215,"title":{"properties.html":{}},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"properties.html":{}}}],["property",{"_index":752,"title":{},"body":{"components/SelectComponent.html":{}}}],["props",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":903,"title":{},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["provides",{"_index":567,"title":{},"body":{"components/InputComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["pull",{"_index":1207,"title":{},"body":{"index.html":{}}}],["questions",{"_index":1213,"title":{},"body":{"index.html":{}}}],["radius",{"_index":95,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["raquo",{"_index":990,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["read",{"_index":697,"title":{},"body":{"components/PageComponent.html":{}}}],["readme",{"_index":1138,"title":{"index.html":{}},"body":{}}],["recalculates",{"_index":1022,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["recommend",{"_index":659,"title":{},"body":{"components/PageComponent.html":{}}}],["red",{"_index":360,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/TextareaComponent.html":{}}}],["reference",{"_index":609,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["related",{"_index":513,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["relative",{"_index":367,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["remote",{"_index":467,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["remotely",{"_index":504,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["remoteoperations",{"_index":505,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["remove",{"_index":803,"title":{},"body":{"components/SelectComponent.html":{}}}],["render",{"_index":667,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["reordering",{"_index":493,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["repository",{"_index":1177,"title":{},"body":{"index.html":{}}}],["represents",{"_index":401,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["request",{"_index":1208,"title":{},"body":{"index.html":{}}}],["required",{"_index":78,"title":{},"body":{"components/ButtonComponent.html":{}}}],["reset",{"_index":53,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["resize",{"_index":891,"title":{},"body":{"components/TextareaComponent.html":{}}}],["resizing",{"_index":496,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["responsive",{"_index":1147,"title":{},"body":{"index.html":{}}}],["results",{"_index":162,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":87,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["returns",{"_index":217,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["reusable",{"_index":1141,"title":{},"body":{"index.html":{}}}],["review",{"_index":672,"title":{},"body":{"components/PageComponent.html":{}}}],["rgba(0",{"_index":117,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["rgba(255",{"_index":365,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["rgba(77",{"_index":293,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["rgba(98",{"_index":317,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["right",{"_index":348,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["rodriguez",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["round",{"_index":200,"title":{},"body":{"components/ButtonComponent-1.html":{},"index.html":{}}}],["round_button",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1224,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["row",{"_index":458,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{}}}],["rows",{"_index":489,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rsaquo",{"_index":989,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["run",{"_index":1184,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["samplecolumns",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sampledata",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["san",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sans",{"_index":105,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{}}}],["scalex(0",{"_index":895,"title":{},"body":{"components/TextareaComponent.html":{}}}],["scalex(1",{"_index":893,"title":{},"body":{"components/TextareaComponent.html":{}}}],["scrolling",{"_index":479,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["secondary",{"_index":114,"title":{},"body":{"components/ButtonComponent.html":{}}}],["see",{"_index":1211,"title":{},"body":{"index.html":{}}}],["segoe",{"_index":635,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["select",{"_index":338,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["select'},{'name",{"_index":147,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["select.component",{"_index":1054,"title":{},"body":{"modules/ZtSelectModule.html":{}}}],["select.component.html",{"_index":740,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":739,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.module.ts",{"_index":1053,"title":{},"body":{"modules/ZtSelectModule.html":{}}}],["select/select.component.ts",{"_index":731,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["select/select.component.ts:107",{"_index":769,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:115",{"_index":775,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:38",{"_index":779,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:44",{"_index":757,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:50",{"_index":754,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:56",{"_index":761,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:62",{"_index":760,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:68",{"_index":748,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:74",{"_index":755,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:80",{"_index":751,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:85",{"_index":762,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:91",{"_index":758,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/select.component.ts:97",{"_index":766,"title":{},"body":{"components/SelectComponent.html":{}}}],["select/zt",{"_index":1052,"title":{},"body":{"modules/ZtSelectModule.html":{}}}],["select:after",{"_index":808,"title":{},"body":{"components/SelectComponent.html":{}}}],["select:focus",{"_index":793,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectable",{"_index":471,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["selectclass",{"_index":747,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":146,"title":{"components/SelectComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":457,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{}}}],["selectedkeys",{"_index":461,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["selectedrows",{"_index":459,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["selection",{"_index":438,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["selectionmode",{"_index":440,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["selects",{"_index":770,"title":{},"body":{"components/SelectComponent.html":{}}}],["serif",{"_index":109,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/TextareaComponent.html":{}}}],["server",{"_index":1182,"title":{},"body":{"index.html":{}}}],["services",{"_index":691,"title":{},"body":{"components/PageComponent.html":{}}}],["sets",{"_index":205,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["setting",{"_index":777,"title":{},"body":{"components/SelectComponent.html":{}}}],["setup",{"_index":1175,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":116,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["show",{"_index":482,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["showborders",{"_index":485,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/variables.html":{}}}],["showcharcount",{"_index":835,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["showclearbutton",{"_index":745,"title":{},"body":{"components/SelectComponent.html":{}}}],["showcolumnheaders",{"_index":492,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["showcolumnlines",{"_index":487,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["showdelete",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showedit",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shown",{"_index":651,"title":{},"body":{"components/InputComponent.html":{}}}],["showrowlines",{"_index":490,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["simplechanges",{"_index":968,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["single",{"_index":441,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["single/multiple",{"_index":1162,"title":{},"body":{"index.html":{}}}],["size",{"_index":30,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sizes",{"_index":170,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["sizing",{"_index":323,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["sm",{"_index":81,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":48,"title":{},"body":{"components/ButtonComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["smith",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":322,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["sort",{"_index":414,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["sortable",{"_index":391,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/variables.html":{}}}],["sortdirection",{"_index":392,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sorted",{"_index":446,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["sorting",{"_index":419,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"index.html":{}}}],["space",{"_index":560,"title":{},"body":{"components/HeaderComponent.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["standard",{"_index":174,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["start",{"_index":1026,"title":{},"body":{"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["starting",{"_index":664,"title":{},"body":{"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["startswith",{"_index":429,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/typealiases.html":{}}}],["state",{"_index":443,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{}}}],["statements",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":673,"title":{},"body":{"components/PageComponent.html":{}}}],["stories",{"_index":689,"title":{},"body":{"components/PageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["story",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["storybook",{"_index":14,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"index.html":{}}}],["storybookbuilding",{"_index":1185,"title":{},"body":{"index.html":{}}}],["storyobj",{"_index":1236,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/typealiases.html":{}}}],["striped",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":47,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"index.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["styling",{"_index":810,"title":{},"body":{"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["stylings",{"_index":802,"title":{},"body":{"components/SelectComponent.html":{}}}],["submit",{"_index":52,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"index.html":{}}}],["success",{"_index":56,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":687,"title":{},"body":{"components/PageComponent.html":{}}}],["sum",{"_index":540,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["summary",{"_index":533,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["support",{"_index":1045,"title":{},"body":{"components/ZtPaginatorXComponent.html":{},"index.html":{},"modules.html":{}}}],["supports",{"_index":168,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["svg",{"_index":562,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageComponent.html":{},"modules.html":{}}}],["switch",{"_index":84,"title":{},"body":{"components/ButtonComponent.html":{}}}],["table",{"_index":1124,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tables",{"_index":931,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":23,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"miscellaneous/variables.html":{}}}],["templateref",{"_index":397,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["templateurl",{"_index":182,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["testgenerating",{"_index":1188,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1187,"title":{},"body":{"index.html":{}}}],["text",{"_index":235,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text:focus",{"_index":804,"title":{},"body":{"components/SelectComponent.html":{}}}],["text:valid",{"_index":812,"title":{},"body":{"components/SelectComponent.html":{}}}],["textarea",{"_index":827,"title":{},"body":{"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textarea'},{'name",{"_index":149,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["textarea.component",{"_index":1061,"title":{},"body":{"modules/ZtTextareaModule.html":{}}}],["textarea.component.html",{"_index":830,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.component.scss",{"_index":829,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.module.ts",{"_index":1060,"title":{},"body":{"modules/ZtTextareaModule.html":{}}}],["textarea/textarea.component.ts",{"_index":826,"title":{},"body":{"components/TextareaComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["textarea/textarea.component.ts:100",{"_index":849,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:106",{"_index":847,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:112",{"_index":855,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:120",{"_index":856,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:133",{"_index":860,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:39",{"_index":871,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:45",{"_index":854,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:51",{"_index":844,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:57",{"_index":850,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:63",{"_index":852,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:68",{"_index":869,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:75",{"_index":838,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:82",{"_index":846,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:88",{"_index":843,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/textarea.component.ts:94",{"_index":851,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea/zt",{"_index":1059,"title":{},"body":{"modules/ZtTextareaModule.html":{}}}],["textarea:focus",{"_index":887,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textareaclass",{"_index":837,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":148,"title":{"components/TextareaComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["textareainput",{"_index":832,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textinput",{"_index":574,"title":{},"body":{"components/InputComponent.html":{}}}],["textlength",{"_index":580,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":184,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["themes",{"_index":171,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"index.html":{}}}],["this.currentpage",{"_index":982,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["this.currenttextlength",{"_index":876,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.disabled",{"_index":233,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["this.getpagenumbers(1",{"_index":1042,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["this.getpagenumbers(this.currentpage",{"_index":1038,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["this.getpagenumbers(this.pages",{"_index":1044,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["this.onpagechange.emit(currentpage",{"_index":983,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["this.onpagechange.emit(this.currentpage",{"_index":985,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["this.outline",{"_index":224,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["this.pagenumbers",{"_index":978,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["this.pagenumbers.push(i",{"_index":1041,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["this.pagenumbers[0",{"_index":984,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["this.pagenumbers[this.pagenumbers.length",{"_index":986,"title":{},"body":{"components/ZtPaginatorComponent.html":{}}}],["this.pages",{"_index":1043,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["this.pageslimit",{"_index":1039,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["this.size",{"_index":85,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.textareainput?.nativeelement.value",{"_index":875,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.textareainput?.nativeelement.value.length",{"_index":874,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.textinput?.nativeelement.value",{"_index":618,"title":{},"body":{"components/InputComponent.html":{}}}],["this.textinput?.nativeelement.value.length",{"_index":616,"title":{},"body":{"components/InputComponent.html":{}}}],["this.theme",{"_index":223,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["this.type",{"_index":230,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["this.user",{"_index":714,"title":{},"body":{"components/PageComponent.html":{}}}],["this.value",{"_index":617,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.variant",{"_index":226,"title":{},"body":{"components/ButtonComponent-1.html":{}}}],["thomas",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tip",{"_index":700,"title":{},"body":{"components/PageComponent.html":{}}}],["title",{"_index":393,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":705,"title":{},"body":{"components/PageComponent.html":{}}}],["top",{"_index":563,"title":{},"body":{"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["total",{"_index":951,"title":{},"body":{"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["track",{"_index":787,"title":{},"body":{"components/SelectComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["transform",{"_index":639,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["transition",{"_index":642,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["translate(0",{"_index":640,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["transparent",{"_index":122,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":694,"title":{},"body":{"components/PageComponent.html":{}}}],["tutorials",{"_index":696,"title":{},"body":{"components/PageComponent.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1225,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":566,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["typically",{"_index":853,"title":{},"body":{"components/TextareaComponent.html":{}}}],["ui",{"_index":10,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["uis",{"_index":661,"title":{},"body":{"components/PageComponent.html":{}}}],["ul",{"_index":722,"title":{},"body":{"components/PageComponent.html":{}}}],["unique",{"_index":523,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{}}}],["update",{"_index":857,"title":{},"body":{"components/TextareaComponent.html":{}}}],["updates",{"_index":601,"title":{},"body":{"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{}}}],["url",{"_index":466,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["usage",{"_index":1157,"title":{},"body":{"index.html":{}}}],["use",{"_index":682,"title":{},"body":{"components/PageComponent.html":{},"components/SelectComponent.html":{}}}],["used",{"_index":173,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["user",{"_index":337,"title":{"interfaces/User.html":{}},"body":{"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"interfaces/User.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.name",{"_index":551,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userevent.click(loginbutton",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":735,"title":{},"body":{"components/SelectComponent.html":{}}}],["using",{"_index":692,"title":{},"body":{"components/PageComponent.html":{}}}],["validation",{"_index":571,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":399,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["var",{"_index":136,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["variable",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1237,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":32,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{}}}],["variants",{"_index":172,"title":{},"body":{"components/ButtonComponent-1.html":{},"index.html":{}}}],["various",{"_index":169,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["versatile",{"_index":1155,"title":{},"body":{"index.html":{}}}],["version",{"_index":1222,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":331,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{}}}],["via",{"_index":1193,"title":{},"body":{"index.html":{}}}],["view",{"_index":1183,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":614,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["viewchild('textareainput",{"_index":870,"title":{},"body":{"components/TextareaComponent.html":{}}}],["viewchild('textinput",{"_index":607,"title":{},"body":{"components/InputComponent.html":{}}}],["viewports",{"_index":703,"title":{},"body":{"components/PageComponent.html":{}}}],["virtual",{"_index":478,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["virtualscroll",{"_index":480,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{}}}],["visible",{"_index":394,"title":{},"body":{"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/TextareaComponent.html":{}}}],["visual",{"_index":176,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["void",{"_index":605,"title":{},"body":{"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["warning",{"_index":57,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["webkit",{"_index":340,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{}}}],["weight",{"_index":98,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{}}}],["welcome",{"_index":550,"title":{},"body":{"components/HeaderComponent.html":{}}}],["well",{"_index":1150,"title":{},"body":{"index.html":{}}}],["whether",{"_index":192,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["white",{"_index":113,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["width",{"_index":344,"title":{},"body":{"components/ButtonComponent-1.html":{},"interfaces/DataGridColumn.html":{},"interfaces/DataGridEvent.html":{},"interfaces/DataGridFilterState.html":{},"interfaces/DataGridGroupRow.html":{},"interfaces/DataGridGroupState.html":{},"interfaces/DataGridOptions.html":{},"interfaces/DataGridRow.html":{},"interfaces/DataGridSelectionState.html":{},"interfaces/DataGridSortState.html":{},"interfaces/DataGridState.html":{},"interfaces/DataGridSummary.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":840,"title":{},"body":{"components/TextareaComponent.html":{}}}],["wilson",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window:keyup",{"_index":836,"title":{},"body":{"components/TextareaComponent.html":{}}}],["window:keyup(event",{"_index":858,"title":{},"body":{"components/TextareaComponent.html":{}}}],["within",{"_index":602,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["within(canvaselement",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":674,"title":{},"body":{"components/PageComponent.html":{}}}],["works",{"_index":1063,"title":{},"body":{"components/ZtUiComponents.html":{}}}],["wrapper",{"_index":726,"title":{},"body":{"components/PageComponent.html":{}}}],["x",{"_index":798,"title":{},"body":{"components/SelectComponent.html":{},"components/ZtPaginatorXComponent.html":{},"index.html":{}}}],["x'},{'name",{"_index":157,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{}}}],["x.component",{"_index":1001,"title":{},"body":{"modules/ZtPaginatorModule.html":{}}}],["x.component.html",{"_index":1008,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.scss",{"_index":1007,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts",{"_index":1002,"title":{},"body":{"components/ZtPaginatorXComponent.html":{},"coverage.html":{}}}],["x.component.ts:101",{"_index":1032,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:108",{"_index":1024,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:130",{"_index":1021,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:139",{"_index":1027,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:150",{"_index":1030,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:161",{"_index":1031,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:172",{"_index":1029,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:39",{"_index":1037,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:44",{"_index":1035,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:49",{"_index":1036,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:55",{"_index":1014,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:61",{"_index":1016,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:67",{"_index":1018,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:73",{"_index":1019,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:79",{"_index":1020,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:87",{"_index":1013,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:91",{"_index":1034,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x.component.ts:97",{"_index":1033,"title":{},"body":{"components/ZtPaginatorXComponent.html":{}}}],["x/zt",{"_index":1000,"title":{},"body":{"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"coverage.html":{}}}],["york",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":349,"title":{},"body":{"components/ButtonComponent-1.html":{},"components/SelectComponent.html":{}}}],["zoom",{"_index":908,"title":{},"body":{"modules/ZtDataGridModule.html":{},"modules/ZtInputModule.html":{},"modules/ZtPaginatorModule.html":{},"modules/ZtSelectModule.html":{},"modules/ZtTextareaModule.html":{},"overview.html":{}}}],["zt",{"_index":80,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ztbuttoncomponent",{"_index":20,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ztbuttonmodule",{"_index":911,"title":{},"body":{"modules/ZtDataGridModule.html":{}}}],["ztdatagridcomponent",{"_index":150,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"modules/ZtDataGridModule.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ztdatagridmodule",{"_index":899,"title":{"modules/ZtDataGridModule.html":{}},"body":{"modules/ZtDataGridModule.html":{},"modules.html":{},"overview.html":{}}}],["ztinputmodule",{"_index":916,"title":{"modules/ZtInputModule.html":{}},"body":{"modules/ZtInputModule.html":{},"modules.html":{},"overview.html":{}}}],["ztpaginatorcomponent",{"_index":153,"title":{"components/ZtPaginatorComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ztpaginatormodule",{"_index":994,"title":{"modules/ZtPaginatorModule.html":{}},"body":{"modules/ZtPaginatorModule.html":{},"modules.html":{},"overview.html":{}}}],["ztpaginatorxcomponent",{"_index":155,"title":{"components/ZtPaginatorXComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"modules/ZtPaginatorModule.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{},"overview.html":{}}}],["ztselectmodule",{"_index":1048,"title":{"modules/ZtSelectModule.html":{}},"body":{"modules/ZtSelectModule.html":{},"modules.html":{},"overview.html":{}}}],["ztsize",{"_index":36,"title":{},"body":{"components/ButtonComponent.html":{}}}],["zttextareamodule",{"_index":1055,"title":{"modules/ZtTextareaModule.html":{}},"body":{"modules/ZtTextareaModule.html":{},"modules.html":{},"overview.html":{}}}],["ztuicomponents",{"_index":158,"title":{"components/ZtUiComponents.html":{}},"body":{"components/ButtonComponent.html":{},"components/ButtonComponent-1.html":{},"components/HeaderComponent.html":{},"components/InputComponent.html":{},"components/PageComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/ZtPaginatorComponent.html":{},"components/ZtPaginatorXComponent.html":{},"components/ZtUiComponents.html":{},"coverage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/stories/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                ZtButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./button.css\n            \n\n\n            \n                template\n                 \n  {{ label }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                outline\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ztSize\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:36\n                            \n                        \n                \n                    \n                        Is disabled?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:48\n                            \n                        \n                \n                    \n                        Button contents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        outline\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:32\n                            \n                        \n                \n                    \n                        Is outline style?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"small\" | \"medium\" | \"large\"\n\n                    \n                \n                \n                    \n                        Default value : 'medium'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:40\n                            \n                        \n                \n                    \n                        How large should the button be?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\" | \"reset\"\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:24\n                            \n                        \n                \n                    \n                        Button type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"dark\" | \"link\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:28\n                            \n                        \n                \n                    \n                        Button variant\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:52\n                            \n                        \n                \n                    \n                        Optional click handler\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ztSize\n                    \n                \n\n                \n                    \n                        getztSize()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/stories/button.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ButtonComponent as ZtButtonComponent } from '../lib/zt-button/button.component';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule, ZtButtonComponent],\n  template: ` \n  {{ label }}\n`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Button type */\n  @Input()\n  type: 'button' | 'submit' | 'reset' = 'button';\n\n  /** Button variant */\n  @Input()\n  variant: 'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'dark' | 'link' = 'default';\n\n  /** Is outline style? */\n  @Input()\n  outline = false;\n\n  /** Is disabled? */\n  @Input()\n  disabled = false;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter();\n\n  get ztSize(): 'zt-sm' | 'zt-md' | 'zt-lg' {\n    switch (this.size) {\n      case 'small': return 'zt-sm';\n      case 'medium': return 'zt-md';\n      case 'large': return 'zt-lg';\n      default: return 'zt-md';\n    }\n  }\n}\n\n    \n\n\n    \n                \n                    ./button.css\n                \n                .storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ label }}'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent-1.html":{"url":"components/ButtonComponent-1.html","title":"component - ButtonComponent-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/lib/zt-button/button.component.ts\n\n\n\n    \n        Description\n    \n    \n        A customizable button component that supports various styles, sizes, themes, and variants.\nIt can be used as a standard button, submit button, or reset button with different visual appearances.\nExample :Click me\nDisabled\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                zt-button\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                outline\n                            \n                            \n                                size\n                            \n                            \n                                theme\n                            \n                            \n                                type\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                attr.disabled\n                            \n                            \n                                attr.type\n                            \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    buttonClass\n                                \n                                \n                                    buttonType\n                                \n                                \n                                    isDisabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:35\n                            \n                        \n                \n                    \n                        Whether the button is disabled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        outline\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:47\n                            \n                        \n                \n                    \n                        Whether to display the button as an outline style.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"zt-sm\" | \"zt-md\" | \"zt-lg\"\n\n                    \n                \n                \n                    \n                        Default value : 'zt-md'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:53\n                            \n                        \n                \n                    \n                        The size of the button.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:59\n                            \n                        \n                \n                    \n                        The theme of the button.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\" | \"reset\"\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:29\n                            \n                        \n                \n                    \n                        The type of the button element.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"dark\" | \"link\" | \"round\" | \"floating\"\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:41\n                            \n                        \n                \n                    \n                        The visual variant of the button.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        attr.disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:87\n                        \n                    \n\n            \n                \n                    Sets the 'disabled' attribute on the button element when disabled is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr.type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:79\n                        \n                    \n\n            \n                \n                    Sets the 'type' attribute on the button element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:65\n                        \n                    \n\n            \n                \n                    Dynamically applies CSS classes to the button element based on the component's properties.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        buttonClass\n                    \n                \n\n                \n                    \n                        getbuttonClass()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:65\n                                \n                            \n                    \n                        \n                                Dynamically applies CSS classes to the button element based on the component's properties.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n\n                \n                    \n                        getbuttonType()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:79\n                                \n                            \n                    \n                        \n                                Sets the 'type' attribute on the button element.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n\n                \n                    \n                        getisDisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-button/button.component.ts:87\n                                \n                            \n                    \n                        \n                                Sets the 'disabled' attribute on the button element when disabled is true.\n\n\n                                \n                                \n                                \n                                    Returns :     boolean | null\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\n\n/**\n * A customizable button component that supports various styles, sizes, themes, and variants.\n * It can be used as a standard button, submit button, or reset button with different visual appearances.\n *\n * @example\n * Click me\n * Disabled\n */\n@Component({\n  selector: 'zt-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n})\nexport class ButtonComponent {\n  /**\n   * The type of the button element.\n   * @default 'button'\n   */\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\n\n  /**\n   * Whether the button is disabled.\n   * @default false\n   */\n  @Input() disabled = false;\n\n  /**\n   * The visual variant of the button.\n   * @default 'primary'\n   */\n  @Input() variant: 'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'dark' | 'link' | 'round' | 'floating' = 'primary';\n\n  /**\n   * Whether to display the button as an outline style.\n   * @default false\n   */\n  @Input() outline = false;\n\n  /**\n   * The size of the button.\n   * @default 'zt-md'\n   */\n  @Input() size: 'zt-sm' | 'zt-md' | 'zt-lg' = 'zt-md';\n\n  /**\n   * The theme of the button.\n   * @default 'light'\n   */\n  @Input() theme: 'light' | 'dark' | 'bootstrap' | 'material' = 'light';\n\n  /**\n   * Dynamically applies CSS classes to the button element based on the component's properties.\n   * @returns A string of CSS classes.\n   */\n  @HostBinding('class') get buttonClass(): string {\n    let classes: string[] = [this.size, `theme-${this.theme}`];\n    if (this.outline) {\n      classes.push(`zt-${this.variant}-o`);\n    } else {\n      classes.push(`zt-${this.variant}`);\n    }\n    return classes.join(' ');\n  }\n\n  /**\n   * Sets the 'type' attribute on the button element.\n   * @returns The button type.\n   */\n  @HostBinding('attr.type') get buttonType(): string {\n    return this.type;\n  }\n\n  /**\n   * Sets the 'disabled' attribute on the button element when disabled is true.\n   * @returns true if disabled, null otherwise.\n   */\n  @HostBinding('attr.disabled') get isDisabled(): boolean | null {\n    return this.disabled || null;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                // Light theme (default)\n:host(.theme-light) {\n  --zt-text-black: #000000;\n  --zt-text-white: #ffffff;\n  --zt-text-primary: #007bff;\n\n  --zt-default: #f8f9fa;\n  --zt-default-hover-bg: #e9ecef;\n  --zt-default-hover-border: #adb5bd;\n  --zt-default-pressed: #dee2e6;\n\n  --zt-primary: #007bff;\n  --zt-primary-hover-bg: #0056b3;\n  --zt-primary-hover-border: #004085;\n  --zt-primary-pressed: #004085;\n\n  --zt-success: #28a745;\n  --zt-success-hover-bg: #1e7e34;\n  --zt-success-hover-border: #155724;\n  --zt-success-pressed: #155724;\n\n  --zt-info: #17a2b8;\n  --zt-info-hover-bg: #117a8b;\n  --zt-info-hover-border: #0c5460;\n  --zt-info-pressed: #0c5460;\n\n  --zt-warning: #ffc107;\n  --zt-warning-hover-bg: #e0a800;\n  --zt-warning-hover-border: #d39e00;\n  --zt-warning-pressed: #d39e00;\n\n  --zt-danger: #dc3545;\n  --zt-danger-hover-bg: #c82333;\n  --zt-danger-hover-border: #bd2130;\n  --zt-danger-pressed: #bd2130;\n\n  --zt-dark: #343a40;\n  --zt-dark-hover-bg: #23272b;\n  --zt-dark-hover-border: #1d2124;\n  --zt-dark-pressed: #1d2124;\n\n  --zt-link: transparent;\n  --zt-link-hover-bg: rgba(0, 123, 255, 0.1);\n  --zt-link-hover-border: #007bff;\n  --zt-link-pressed: rgba(0, 123, 255, 0.2);\n\n  --zt-outline-border-size: 1px;\n  --zt-border-radius: 4px;\n}\n\n// Dark theme\n:host(.theme-dark) {\n  --zt-text-black: #000000;\n  --zt-text-white: #ffffff;\n  --zt-text-primary: #4dabf7;\n\n  color: var(--zt-text-white);\n\n  &:hover {\n    color: var(--zt-text-white);\n  }\n\n  --zt-default: #2d3748;\n  --zt-default-hover-bg: #4a5568;\n  --zt-default-hover-border: #718096;\n  --zt-default-pressed: #1a202c;\n\n  --zt-primary: #4dabf7;\n  --zt-primary-hover-bg: #3182ce;\n  --zt-primary-hover-border: #2c5282;\n  --zt-primary-pressed: #2a69ac;\n\n  --zt-success: #48bb78;\n  --zt-success-hover-bg: #38a169;\n  --zt-success-hover-border: #2f855a;\n  --zt-success-pressed: #276749;\n\n  --zt-info: #4fd1c9;\n  --zt-info-hover-bg: #38b2ac;\n  --zt-info-hover-border: #319795;\n  --zt-info-pressed: #2c7a7b;\n\n  --zt-warning: #ed8936;\n  --zt-warning-hover-bg: #dd6b20;\n  --zt-warning-hover-border: #c05621;\n  --zt-warning-pressed: #9c4221;\n\n  --zt-danger: #f56565;\n  --zt-danger-hover-bg: #e53e3e;\n  --zt-danger-hover-border: #c53030;\n  --zt-danger-pressed: #9b2c2c;\n\n  --zt-dark: #1a202c;\n  --zt-dark-hover-bg: #2d3748;\n  --zt-dark-hover-border: #4a5568;\n  --zt-dark-pressed: #718096;\n\n  --zt-link: transparent;\n  --zt-link-hover-bg: rgba(77, 171, 247, 0.1);\n  --zt-link-hover-border: #4dabf7;\n  --zt-link-pressed: rgba(77, 171, 247, 0.2);\n\n  --zt-outline-border-size: 1px;\n  --zt-border-radius: 4px;\n}\n\n// Bootstrap theme\n:host(.theme-bootstrap) {\n  --zt-text-black: #000000;\n  --zt-text-white: #ffffff;\n  --zt-text-primary: #007bff;\n\n  --zt-default: #f8f9fa;\n  --zt-default-hover-bg: #e9ecef;\n  --zt-default-hover-border: #adb5bd;\n  --zt-default-pressed: #dee2e6;\n\n  --zt-primary: #007bff;\n  --zt-primary-hover-bg: #0056b3;\n  --zt-primary-hover-border: #004085;\n  --zt-primary-pressed: #004085;\n\n  --zt-success: #28a745;\n  --zt-success-hover-bg: #1e7e34;\n  --zt-success-hover-border: #155724;\n  --zt-success-pressed: #155724;\n\n  --zt-info: #17a2b8;\n  --zt-info-hover-bg: #117a8b;\n  --zt-info-hover-border: #0c5460;\n  --zt-info-pressed: #0c5460;\n\n  --zt-warning: #ffc107;\n  --zt-warning-hover-bg: #e0a800;\n  --zt-warning-hover-border: #d39e00;\n  --zt-warning-pressed: #d39e00;\n\n  --zt-danger: #dc3545;\n  --zt-danger-hover-bg: #c82333;\n  --zt-danger-hover-border: #bd2130;\n  --zt-danger-pressed: #bd2130;\n\n  --zt-dark: #343a40;\n  --zt-dark-hover-bg: #23272b;\n  --zt-dark-hover-border: #1d2124;\n  --zt-dark-pressed: #1d2124;\n\n  --zt-link: transparent;\n  --zt-link-hover-bg: rgba(0, 123, 255, 0.1);\n  --zt-link-hover-border: #007bff;\n  --zt-link-pressed: rgba(0, 123, 255, 0.2);\n\n  --zt-outline-border-size: 1px;\n  --zt-border-radius: 4px;\n}\n\n// Material theme\n:host(.theme-material) {\n  --zt-text-black: #000000;\n  --zt-text-white: #ffffff;\n  --zt-text-primary: #6200ee;\n\n  --zt-default: #ffffff;\n  --zt-default-hover-bg: #f5f5f5;\n  --zt-default-hover-border: #e0e0e0;\n  --zt-default-pressed: #eeeeee;\n\n  --zt-primary: #6200ee;\n  --zt-primary-hover-bg: #4c00d4;\n  --zt-primary-hover-border: #3b00a1;\n  --zt-primary-pressed: #3b00a1;\n\n  --zt-success: #4caf50;\n  --zt-success-hover-bg: #388e3c;\n  --zt-success-hover-border: #2e7d32;\n  --zt-success-pressed: #2e7d32;\n\n  --zt-info: #2196f3;\n  --zt-info-hover-bg: #1976d2;\n  --zt-info-hover-border: #1565c0;\n  --zt-info-pressed: #1565c0;\n\n  --zt-warning: #ff9800;\n  --zt-warning-hover-bg: #f57c00;\n  --zt-warning-hover-border: #ef6c00;\n  --zt-warning-pressed: #ef6c00;\n\n  --zt-danger: #f44336;\n  --zt-danger-hover-bg: #d32f2f;\n  --zt-danger-hover-border: #b71c1c;\n  --zt-danger-pressed: #b71c1c;\n\n  --zt-dark: #212121;\n  --zt-dark-hover-bg: #424242;\n  --zt-dark-hover-border: #616161;\n  --zt-dark-pressed: #616161;\n\n  --zt-link: transparent;\n  --zt-link-hover-bg: rgba(98, 0, 238, 0.1);\n  --zt-link-hover-border: #6200ee;\n  --zt-link-pressed: rgba(98, 0, 238, 0.2);\n\n  --zt-outline-border-size: 1px;\n  --zt-border-radius: 4px;\n}\n\n:host {\n  // default button\n  height: 38px;\n  padding: 0 0.75em;\n  background-color: var(--zt-default);\n  border: var(--zt-outline-border-size) solid var(--zt-default);\n  box-sizing: border-box;\n  border-radius: var(--zt-border-radius);\n  color: var(--zt-text-black);\n  display: inline-flex;\n  line-height: 1.5;\n  font-weight: 400;\n  text-decoration: none;\n  text-align: center;\n  vertical-align: middle;\n  font-family: inherit;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--zt-default-hover-bg);\n    border: var(--zt-outline-border-size) solid var(--zt-default-hover-border);\n    color: var(--zt-text-black);\n  }\n\n  &:active {\n    background-color: var(--zt-default-pressed);\n  }\n\n  &.zt-default-o {\n    // default outline button\n    padding: 0 0.75em;\n    background-color: inherit;\n    border: var(--zt-outline-border-size) solid var(--zt-default);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-black);\n    line-height: 1.5;\n    font-weight: 400;\n    text-decoration: none;\n    text-align: center;\n    font-family: inherit;\n\n    &:hover {\n      cursor: pointer;\n      background-color: var(--zt-default-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-default-hover-border);\n      color: var(--zt-text-black);\n    }\n\n    &:active {\n      background-color: var(--zt-default-pressed);\n    }\n  }\n\n  // primary button\n  &.zt-primary {\n    background-color: var(--zt-primary);\n    border: var(--zt-outline-border-size) solid var(--zt-primary);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-white);\n    &:hover {\n      background-color: var(--zt-primary-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-primary-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-primary-pressed);\n    }\n  }\n\n  // primary outline button\n  &.zt-primary-o {\n    background-color: inherit;\n    border: var(--zt-outline-border-size) solid var(--zt-primary);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-black);\n    &:hover {\n      background-color: var(--zt-primary-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-primary-hover-border);\n      color: var(--zt-text-black);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-primary-pressed);\n    }\n  }\n\n  // success button\n  &.zt-success {\n    background-color: var(--zt-success);\n    border: var(--zt-outline-border-size) solid var(--zt-success);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-white);\n\n    &:hover {\n      background-color: var(--zt-success-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-success-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-success-pressed);\n    }\n  }\n\n  // success outline button\n  &.zt-success-o {\n    background-color: inherit;\n    border: var(--zt-outline-border-size) solid var(--zt-success);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-black);\n\n    &:hover {\n      background-color: var(--zt-success-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-success-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-success-pressed);\n    }\n  }\n\n  // info button\n  &.zt-info {\n    background-color: var(--zt-info);\n    border: var(--zt-outline-border-size) solid var(--zt-info);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-white);\n\n    &:hover {\n      background-color: var(--zt-info-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-info-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-info-pressed);\n    }\n  }\n\n  // info outline button\n  &.zt-info-o {\n    background-color: inherit;\n    border: var(--zt-outline-border-size) solid var(--zt-info);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-black);\n\n    &:hover {\n      background-color: var(--zt-info-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-info-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-info-pressed);\n    }\n  }\n\n  // warning button\n  &.zt-warning {\n    background-color: var(--zt-warning);\n    border: var(--zt-outline-border-size) solid var(--zt-warning);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-white);\n\n    &:hover {\n      background-color: var(--zt-warning-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-warning-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-warning-pressed);\n    }\n  }\n\n  // warning outline button\n  &.zt-warning-o {\n    background-color: inherit;\n    border: var(--zt-outline-border-size) solid var(--zt-warning);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-black);\n\n    &:hover {\n      background-color: var(--zt-warning-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-warning-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-warning-pressed);\n    }\n  }\n\n  // danger button\n  &.zt-danger {\n    background-color: var(--zt-danger);\n    border: var(--zt-outline-border-size) solid var(--zt-danger);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-white);\n\n    &:hover {\n      background-color: var(--zt-danger-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-danger-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-danger-pressed);\n    }\n  }\n\n  // danger outline button\n  &.zt-danger-o {\n    background-color: inherit;\n    border: var(--zt-outline-border-size) solid var(--zt-danger);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-black);\n\n    &:hover {\n      background-color: var(--zt-danger-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-danger-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-danger-pressed);\n    }\n  }\n\n  // dark button\n  &.zt-dark {\n    background-color: var(--zt-dark);\n    border: var(--zt-outline-border-size) solid var(--zt-dark);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-white);\n\n    &:hover {\n      background-color: var(--zt-dark-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-dark-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-dark-pressed);\n    }\n  }\n\n  // dark outline button\n  &.zt-dark-o {\n    background-color: inherit;\n    border: var(--zt-outline-border-size) solid var(--zt-dark);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-black);\n\n    &:hover {\n      background-color: var(--zt-dark-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-dark-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-dark-pressed);\n    }\n  }\n\n  // link button\n  &.zt-link {\n    background-color: var(--zt-link);\n    border: var(--zt-outline-border-size) solid var(--zt-link);\n    box-sizing: border-box;\n    border-radius: var(--zt-border-radius);\n    color: var(--zt-text-primary);\n\n    &:hover {\n      background-color: var(--zt-link-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-link-hover-border);\n      color: var(--zt-text-primary);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-link-pressed);\n      color: var(--zt-text-primary);\n    }\n  }\n\n  // round button\n  &.zt-round {\n    background-color: var(--zt-primary);\n    border: var(--zt-outline-border-size) solid var(--zt-primary);\n    box-sizing: border-box;\n    border-radius: 50%;\n    width: 38px;\n    height: 38px;\n    padding: 0;\n    color: var(--zt-text-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:hover {\n      background-color: var(--zt-primary-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-primary-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n    }\n\n    &:active {\n      background-color: var(--zt-primary-pressed);\n    }\n  }\n\n  // floating button\n  &.zt-floating {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    z-index: 1000;\n    background-color: var(--zt-primary);\n    border: var(--zt-outline-border-size) solid var(--zt-primary);\n    box-sizing: border-box;\n    border-radius: 50%;\n    width: 56px;\n    height: 56px;\n    padding: 0;\n    color: var(--zt-text-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n\n    &:hover {\n      background-color: var(--zt-primary-hover-bg);\n      border: var(--zt-outline-border-size) solid var(--zt-primary-hover-border);\n      color: var(--zt-text-white);\n      cursor: pointer;\n      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);\n    }\n\n    &:active {\n      background-color: var(--zt-primary-pressed);\n    }\n  }\n\n  // Size variants\n  &.zt-sm {\n    height: 30px;\n    padding: 0 0.5em;\n    font-size: 12px;\n  }\n\n  &.zt-md {\n    height: 38px;\n    padding: 0 0.75em;\n    font-size: 14px;\n  }\n\n  &.zt-lg {\n    height: 46px;\n    padding: 0 1em;\n    font-size: 16px;\n  }\n\n  .button-red {\n    background: #b8312f;\n  }\n\n  button {\n    cursor: pointer;\n    border: 0;\n    margin: 8px;\n    padding: 8px;\n    border-radius: 3px;\n    font-size: 13px;\n    color: rgba(255, 255, 255, 0.8);\n    background: #333;\n    position: relative;\n    overflow: hidden;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.3);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridColumn.html":{"url":"interfaces/DataGridColumn.html","title":"interface - DataGridColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the configuration for a data grid column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alignment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTemplate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dataType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editTemplate\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterOperator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterValue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headerTemplate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            template\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alignment:     \"left\" | \"center\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"center\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text alignment for the column cells.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTemplate:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom template for the column cells.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataType:         DataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The data type of the column values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the column is editable.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editTemplate:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom template for editing the column cells.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field name in the data source that this column represents.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the column is filterable.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterOperator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterOperator:         FilterOperator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterOperator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current filter operator for this column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterValue:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current filter value for this column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Format string for displaying values (e.g., date formats).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headerTemplate:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom template for the column header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum width of the column in pixels.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The minimum width of the column in pixels.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the column is sortable.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortDirection:         SortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current sort direction for this column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom template for the entire column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The display title for the column header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the column is visible.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%').\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridEvent.html":{"url":"interfaces/DataGridEvent.html","title":"interface - DataGridEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Event object emitted by the data grid for various operations.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            column\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            oldValue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            row\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        column\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        column:         DataGridColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridColumn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The column related to the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional data associated with the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The field related to the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oldValue:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The old value for edit events.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The row related to the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Multiple rows related to the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"sort\" | \"filter\" | \"select\" | \"edit\" | \"group\" | \"page\" | \"export\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"sort\" | \"filter\" | \"select\" | \"edit\" | \"group\" | \"page\" | \"export\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The new value for edit events.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridFilterState.html":{"url":"interfaces/DataGridFilterState.html","title":"interface - DataGridFilterState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridFilterState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the current filtering state for a data grid column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            operator\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field being filtered.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:         FilterOperator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterOperator\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The filter operator.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The filter value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridGroupRow.html":{"url":"interfaces/DataGridGroupRow.html","title":"interface - DataGridGroupRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridGroupRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a group row in the data grid.\n\n            \n\n            \n                Extends\n            \n            \n                            DataGridRow\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            summary\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the group is expanded.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         DataGridRow[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridRow[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The child rows in this group.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The group key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The nesting level of the group.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Summary data for the group.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridGroupState.html":{"url":"interfaces/DataGridGroupState.html","title":"interface - DataGridGroupState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridGroupState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the current grouping state for a data grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         SortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortDirection\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort direction for the group.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field being grouped by.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridOptions.html":{"url":"interfaces/DataGridOptions.html","title":"interface - DataGridOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for the data grid component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowColumnReordering\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allowColumnResizing\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allowFiltering\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allowGrouping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allowSelection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allowSorting\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            dataSource\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exportable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pageable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pageSizeOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            remoteOperations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showBorders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showColumnHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showColumnLines\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showRowLines\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            virtualScroll\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColumnReordering\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowColumnReordering:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether column reordering is allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowColumnResizing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowColumnResizing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether column resizing is allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowFiltering\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowFiltering:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether filtering is allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowGrouping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowGrouping:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether grouping is allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowSelection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowSelection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether selection is allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowSorting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowSorting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether sorting is allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         DataGridColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of column definitions.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataSource\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataSource:     any[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[] | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data source - either an array of data or a URL for remote data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether editing is enabled globally.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exportable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exportable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether data export is enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether filtering is enabled globally.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether grouping is enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether pagination is enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default page size.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSizeOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSizeOptions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Available page size options.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteOperations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteOperations:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether operations should be performed remotely.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether row selection is enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showBorders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showBorders:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to show borders around the grid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showColumnHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showColumnHeaders:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to show column headers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showColumnLines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showColumnLines:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to show vertical lines between columns.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRowLines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showRowLines:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to show horizontal lines between rows.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether sorting is enabled globally.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The theme of the data grid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        virtualScroll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        virtualScroll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether virtual scrolling is enabled.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridRow.html":{"url":"interfaces/DataGridRow.html","title":"interface - DataGridRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a row in the data grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            level\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The original data object for this row.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether this row is expanded (for grouped rows).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The index of this row in the data source.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique key for this row.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The nesting level of this row.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The parent row for nested rows.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether this row is selected.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridSelectionState.html":{"url":"interfaces/DataGridSelectionState.html","title":"interface - DataGridSelectionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridSelectionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the current selection state for a data grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            selectedKeys\n                                        \n                                \n                                \n                                        \n                                            selectedRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         SelectionMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectionMode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The selection mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedKeys:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of selected row keys.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedRows:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of selected row data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridSortState.html":{"url":"interfaces/DataGridSortState.html","title":"interface - DataGridSortState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridSortState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the current sorting state for a data grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         SortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortDirection\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort direction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field being sorted.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The priority of this sort (for multi-column sorting).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridState.html":{"url":"interfaces/DataGridState.html","title":"interface - DataGridState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the complete state of the data grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                                \n                                        \n                                            selection\n                                        \n                                \n                                \n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         DataGridColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current column configurations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         DataGridFilterState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridFilterState[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filtering state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         DataGridGroupState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridGroupState[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current grouping state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current pagination state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selection:         DataGridSelectionState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridSelectionState\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current selection state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:         DataGridSortState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataGridSortState[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current sorting state.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataGridSummary.html":{"url":"interfaces/DataGridSummary.html","title":"interface - DataGridSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataGridSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for summary calculations in the data grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayFormat\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregate:     \"sum\" | \"avg\" | \"min\" | \"max\" | \"count\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"sum\" | \"avg\" | \"min\" | \"max\" | \"count\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of aggregation to perform.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Display format for the summary label.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field to calculate summary for.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Format string for the summary value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\n\n/**\n * Represents the data type of a column in the data grid.\n */\nexport type DataType = 'string' | 'number' | 'date' | 'boolean';\n\n/**\n * Represents the direction of sorting.\n */\nexport type SortDirection = 'asc' | 'desc' | null;\n\n/**\n * Represents the available filter operators for data grid filtering.\n */\nexport type FilterOperator =\n  | 'equals'\n  | 'notEquals'\n  | 'contains'\n  | 'notContains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'greaterThan'\n  | 'greaterThanOrEqual'\n  | 'lessThan'\n  | 'lessThanOrEqual'\n  | 'between'\n  | 'isEmpty'\n  | 'isNotEmpty';\n\n/**\n * Represents the selection mode for the data grid.\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n * Defines the configuration for a data grid column.\n */\nexport interface DataGridColumn {\n  /** The field name in the data source that this column represents. */\n  field: string;\n  /** The display title for the column header. */\n  title?: string;\n  /** The width of the column. Can be a number (pixels) or string (e.g., '100px', '20%'). */\n  width?: number | string;\n  /** The minimum width of the column in pixels. */\n  minWidth?: number;\n  /** The maximum width of the column in pixels. */\n  maxWidth?: number;\n  /** Whether the column is sortable. */\n  sortable?: boolean;\n  /** Whether the column is filterable. */\n  filterable?: boolean;\n  /** Whether the column is editable. */\n  editable?: boolean;\n  /** Whether the column is visible. */\n  visible?: boolean;\n  /** Custom template for the entire column. */\n  template?: TemplateRef;\n  /** The data type of the column values. */\n  dataType?: DataType;\n  /** Format string for displaying values (e.g., date formats). */\n  format?: string;\n  /** Current sort direction for this column. */\n  sortDirection?: SortDirection;\n  /** Current filter value for this column. */\n  filterValue?: any;\n  /** Current filter operator for this column. */\n  filterOperator?: FilterOperator;\n  /** Text alignment for the column cells. */\n  alignment?: 'left' | 'center' | 'right';\n  /** Custom template for the column header. */\n  headerTemplate?: TemplateRef;\n  /** Custom template for the column cells. */\n  cellTemplate?: TemplateRef;\n  /** Custom template for editing the column cells. */\n  editTemplate?: TemplateRef;\n}\n\n/**\n * Represents the current sorting state for a data grid.\n */\nexport interface DataGridSortState {\n  /** The field being sorted. */\n  field: string;\n  /** The sort direction. */\n  direction: SortDirection;\n  /** The priority of this sort (for multi-column sorting). */\n  priority?: number;\n}\n\n/**\n * Represents the current filtering state for a data grid column.\n */\nexport interface DataGridFilterState {\n  /** The field being filtered. */\n  field: string;\n  /** The filter value. */\n  value: any;\n  /** The filter operator. */\n  operator: FilterOperator;\n}\n\n/**\n * Represents the current grouping state for a data grid.\n */\nexport interface DataGridGroupState {\n  /** The field being grouped by. */\n  field: string;\n  /** The sort direction for the group. */\n  direction: SortDirection;\n}\n\n/**\n * Represents the current selection state for a data grid.\n */\nexport interface DataGridSelectionState {\n  /** The selection mode. */\n  mode: SelectionMode;\n  /** Array of selected row data. */\n  selectedRows: any[];\n  /** Array of selected row keys. */\n  selectedKeys: any[];\n}\n\n/**\n * Configuration options for the data grid component.\n */\nexport interface DataGridOptions {\n  /** Array of column definitions. */\n  columns: DataGridColumn[];\n  /** Data source - either an array of data or a URL for remote data. */\n  dataSource: any[] | string;\n  /** Whether sorting is enabled globally. */\n  sortable?: boolean;\n  /** Whether filtering is enabled globally. */\n  filterable?: boolean;\n  /** Whether editing is enabled globally. */\n  editable?: boolean;\n  /** Whether row selection is enabled. */\n  selectable?: boolean;\n  /** Whether grouping is enabled. */\n  groupable?: boolean;\n  /** Whether pagination is enabled. */\n  pageable?: boolean;\n  /** Default page size. */\n  pageSize?: number;\n  /** Available page size options. */\n  pageSizeOptions?: number[];\n  /** Whether virtual scrolling is enabled. */\n  virtualScroll?: boolean;\n  /** Whether data export is enabled. */\n  exportable?: boolean;\n  /** Whether to show borders around the grid. */\n  showBorders?: boolean;\n  /** Whether to show vertical lines between columns. */\n  showColumnLines?: boolean;\n  /** Whether to show horizontal lines between rows. */\n  showRowLines?: boolean;\n  /** Whether to show column headers. */\n  showColumnHeaders?: boolean;\n  /** Whether column reordering is allowed. */\n  allowColumnReordering?: boolean;\n  /** Whether column resizing is allowed. */\n  allowColumnResizing?: boolean;\n  /** Whether grouping is allowed. */\n  allowGrouping?: boolean;\n  /** Whether sorting is allowed. */\n  allowSorting?: boolean;\n  /** Whether filtering is allowed. */\n  allowFiltering?: boolean;\n  /** Whether selection is allowed. */\n  allowSelection?: boolean;\n  /** Whether operations should be performed remotely. */\n  remoteOperations?: boolean;\n  /** The theme of the data grid. */\n  theme?: 'light' | 'dark' | 'bootstrap' | 'material';\n}\n\n/**\n * Event object emitted by the data grid for various operations.\n */\nexport interface DataGridEvent {\n  /** The type of event. */\n  type: 'sort' | 'filter' | 'select' | 'edit' | 'group' | 'page' | 'export';\n  /** Additional data associated with the event. */\n  data?: any;\n  /** The column related to the event. */\n  column?: DataGridColumn;\n  /** The row related to the event. */\n  row?: any;\n  /** Multiple rows related to the event. */\n  rows?: any[];\n  /** The field related to the event. */\n  field?: string;\n  /** The new value for edit events. */\n  value?: any;\n  /** The old value for edit events. */\n  oldValue?: any;\n}\n\n/**\n * Represents the complete state of the data grid.\n */\nexport interface DataGridState {\n  /** Current sorting state. */\n  sort: DataGridSortState[];\n  /** Current filtering state. */\n  filter: DataGridFilterState[];\n  /** Current grouping state. */\n  group: DataGridGroupState[];\n  /** Current selection state. */\n  selection: DataGridSelectionState;\n  /** Current pagination state. */\n  pagination: {\n    pageIndex: number;\n    pageSize: number;\n  };\n  /** Current column configurations. */\n  columns: DataGridColumn[];\n}\n\n/**\n * Represents a row in the data grid.\n */\nexport interface DataGridRow {\n  /** The original data object for this row. */\n  data: any;\n  /** The index of this row in the data source. */\n  index: number;\n  /** The unique key for this row. */\n  key: any;\n  /** Whether this row is selected. */\n  selected?: boolean;\n  /** Whether this row is expanded (for grouped rows). */\n  expanded?: boolean;\n  /** The nesting level of this row. */\n  level?: number;\n  /** The parent row for nested rows. */\n  parent?: any;\n}\n\n/**\n * Represents a group row in the data grid.\n */\nexport interface DataGridGroupRow extends DataGridRow {\n  /** The group key. */\n  key: any;\n  /** The child rows in this group. */\n  items: DataGridRow[];\n  /** Summary data for the group. */\n  summary?: any;\n  /** Whether the group is expanded. */\n  expanded: boolean;\n  /** The nesting level of the group. */\n  level: number;\n}\n\n/**\n * Configuration for summary calculations in the data grid.\n */\nexport interface DataGridSummary {\n  /** The field to calculate summary for. */\n  field: string;\n  /** The type of aggregation to perform. */\n  aggregate: 'sum' | 'avg' | 'min' | 'max' | 'count';\n  /** Format string for the summary value. */\n  format?: string;\n  /** Display format for the summary label. */\n  displayFormat?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/stories/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                ButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./header.css\n            \n\n\n            \n                template\n                  \n    \n      \n        \n          \n          \n          \n        \n      \n      Acme\n    \n    \n      \n        \n          Welcome, {{ user.name }}!\n        \n        \n      \n      \n        \n        \n      \n    \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCreateAccount\n                            \n                            \n                                onLogin\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/header.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCreateAccount\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/header.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLogin\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/header.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLogout\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/stories/header.component.ts:72\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `\n  \n    \n      \n        \n          \n          \n          \n        \n      \n      Acme\n    \n    \n      \n        \n          Welcome, {{ user.name }}!\n        \n        \n      \n      \n        \n        \n      \n    \n  \n`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter();\n\n  @Output()\n  onLogout = new EventEmitter();\n\n  @Output()\n  onCreateAccount = new EventEmitter();\n}\n\n    \n\n\n    \n                \n                    ./header.css\n                \n                .storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Acme                                Welcome, {{ user.name }}!                                                        '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/lib/zt-input/input.component.ts\n\n\n\n    \n        Description\n    \n    \n        A customizable input component that supports various input types, styles, and themes.\nIt provides features like character length validation and different visual appearances.\nExample :\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                zt-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                textInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onKeydown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputStyle\n                            \n                            \n                                inputType\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                            \n                                textlength\n                            \n                            \n                                theme\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    inputClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n                \n                    \n                        Type :     \"zt\" | \"material\" | \"bs\"\n\n                    \n                \n                \n                    \n                        Default value : 'zt'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:62\n                            \n                        \n                \n                    \n                        The visual style of the input (zt, material, bs for Bootstrap).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :     \"text\" | \"number\" | \"email\" | \"password\"\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:56\n                            \n                        \n                \n                    \n                        The type of input element (text, number, email, password).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'label'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:44\n                            \n                        \n                \n                    \n                        Placeholder text displayed when the input is empty.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"zt-md\" | \"zt-sm\" | \"zt-lg\"\n\n                    \n                \n                \n                    \n                        Default value : 'zt-md'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:74\n                            \n                        \n                \n                    \n                        The size of the input component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        textlength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 255\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:50\n                            \n                        \n                \n                    \n                        Maximum allowed character length for the input.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:68\n                            \n                        \n                \n                    \n                        The theme of the input component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:38\n                            \n                        \n                \n                    \n                        The current value of the input field.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:80\n                        \n                    \n\n            \n                \n                    Dynamically applies CSS classes to the input element based on size and theme.\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \nkeydown()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Handles keydown events to enforce character length limits.\nUpdates the value if within the allowed length.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onKeydown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onKeydown()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keydown')\n                \n            \n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Handles keydown events to enforce character length limits.\nUpdates the value if within the allowed length.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        textInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('textInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:32\n                        \n                    \n\n            \n                \n                    Reference to the input element for direct DOM manipulation.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        inputClass\n                    \n                \n\n                \n                    \n                        getinputClass()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-input/input.component.ts:80\n                                \n                            \n                    \n                        \n                                Dynamically applies CSS classes to the input element based on size and theme.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * A customizable input component that supports various input types, styles, and themes.\n * It provides features like character length validation and different visual appearances.\n *\n * @example\n * \n * \n */\n@Component({\n  selector: 'zt-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class InputComponent {\n  /**\n   * Reference to the input element for direct DOM manipulation.\n   */\n  @ViewChild('textInput') textInput?: ElementRef;\n\n  /**\n   * The current value of the input field.\n   * @default ''\n   */\n  @Input() value? = '';\n\n  /**\n   * Placeholder text displayed when the input is empty.\n   * @default 'label'\n   */\n  @Input() placeholder? = 'label';\n\n  /**\n   * Maximum allowed character length for the input.\n   * @default 255\n   */\n  @Input() textlength? = 255;\n\n  /**\n   * The type of input element (text, number, email, password).\n   * @default 'text'\n   */\n  @Input() inputType?: 'text' | 'number' | 'email' | 'password' = 'text';\n\n  /**\n   * The visual style of the input (zt, material, bs for Bootstrap).\n   * @default 'zt'\n   */\n  @Input() inputStyle: 'zt' | 'material' | 'bs' = 'zt';\n\n  /**\n   * The theme of the input component.\n   * @default 'light'\n   */\n  @Input() theme: 'light' | 'dark' | 'bootstrap' | 'material' = 'light';\n\n  /**\n   * The size of the input component.\n   * @default 'zt-md'\n   */\n  @Input() size: 'zt-md' | 'zt-sm' | 'zt-lg' = 'zt-md';\n\n  /**\n   * Dynamically applies CSS classes to the input element based on size and theme.\n   * @returns A string of CSS classes.\n   */\n  @HostBinding('class') get inputClass(): string {\n    return `${this.size} theme-${this.theme}`;\n  }\n\n  /**\n   * Handles keydown events to enforce character length limits.\n   * Updates the value if within the allowed length.\n   */\n  @HostListener('keydown') onKeydown() {\n    if (Number(this.textlength) > this.textInput?.nativeElement.value.length)\n      this.value = this.textInput?.nativeElement.value;\n  }\n}\n\n    \n\n    \n        @if (inputStyle === 'zt') {\n  \n    \n      \n        \n        \n          {{ placeholder }}\n        \n      \n    \n  \n}\n\n@if (inputStyle === 'material') {\n  \n    \n      \n        \n        {{ placeholder }}\n      \n    \n  \n}\n\n@if (inputStyle === 'bs') {\n  \n    \n      \n    \n  \n}\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                @import \"../../assets/variables\";\n\n// Light theme (default)\n:host(.theme-light) {\n  --zt-border-color: #d2d2d2;\n  --zt-border-focus: #0275d8;\n  --zt-border-focus-out: #f30e0e;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #9b9b9b;\n}\n\n// Dark theme\n:host(.theme-dark) {\n  --zt-border-color: #4a5568;\n  --zt-border-focus: #4dabf7;\n  --zt-border-focus-out: #f56565;\n  --zt-bg-white: #2d3748;\n  --zt-text-black: #ffffff;\n  --zt-text-gray: #718096;\n\n  .label .text {\n    color: var(--zt-text-white);\n  }\n\n  input::placeholder {\n    color: var(--zt-text-white);\n  }\n}\n\n// Bootstrap theme\n:host(.theme-bootstrap) {\n  --zt-border-color: #d2d2d2;\n  --zt-border-focus: #007bff;\n  --zt-border-focus-out: #dc3545;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #6c757d;\n}\n\n// Material theme\n:host(.theme-material) {\n  --zt-border-color: #e0e0e0;\n  --zt-border-focus: #6200ee;\n  --zt-border-focus-out: #f44336;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #9e9e9e;\n}\n\n:host {\n  font-family: inherit;\n\n  .box_input {\n    .outline {\n      border: 0;\n    }\n\n    .no-outline {\n      bottom: 0;\n      border-bottom: 1px solid var(--zt-border-color);\n      outline: 0;\n    }\n\n    .form__group {\n      position: relative;\n    }\n\n    input {\n      height: 48px;\n      width: 100%;\n      border: 1px solid var(--zt-border-color);\n      border-radius: 4px;\n      box-sizing: border-box;\n      padding: 16px;\n      background-color: var(--zt-bg-white);\n      color: var(--zt-text-black);\n\n      &::placeholder {\n        color: var(--zt-text-gray);\n        background-color: transparent;\n      }\n    }\n\n    .label {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 16px;\n      display: flex;\n      align-items: center;\n    }\n\n    input,\n    .label .text {\n      font-family: \"Segoe UI\";\n      font-size: $font-size-input;\n    }\n\n    input:focus {\n      outline: none;\n      border: 2px solid var(--zt-border-focus);\n    }\n\n    input:focus + .label .text,\n    :not(input[value=\"\"]) + .label .text {\n      font-size: $font-size-input-label-sm;\n      transform: translate(0, -150%);\n      background-color: var(--zt-bg-white);\n      padding-left: 4px;\n      padding-right: 4px;\n    }\n\n    .label .text {\n      transition: all 0.15s ease-out;\n      color: var(--zt-text-black);\n    }\n  }\n\n  .material_input {\n    .form__group {\n      position: relative;\n      padding: 15px 0 0;\n      margin-top: 10px;\n    }\n\n    .form__field {\n      font-family: inherit;\n      width: 100%;\n      border: 0;\n      border-bottom: 1px solid var(--zt-border-color);\n      outline: 0;\n      font-size: 16px;\n      color: var(--zt-text-black);\n      padding: 7px 0;\n      background: transparent;\n      transition: border-color 0.2s;\n    }\n\n    .form__field::placeholder {\n      color: transparent;\n    }\n\n    .form__field:placeholder-shown ~ .form__label {\n      font-size: 16px;\n      cursor: text;\n      top: 20px;\n    }\n\n    label,\n    .form__field:focus ~ .form__label {\n      position: absolute;\n      top: 0;\n      display: block;\n      transition: 0.2s;\n      font-size: 12px;\n      color: var(--zt-text-gray);\n    }\n\n    .form__field:focus ~ .form__label {\n      color: var(--zt-border-focus);\n    }\n\n    .form__field:focus {\n      padding-bottom: 6px;\n      border-bottom: 2px solid var(--zt-border-focus);\n    }\n  }\n\n  .input_bs {\n    .form__field {\n      width: 100%;\n      border: 2px solid var(--zt-text-gray);\n      border-radius: 4px;\n      margin: 8px 0;\n      outline: none;\n      padding: 8px;\n      box-sizing: border-box;\n      transition: 0.3s;\n    }\n\n    .form__field:focus {\n      border-color: var(--zt-border-focus);\n      box-shadow: 0 0 8px 0 var(--zt-border-focus);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (inputStyle === \\'zt\\') {                                      {{ placeholder }}                    }@if (inputStyle === \\'material\\') {                            {{ placeholder }}            }@if (inputStyle === \\'bs\\') {                  }'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageComponent.html":{"url":"components/PageComponent.html","title":"component - PageComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/stories/page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                HeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./page.css\n            \n\n\n            \n                template\n                  \n  \n    Pages in Storybook\n    \n      We recommend building UIs with a\n      \n        component-driven\n      \n      process starting with atomic components and ending with pages.\n    \n    \n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    \n    \n      \n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      \n      \n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      \n    \n    \n      Get a guided tutorial on component-driven development at\n      \n        Storybook tutorials\n      \n      . Read more in the\n       docs \n      .\n    \n    \n      Tip Adjust the width of the canvas with the\n      \n        \n          \n        \n      \n      Viewports addon in the toolbar\n    \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doCreateAccount\n                            \n                            \n                                doLogin\n                            \n                            \n                                doLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doCreateAccount\n                        \n                    \n                \n            \n            \n                \ndoCreateAccount()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/stories/page.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogin\n                        \n                    \n                \n            \n            \n                \ndoLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/stories/page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogout\n                        \n                    \n                \n            \n            \n                \ndoLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/stories/page.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/stories/page.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `\n  \n  \n    Pages in Storybook\n    \n      We recommend building UIs with a\n      \n        component-driven\n      \n      process starting with atomic components and ending with pages.\n    \n    \n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    \n    \n      \n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      \n      \n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      \n    \n    \n      Get a guided tutorial on component-driven development at\n      \n        Storybook tutorials\n      \n      . Read more in the\n       docs \n      .\n    \n    \n      Tip Adjust the width of the canvas with the\n      \n        \n          \n        \n      \n      Viewports addon in the toolbar\n    \n  \n`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n\n    \n\n\n    \n                \n                    ./page.css\n                \n                .storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Pages in Storybook          We recommend building UIs with a              component-driven            process starting with atomic components and ending with pages.              Render pages with mock data. This makes it easy to build and review page states without      needing to navigate to them in your app. Here are some handy patterns for managing page data      in Storybook:                      Use a higher-level connected component. Storybook helps you compose such data from the        \"args\" of child component stories                    Assemble data in the page component from your services. You can mock these services out        using Storybook.                    Get a guided tutorial on component-driven development at              Storybook tutorials            . Read more in the       docs       .              Tip Adjust the width of the canvas with the                                            Viewports addon in the toolbar      '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/lib/zt-select/select.component.ts\n\n\n\n    \n        Description\n    \n    \n        A customizable select dropdown component that supports various styles, themes, and data binding.\nIt allows users to select from a list of options with configurable display and value properties.\nExample :\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                zt-select\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onChange\n                            \n                            \n                                onClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayValue\n                            \n                            \n                                inputStyle\n                            \n                            \n                                key\n                            \n                            \n                                placeholder\n                            \n                            \n                                showClearButton\n                            \n                            \n                                size\n                            \n                            \n                                theme\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:68\n                            \n                        \n                \n                    \n                        Array of data objects to populate the select options.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        displayValue\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:80\n                            \n                        \n                \n                    \n                        The property name in the data objects to display as the option text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n                \n                    \n                        Type :     \"zt\" | \"material\" | \"bs\"\n\n                    \n                \n                \n                    \n                        Default value : 'zt'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:50\n                            \n                        \n                \n                    \n                        The visual style of the select component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:74\n                            \n                        \n                \n                    \n                        The property name in the data objects to use as the unique key/identifier.\nUsed for binding the selected value.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'label'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:44\n                            \n                        \n                \n                    \n                        Placeholder text displayed when no option is selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showClearButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:91\n                            \n                        \n                \n                    \n                        Whether to show a clear button to reset the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"zt-md\" | \"zt-sm\" | \"zt-lg\"\n\n                    \n                \n                \n                    \n                        Default value : 'zt-md'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:62\n                            \n                        \n                \n                    \n                        The size of the select component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:56\n                            \n                        \n                \n                    \n                        The theme of the select component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:85\n                            \n                        \n                \n                    \n                        The currently selected value. Should match the key property of the selected item.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:97\n                        \n                    \n\n            \n                \n                    Dynamically applies CSS classes to the select element based on size and theme.\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        change\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nchange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Handles the change event when a user selects an option.\nUpdates the value property with the selected option's value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The change event from the select element.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChange(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('change', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Handles the change event when a user selects an option.\nUpdates the value property with the selected option's value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The change event from the select element.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClear\n                        \n                    \n                \n            \n            \n                \nonClear()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Clears the current selection by setting the value to -1.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Choose an option'\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:38\n                        \n                    \n\n            \n                \n                    Default message displayed in the component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectClass\n                    \n                \n\n                \n                    \n                        getselectClass()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-select/select.component.ts:97\n                                \n                            \n                    \n                        \n                                Dynamically applies CSS classes to the select element based on size and theme.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  HostListener,\n  Input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * A customizable select dropdown component that supports various styles, themes, and data binding.\n * It allows users to select from a list of options with configurable display and value properties.\n *\n * @example\n * \n * \n */\n@Component({\n  selector: 'zt-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n})\nexport class SelectComponent {\n  /**\n   * Default message displayed in the component.\n   */\n  message = 'Choose an option';\n\n  /**\n   * Placeholder text displayed when no option is selected.\n   * @default 'label'\n   */\n  @Input() placeholder? = 'label';\n\n  /**\n   * The visual style of the select component.\n   * @default 'zt'\n   */\n  @Input() inputStyle?: 'zt' | 'material' | 'bs' = 'zt';\n\n  /**\n   * The theme of the select component.\n   * @default 'light'\n   */\n  @Input() theme: 'light' | 'dark' | 'bootstrap' | 'material' = 'light';\n\n  /**\n   * The size of the select component.\n   * @default 'zt-md'\n   */\n  @Input() size: 'zt-md' | 'zt-sm' | 'zt-lg' = 'zt-md';\n\n  /**\n   * Array of data objects to populate the select options.\n   * @default []\n   */\n  @Input() dataSource: any[] = [];\n\n  /**\n   * The property name in the data objects to use as the unique key/identifier.\n   * Used for binding the selected value.\n   */\n  @Input() key?: any;\n\n  /**\n   * The property name in the data objects to display as the option text.\n   * @default ''\n   */\n  @Input() displayValue: any = '';\n\n  /**\n   * The currently selected value. Should match the key property of the selected item.\n   */\n  @Input() value: any;\n\n  /**\n   * Whether to show a clear button to reset the selection.\n   * @default true\n   */\n  @Input() showClearButton = true;\n\n  /**\n   * Dynamically applies CSS classes to the select element based on size and theme.\n   * @returns A string of CSS classes.\n   */\n  @HostBinding('class') get selectClass(): string {\n    return `${this.size} theme-${this.theme}`;\n  }\n\n  /**\n   * Handles the change event when a user selects an option.\n   * Updates the value property with the selected option's value.\n   * @param event The change event from the select element.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: any) {\n    this.value = event.target.value;\n    console.log(this.key, this.value);\n  }\n\n  /**\n   * Clears the current selection by setting the value to -1.\n   */\n  onClear() {\n    console.log(this.value);\n    this.value = -1;\n  }\n}\n\n    \n\n    \n        @if (inputStyle === 'zt') {\n  \n    \n      \n        \n          \n            {{ message }}\n          \n          @for (obj of dataSource; track obj; let i = $index) {\n            \n              {{ displayValue ? obj[displayValue] : obj }}\n            \n          }\n        \n        @if (showClearButton) {\n          \n        }\n        \n          {{ placeholder }}\n        \n      \n    \n  \n}\n\n@if (inputStyle === 'material') {\n  \n    \n      \n        \n          \n          @for (obj of dataSource; track obj; let i = $index) {\n            \n              {{ displayValue ? obj[displayValue] : obj }}\n            \n          }\n        \n        @if (showClearButton) {\n          \n        }\n        \n        \n        {{ placeholder }}\n      \n    \n  \n}\n@if (inputStyle === 'bs') {\n  \n    \n      \n        \n          {{ placeholder }}\n        \n        @for (obj of dataSource; track obj; let i = $index) {\n          \n            {{ displayValue ? obj[displayValue] : obj }}\n          \n        }\n      \n      @if (showClearButton) {\n        \n      }\n    \n  \n}\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                @import \"../../assets/variables\";\n\n// Light theme (default)\n:host(.theme-light) {\n  --zt-border-color: #d2d2d2;\n  --zt-border-focus: #0275d8;\n  --zt-border-focus-out: #f30e0e;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #9b9b9b;\n  --zt-text-select: #565151;\n}\n\n// Dark theme\n:host(.theme-dark) {\n  --zt-border-color: #4a5568;\n  --zt-border-focus: #4dabf7;\n  --zt-border-focus-out: #f56565;\n  --zt-bg-white: #2d3748;\n  --zt-text-black: #ffffff;\n  --zt-text-gray: #718096;\n  --zt-text-select: #a0aec0;\n}\n\n// Bootstrap theme\n:host(.theme-bootstrap) {\n  --zt-border-color: #d2d2d2;\n  --zt-border-focus: #007bff;\n  --zt-border-focus-out: #dc3545;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #6c757d;\n  --zt-text-select: #495057;\n}\n\n// Material theme\n:host(.theme-material) {\n  --zt-border-color: #e0e0e0;\n  --zt-border-focus: #6200ee;\n  --zt-border-focus-out: #f44336;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #9e9e9e;\n  --zt-text-select: #616161;\n}\n\n:host {\n  font-family: inherit;\n  padding: 0;\n  margin: 0;\n\n  // zt select\n  .box_select {\n    .outline {\n      border: 0;\n    }\n\n    .no-outline {\n      bottom: 0;\n      border-bottom: 1px solid var(--zt-border-color);\n      outline: 0;\n    }\n\n    .form__group {\n      position: relative;\n    }\n\n    select {\n      width: 100%;\n      border: 1px solid var(--zt-border-color);\n      border-radius: 4px;\n      box-sizing: border-box;\n      padding: 10px;\n    }\n\n    .label {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 16px;\n      display: flex;\n      align-items: center;\n    }\n\n    select,\n    .label .text {\n      font-family: \"Segoe UI\";\n      font-size: $font-size-input;\n    }\n\n    select:focus {\n      outline: none;\n      border: 2px solid var(--zt-border-focus);\n    }\n\n    select:focus + .label .text,\n    :not(select[value=\"\"]) + .label .text {\n      font-size: $font-size-input-label-sm;\n      transform: translate(0, -150%);\n      background-color: var(--zt-bg-white);\n      padding-left: 4px;\n      padding-right: 4px;\n    }\n\n    .label .text {\n      transition: all 0.15s ease-out;\n    }\n\n    .select-message {\n      color: $text-gray;\n    }\n\n    .close-icon {\n      position: absolute;\n      top: 12px;\n      right: 15px;\n      border: 1px solid transparent;\n      background-color: transparent;\n      display: inline-block;\n      vertical-align: middle;\n      outline: 0;\n      cursor: pointer;\n    }\n\n    .close-icon:after {\n      content: \"X\";\n      display: block;\n      width: 15px;\n      height: 15px;\n      background-color: transparent;\n      z-index: 1;\n      right: 35px;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n      padding: 2px;\n      border-radius: 50%;\n      text-align: center;\n      color: var(--zt-text-black);\n      font-weight: normal;\n      font-size: $font-size-input-label-sm;\n      cursor: pointer;\n    }\n  }\n\n  // material select\n  .material_select {\n    /* select starting stylings ------------------------------*/\n    .select {\n      position: relative;\n      width: 100%;\n    }\n\n    .select-text {\n      position: relative;\n      font-family: inherit;\n      background-color: transparent;\n      width: 100%;\n      padding: 10px 10px 10px 0;\n      font-size: $font-size-input;\n      border-radius: 0;\n      border: none;\n      border-bottom: 1px solid $border-color;\n    }\n\n    .select-message {\n      color: var(--zt-text-gray);\n    }\n\n    .select-text option {\n      color: var(--zt-text-select);\n      background-color: var(--zt-bg-white);\n    }\n\n    /* Remove focus */\n    .select-text:focus {\n      outline: none;\n      border-bottom: 1px solid #00000000;\n    }\n\n    /* Use custom arrow */\n    .select .select-text {\n      appearance: none;\n      -webkit-appearance: none;\n    }\n\n    .select:after {\n      position: absolute;\n      top: 18px;\n      right: 10px;\n      /* Styling the down arrow */\n      width: 0;\n      height: 0;\n      padding: 0;\n      content: \"\";\n      border-left: 6px solid transparent;\n      border-right: 6px solid transparent;\n      border-top: 6px solid var(--zt-border-color);\n      pointer-events: none;\n    }\n\n    /* LABEL ======================================= */\n    .select-label {\n      color: var(--zt-text-gray);\n      font-size: $font-size-input;\n      font-weight: normal;\n      position: absolute;\n      pointer-events: none;\n      left: 0;\n      top: 10px;\n      transition: 0.2s ease all;\n    }\n\n    /* active state */\n    .select-text:focus ~ .select-label,\n    .select-text:valid ~ .select-label {\n      color: var(--zt-border-focus);\n      top: -10px;\n      transition: 0.2s ease all;\n      font-size: $font-size-input-label-sm;\n    }\n\n    /* BOTTOM BARS ================================= */\n    .select-bar {\n      position: relative;\n      display: block;\n      width: 100%;\n    }\n\n    .select-bar:before,\n    .select-bar:after {\n      content: \"\";\n      height: 2px;\n      width: 0;\n      bottom: 1px;\n      position: absolute;\n      background: var(--zt-border-focus);\n      transition: 0.2s ease all;\n    }\n\n    .select-bar:before {\n      left: 50%;\n    }\n\n    .select-bar:after {\n      right: 50%;\n    }\n\n    /* active state */\n    .select-text:focus ~ .select-bar:before,\n    .select-text:focus ~ .select-bar:after {\n      width: 50%;\n    }\n\n    /* HIGHLIGHTER ================================== */\n    .select-highlight {\n      position: absolute;\n      height: 60%;\n      width: 100px;\n      top: 25%;\n      left: 0;\n      pointer-events: none;\n      opacity: 0.5;\n    }\n\n    .close-icon {\n      position: absolute;\n      top: 10px;\n      right: 20px;\n      border: 1px solid transparent;\n      background-color: transparent;\n      display: inline-block;\n      vertical-align: middle;\n      outline: 0;\n      cursor: pointer;\n    }\n\n    .close-icon:after {\n      content: \"X\";\n      display: block;\n      width: 15px;\n      height: 15px;\n      background-color: transparent;\n      z-index: 1;\n      right: 35px;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n      padding: 2px;\n      border-radius: 50%;\n      text-align: center;\n      color: var(--zt-text-black);\n      font-weight: normal;\n      font-size: $font-size-input-label-sm;\n      cursor: pointer;\n    }\n  }\n\n  // bootstrap select\n  .bs_select {\n    position: relative;\n\n    .form__field {\n      width: 100%;\n      border: 2px solid var(--zt-text-gray);\n      border-radius: 4px;\n      margin: 8px 0;\n      outline: none;\n      padding: 8px;\n      box-sizing: border-box;\n      transition: 0.3s;\n      color: var(--zt-text-select);\n      font-size: $font-size-input;\n    }\n\n    .form__field:focus {\n      border-color: var(--zt-border-focus);\n      box-shadow: 0 0 8px 0 var(--zt-border-focus);\n    }\n\n    option {\n      min-height: 50px !important;\n    }\n\n    .close-icon {\n      position: absolute;\n      top: 15px;\n      right: 15px;\n      border: 1px solid transparent;\n      background-color: transparent;\n      display: inline-block;\n      vertical-align: middle;\n      outline: 0;\n      cursor: pointer;\n    }\n\n    .close-icon:after {\n      content: \"X\";\n      display: block;\n      width: 15px;\n      height: 15px;\n      background-color: transparent;\n      z-index: 1;\n      right: 35px;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n      padding: 2px;\n      border-radius: 50%;\n      text-align: center;\n      color: var(--zt-text-black);\n      font-weight: normal;\n      font-size: $font-size-input-label-sm;\n      cursor: pointer;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (inputStyle === \\'zt\\') {                                          {{ message }}                    @for (obj of dataSource; track obj; let i = $index) {                          {{ displayValue ? obj[displayValue] : obj }}                      }                @if (showClearButton) {                  }                  {{ placeholder }}                    }@if (inputStyle === \\'material\\') {                                        @for (obj of dataSource; track obj; let i = $index) {                          {{ displayValue ? obj[displayValue] : obj }}                      }                @if (showClearButton) {                  }                        {{ placeholder }}            }@if (inputStyle === \\'bs\\') {                              {{ placeholder }}                @for (obj of dataSource; track obj; let i = $index) {                      {{ displayValue ? obj[displayValue] : obj }}                  }            @if (showClearButton) {              }      }'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts\n\n\n\n    \n        Description\n    \n    \n        A customizable textarea component with character counting, length validation, and various styling options.\nSupports different themes, sizes, and input styles with optional character count display.\nExample :\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                zt-textarea\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./textarea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTextLength\n                            \n                            \n                                    \n                                    Optional\n                                textareaInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                keyEvent\n                            \n                            \n                                    \n                                onKeydown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                inputStyle\n                            \n                            \n                                placeholder\n                            \n                            \n                                rows\n                            \n                            \n                                showCharCount\n                            \n                            \n                                size\n                            \n                            \n                                textlength\n                            \n                            \n                                theme\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keydown\n                            \n                            \n                                window:keyup\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    textareaClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:75\n                            \n                        \n                \n                    \n                        The visible width of the textarea in average character widths.\nMust be a positive integer.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n                \n                    \n                        Type :     \"zt\" | \"material\" | \"bs\"\n\n                    \n                \n                \n                    \n                        Default value : 'zt'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:88\n                            \n                        \n                \n                    \n                        The visual style of the textarea.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'label'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:51\n                            \n                        \n                \n                    \n                        Placeholder text displayed when the textarea is empty.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:82\n                            \n                        \n                \n                    \n                        The number of visible text lines for the textarea.\nMust be a positive integer.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showCharCount\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:106\n                            \n                        \n                \n                    \n                        Whether to show the character count below the textarea.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"zt-md\" | \"zt-sm\" | \"zt-lg\"\n\n                    \n                \n                \n                    \n                        Default value : 'zt-md'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:100\n                            \n                        \n                \n                    \n                        The size of the textarea component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        textlength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 255\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:57\n                            \n                        \n                \n                    \n                        Maximum allowed character length for the textarea.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:94\n                            \n                        \n                \n                    \n                        The theme of the textarea component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:63\n                            \n                        \n                \n                    \n                        The type attribute for the textarea (typically 'text').\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:45\n                            \n                        \n                \n                    \n                        The current value of the textarea.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:112\n                        \n                    \n\n            \n                \n                    Dynamically applies CSS classes to the textarea element based on size and theme.\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \nkeydown()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Handles keydown events to enforce character length limits and update current text length.\nUpdates the value if within the allowed length.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:keyup\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keyup(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Listens to global keyup events to update the current text length, particularly for delete operations.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        keyEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    keyEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:keyup', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Listens to global keyup events to update the current text length, particularly for delete operations.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onKeydown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onKeydown()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keydown')\n                \n            \n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Handles keydown events to enforce character length limits and update current text length.\nUpdates the value if within the allowed length.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTextLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:68\n                        \n                    \n\n            \n                \n                    Current length of the text in the textarea.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        textareaInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('textareaInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:39\n                        \n                    \n\n            \n                \n                    Reference to the textarea element for direct DOM manipulation.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        textareaClass\n                    \n                \n\n                \n                    \n                        gettextareaClass()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts:112\n                                \n                            \n                    \n                        \n                                Dynamically applies CSS classes to the textarea element based on size and theme.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * A customizable textarea component with character counting, length validation, and various styling options.\n * Supports different themes, sizes, and input styles with optional character count display.\n *\n * @example\n * \n * \n */\n@Component({\n  selector: 'zt-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class TextareaComponent {\n  /**\n   * Reference to the textarea element for direct DOM manipulation.\n   */\n  @ViewChild('textareaInput') textareaInput?: ElementRef;\n\n  /**\n   * The current value of the textarea.\n   * @default ''\n   */\n  @Input() value? = '';\n\n  /**\n   * Placeholder text displayed when the textarea is empty.\n   * @default 'label'\n   */\n  @Input() placeholder? = 'label';\n\n  /**\n   * Maximum allowed character length for the textarea.\n   * @default 255\n   */\n  @Input() textlength = 255;\n\n  /**\n   * The type attribute for the textarea (typically 'text').\n   * @default 'text'\n   */\n  @Input() type? = 'text';\n\n  /**\n   * Current length of the text in the textarea.\n   */\n  currentTextLength = 0;\n\n  /**\n   * The visible width of the textarea in average character widths.\n   * Must be a positive integer.\n   * @default 20\n   */\n  @Input() cols? = 20;\n\n  /**\n   * The number of visible text lines for the textarea.\n   * Must be a positive integer.\n   * @default 2\n   */\n  @Input() rows? = 2;\n\n  /**\n   * The visual style of the textarea.\n   * @default 'zt'\n   */\n  @Input() inputStyle: 'zt' | 'material' | 'bs' = 'zt';\n\n  /**\n   * The theme of the textarea component.\n   * @default 'light'\n   */\n  @Input() theme: 'light' | 'dark' | 'bootstrap' | 'material' = 'light';\n\n  /**\n   * The size of the textarea component.\n   * @default 'zt-md'\n   */\n  @Input() size: 'zt-md' | 'zt-sm' | 'zt-lg' = 'zt-md';\n\n  /**\n   * Whether to show the character count below the textarea.\n   * @default true\n   */\n  @Input() showCharCount? = true;\n\n  /**\n   * Dynamically applies CSS classes to the textarea element based on size and theme.\n   * @returns A string of CSS classes.\n   */\n  @HostBinding('class') get textareaClass(): string {\n    return `${this.size} theme-${this.theme}`;\n  }\n\n  /**\n   * Handles keydown events to enforce character length limits and update current text length.\n   * Updates the value if within the allowed length.\n   */\n  @HostListener('keydown') onKeydown() {\n    if (\n      Number(this.textlength) > this.textareaInput?.nativeElement.value.length\n    )\n      this.value = this.textareaInput?.nativeElement.value;\n    this.currentTextLength = this.textareaInput?.nativeElement.value.length;\n  }\n\n  /**\n   * Listens to global keyup events to update the current text length, particularly for delete operations.\n   * @param event The keyboard event.\n   */\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.key === KEY_CODE.DELETE) {\n      this.currentTextLength = this.textareaInput?.nativeElement.value.length;\n    }\n  }\n}\n\n/**\n * Enumeration of key codes used in the textarea component.\n */\nexport enum KEY_CODE {\n  DELETE = 'Delete',\n}\n\n    \n\n    \n        @if (inputStyle === 'zt') {\n  \n    \n      \n        \n        \n          {{ placeholder }} &nbsp;\n        \n        @if (showCharCount) {\n          = textlength ? 'limit-max' : ''\"\n            >{{ currentTextLength }}/{{ textlength }}\n          }\n        \n      \n    \n  }\n\n  @if (inputStyle === 'material') {\n    \n      \n        \n          \n          \n          {{ placeholder }}\n          @if (showCharCount) {\n            = textlength ? 'limit-max' : ''\"\n              >{{ currentTextLength }}/{{ textlength }}\n            }\n          \n        \n      \n    }\n    @if (inputStyle === 'bs') {\n      \n        \n          \n          @if (showCharCount) {\n            = textlength ? 'limit-max' : ''\"\n              >{{ currentTextLength }}/{{ textlength }}\n            }\n          \n        \n      }\n\n    \n\n    \n                \n                    ./textarea.component.scss\n                \n                @import \"../../assets/variables\";\n\n// Light theme (default)\n:host(.theme-light) {\n  --zt-border-color: #d2d2d2;\n  --zt-border-focus: #0275d8;\n  --zt-border-focus-out: #f30e0e;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #9b9b9b;\n  --zt-text-red: #f30e0e;\n}\n\n// Dark theme\n:host(.theme-dark) {\n  --zt-border-color: #4a5568;\n  --zt-border-focus: #4dabf7;\n  --zt-border-focus-out: #f56565;\n  --zt-bg-white: #2d3748;\n  --zt-text-black: #ffffff;\n  --zt-text-gray: #718096;\n  --zt-text-red: #f56565;\n}\n\n// Bootstrap theme\n:host(.theme-bootstrap) {\n  --zt-border-color: #d2d2d2;\n  --zt-border-focus: #007bff;\n  --zt-border-focus-out: #dc3545;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #6c757d;\n  --zt-text-red: #dc3545;\n}\n\n// Material theme\n:host(.theme-material) {\n  --zt-border-color: #e0e0e0;\n  --zt-border-focus: #6200ee;\n  --zt-border-focus-out: #f44336;\n  --zt-bg-white: #ffffff;\n  --zt-text-black: #212121;\n  --zt-text-gray: #9e9e9e;\n  --zt-text-red: #f44336;\n}\n\n:host {\n  // zt textarea\n\n  position: relative;\n  .box_textarea {\n    .outline {\n      border: 0;\n    }\n\n    .no-outline {\n      bottom: 0;\n      border-bottom: 1px solid var(--zt-border-color);\n      outline: 0;\n    }\n\n    .form__group {\n      position: relative;\n    }\n\n    textarea {\n      height: 48px;\n      width: 100%;\n      border: 1px solid var(--zt-border-color);\n      border-radius: 4px;\n      box-sizing: border-box;\n      padding: 16px;\n      overflow: auto;\n      padding: 5px;\n    }\n\n    .label {\n      position: absolute;\n      top: 16px;\n      bottom: 0;\n      left: 16px;\n      display: block;\n      align-items: center;\n    }\n\n    textarea,\n    .label .text {\n      font-family: \"Segoe UI\";\n      font-size: 16px;\n    }\n\n    textarea:focus {\n      outline: none;\n      border: 2px solid var(--zt-border-focus);\n    }\n\n    textarea:focus + .label .text,\n    :not(textarea[value=\"\"]) + .label .text {\n      font-size: 12px;\n      transform: translate(0, -150%);\n      background-color: var(--zt-bg-white);\n      padding-left: 4px;\n      padding-right: 4px;\n    }\n\n    .label .text {\n      transition: all 0.15s ease-out;\n    }\n\n    small {\n      color: var(--zt-text-gray);\n      font-weight: bold;\n      float: right;\n      background-color: transparent;\n    }\n\n    .limit-max {\n      color: var(--zt-text-red);\n    }\n  }\n\n  // material textarea\n  .material_input {\n    .textarea-group {\n      width: 100%;\n      position: relative;\n      padding-top: 50px;\n\n      textarea {\n        border: none;\n        outline: none;\n        resize: none;\n        width: 100%;\n        max-height: 100%;\n        font-size: 16px;\n        font-family: \"Lato\", sans-serif;\n        line-height: 20px;\n        padding: 0 8px;\n        box-sizing: border-box;\n        border-bottom: 1px solid black;\n        transition: border 0.2s ease;\n        will-change: border;\n        background-color: transparent;\n        &.contains-text {\n          ~ label {\n            color: var(--zt-border-focus);\n            top: 8px;\n            font-size: 16px;\n          }\n        }\n\n        &:focus {\n          ~ .bar {\n            transform: scaleX(1);\n          }\n          ~ label {\n            color: var(--zt-text-gray);\n            top: 8px;\n            font-size: 14px;\n          }\n        }\n      }\n      label {\n        position: absolute;\n        font-size: 16px;\n        top: 24px;\n        left: 8px;\n        transition: all 0.2s ease;\n        cursor: text;\n      }\n      .bar {\n        width: 100%;\n        height: 3px;\n        background: var(--zt-border-focus);\n        top: calc(100% - 7px);\n        position: absolute;\n        transform: scaleX(0);\n        transition: transform 0.2s ease;\n      }\n\n      small {\n        float: right;\n        color: var(--zt-text-gray);\n        font-weight: bold;\n      }\n\n      .limit-max {\n        color: var(--zt-text-red);\n      }\n    }\n  }\n\n  // bootstrap textarea\n  .bs_textarea {\n    .form__field {\n      width: 100%;\n      border: 2px solid var(--zt-text-gray);\n      border-radius: 4px;\n      margin: 8px 0;\n      outline: none;\n      padding: 8px;\n      box-sizing: border-box;\n      transition: 0.3s;\n    }\n\n    .form__field:focus {\n      border-color: var(--zt-border-focus);\n      box-shadow: 0 0 8px 0 var(--zt-border-focus);\n    }\n\n    small {\n      float: right;\n      color: var(--zt-text-gray);\n      font-weight: bold;\n    }\n\n    .limit-max {\n      color: var(--zt-text-red);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (inputStyle === \\'zt\\') {                                      {{ placeholder }}                  @if (showCharCount) {          = textlength ? \\'limit-max\\' : \\'\\'\"            >{{ currentTextLength }}/{{ textlength }}          }                    }  @if (inputStyle === \\'material\\') {                                                {{ placeholder }}          @if (showCharCount) {            = textlength ? \\'limit-max\\' : \\'\\'\"              >{{ currentTextLength }}/{{ textlength }}            }                            }    @if (inputStyle === \\'bs\\') {                                  @if (showCharCount) {            = textlength ? \\'limit-max\\' : \\'\\'\"              >{{ currentTextLength }}/{{ textlength }}            }                        }'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/zt-ui-components/src/stories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZtDataGridModule.html":{"url":"modules/ZtDataGridModule.html","title":"module - ZtDataGridModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ZtDataGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZtDataGridModule\n\n\n\ncluster_ZtDataGridModule_exports\n\n\n\ncluster_ZtDataGridModule_declarations\n\n\n\n\nZtDataGridComponent\n\nZtDataGridComponent\n\n\n\nZtDataGridModule\n\nZtDataGridModule\n\nZtDataGridModule -->\n\nZtDataGridComponent->ZtDataGridModule\n\n\n\n\n\nZtDataGridComponent \n\nZtDataGridComponent \n\nZtDataGridComponent  -->\n\nZtDataGridModule->ZtDataGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-data-grid/zt-data-grid.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ZtDataGridComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ZtDataGridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ZtButtonModule } from './../button/zt-button.module';\nimport { ZtDataGridComponent } from './zt-data-grid.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ZtDataGridComponent],\n  imports: [CommonModule, ZtButtonModule],\n  exports: [ZtDataGridComponent],\n})\nexport class ZtDataGridModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZtInputModule.html":{"url":"modules/ZtInputModule.html","title":"module - ZtInputModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ZtInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZtInputModule\n\n\n\ncluster_ZtInputModule_imports\n\n\n\ncluster_ZtInputModule_exports\n\n\n\n\nInputComponent\n\nInputComponent\n\n\n\nZtInputModule\n\nZtInputModule\n\nZtInputModule -->\n\nInputComponent->ZtInputModule\n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nZtInputModule->InputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-input/zt-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            InputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InputComponent } from './input.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, InputComponent],\n  exports: [InputComponent],\n})\nexport class ZtInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZtPaginatorComponent.html":{"url":"components/ZtPaginatorComponent.html","title":"component - ZtPaginatorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ZtPaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts\n\n\n\n    \n        Description\n    \n    \n        A pagination component that displays page numbers and navigation controls.\nSupports themes and emits page change events for integration with data tables or lists.\nExample :\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                zt-paginator\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./zt-paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./zt-paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                pageNumbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageNo\n                            \n                            \n                                goFirst\n                            \n                            \n                                goLast\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pages\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    paginatorClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:68\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:48\n                            \n                        \n                \n                    \n                        Total number of pages to display.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:60\n                            \n                        \n                \n                    \n                        The theme of the paginator component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onPageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:54\n                            \n                        \n                \n                    \n                        Event emitted when the current page changes.\nProvides the new page number.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:66\n                        \n                    \n\n            \n                \n                    Dynamically applies CSS classes to the paginator element based on the theme.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPageNo\n                        \n                    \n                \n            \n            \n                \ngetPageNo(currentPage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Sets the current page and emits the page change event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The page number to navigate to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goFirst\n                        \n                    \n                \n            \n            \n                \ngoFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Navigates to the first page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goLast\n                        \n                    \n                \n            \n            \n                \ngoLast()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Navigates to the last page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Navigates to the next page if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous page if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that updates page numbers when input properties change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:42\n                        \n                    \n\n            \n                \n                    The currently active page number.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:37\n                        \n                    \n\n            \n                \n                    Array of page numbers to display.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        paginatorClass\n                    \n                \n\n                \n                    \n                        getpaginatorClass()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts:66\n                                \n                            \n                    \n                        \n                                Dynamically applies CSS classes to the paginator element based on the theme.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * A pagination component that displays page numbers and navigation controls.\n * Supports themes and emits page change events for integration with data tables or lists.\n *\n * @example\n * \n * \n */\n@Component({\n  selector: 'zt-paginator',\n  templateUrl: './zt-paginator.component.html',\n  styleUrls: ['./zt-paginator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class ZtPaginatorComponent implements OnInit, OnChanges {\n  /**\n   * Array of page numbers to display.\n   */\n  pageNumbers: any;\n\n  /**\n   * The currently active page number.\n   */\n  currentPage: number = 1;\n\n  /**\n   * Total number of pages to display.\n   * @default 1\n   */\n  @Input() pages: number = 1;\n\n  /**\n   * Event emitted when the current page changes.\n   * Provides the new page number.\n   */\n  @Output() onPageChange: EventEmitter = new EventEmitter();\n\n  /**\n   * The theme of the paginator component.\n   * @default 'light'\n   */\n  @Input() theme: 'light' | 'dark' | 'bootstrap' | 'material' = 'light';\n\n  /**\n   * Dynamically applies CSS classes to the paginator element based on the theme.\n   * @returns A string of CSS classes.\n   */\n  @HostBinding('class') get paginatorClass(): string {\n    return `theme-${this.theme}`;\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Lifecycle hook that updates page numbers when input properties change.\n   * @param changes Object containing changed properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.pageNumbers = Array(this.pages)\n      .fill(0)\n      .map((x, i) => i + 1);\n  }\n\n  /**\n   * Sets the current page and emits the page change event.\n   * @param currentPage The page number to navigate to.\n   */\n  getPageNo(currentPage: number) {\n    this.currentPage = currentPage;\n    this.onPageChange.emit(currentPage);\n  }\n\n  /**\n   * Navigates to the first page.\n   */\n  goFirst() {\n    this.currentPage = this.pageNumbers[0];\n    this.onPageChange.emit(this.currentPage);\n  }\n\n  /**\n   * Navigates to the next page if available.\n   */\n  goNext() {\n    if (this.currentPage  1) this.currentPage--;\n    this.onPageChange.emit(this.currentPage);\n  }\n\n  /**\n   * Navigates to the last page.\n   */\n  goLast() {\n    this.currentPage = this.pageNumbers[this.pageNumbers.length - 1];\n    this.onPageChange.emit(this.currentPage);\n  }\n}\n\n    \n\n    \n        \n  &laquo;\n  &lsaquo;\n  @for (p of pageNumbers; track p) {\n    {{ p }}\n    }\n    &rsaquo;\n    &raquo;\n  \n  ... -->\n\n    \n\n    \n                \n                    ./zt-paginator.component.scss\n                \n                // Light theme (default)\n:host(.theme-light) {\n  --zt-paginator-primary: #007bff;\n  --zt-paginator-text: #000000;\n  --zt-paginator-bg-active: #007bff;\n  --zt-paginator-text-active: #ffffff;\n  --zt-paginator-hover: #007bff;\n}\n\n// Dark theme\n:host(.theme-dark) {\n  --zt-paginator-primary: #4dabf7;\n  --zt-paginator-text: #6e6f70;\n  --zt-paginator-bg-active: #4dabf7;\n  --zt-paginator-text-active: #ffffff;\n  --zt-paginator-hover: #63b3f7;\n  --zt-paginator-hover-bg: rgba(77, 171, 247, 0.1);\n}\n\n// Bootstrap theme\n:host(.theme-bootstrap) {\n  --zt-paginator-primary: #007bff;\n  --zt-paginator-text: #000000;\n  --zt-paginator-bg-active: #007bff;\n  --zt-paginator-text-active: #ffffff;\n  --zt-paginator-hover: #007bff;\n}\n\n// Material theme\n:host(.theme-material) {\n  --zt-paginator-primary: #6200ee;\n  --zt-paginator-text: #000000;\n  --zt-paginator-bg-active: #6200ee;\n  --zt-paginator-text-active: #ffffff;\n  --zt-paginator-hover: #6200ee;\n}\n\n:host {\n  user-select: none;\n\n  .pagination {\n    display: inline-block;\n  }\n\n  .pagination a {\n    color: var(--zt-paginator-text);\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n\n    &:hover {\n      color: var(--zt-paginator-hover);\n      background-color: var(--zt-paginator-hover-bg);\n      cursor: pointer;\n    }\n\n    &.active {\n      color: var(--zt-paginator-text-active);\n      background: var(--zt-paginator-bg-active);\n      font-weight: 600;\n      border: 1px solid var(--zt-paginator-primary);\n      border-radius: 5px;\n      padding: 5px 10px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  «  ‹  @for (p of pageNumbers; track p) {    {{ p }}    }    ›    »    ... -->'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ZtPaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZtPaginatorModule.html":{"url":"modules/ZtPaginatorModule.html","title":"module - ZtPaginatorModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ZtPaginatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZtPaginatorModule\n\n\n\ncluster_ZtPaginatorModule_declarations\n\n\n\ncluster_ZtPaginatorModule_exports\n\n\n\n\nZtPaginatorComponent\n\nZtPaginatorComponent\n\n\n\nZtPaginatorModule\n\nZtPaginatorModule\n\nZtPaginatorModule -->\n\nZtPaginatorComponent->ZtPaginatorModule\n\n\n\n\n\nZtPaginatorXComponent\n\nZtPaginatorXComponent\n\nZtPaginatorModule -->\n\nZtPaginatorXComponent->ZtPaginatorModule\n\n\n\n\n\nZtPaginatorComponent \n\nZtPaginatorComponent \n\nZtPaginatorComponent  -->\n\nZtPaginatorModule->ZtPaginatorComponent \n\n\n\n\n\nZtPaginatorXComponent \n\nZtPaginatorXComponent \n\nZtPaginatorXComponent  -->\n\nZtPaginatorModule->ZtPaginatorXComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ZtPaginatorComponent\n                        \n                        \n                            ZtPaginatorXComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ZtPaginatorComponent\n                        \n                        \n                            ZtPaginatorXComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZtPaginatorComponent } from './zt-paginator.component';\nimport { ZtPaginatorXComponent } from './zt-paginator-x/zt-paginator-x.component';\n\n@NgModule({\n  declarations: [ZtPaginatorComponent, ZtPaginatorXComponent],\n  imports: [CommonModule],\n  exports: [ZtPaginatorComponent, ZtPaginatorXComponent],\n})\nexport class ZtPaginatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZtPaginatorXComponent.html":{"url":"components/ZtPaginatorXComponent.html","title":"component - ZtPaginatorXComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ZtPaginatorXComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts\n\n\n\n    \n        Description\n    \n    \n        An advanced pagination component with configurable page limits and styles.\nSupports both page number and arrow navigation styles with theme customization.\nExample :\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                zt-paginator-x\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./zt-paginator-x.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./zt-paginator-x.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                display\n                            \n                            \n                                pageNumbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageNo\n                            \n                            \n                                getPageNumbers\n                            \n                            \n                                goFirst\n                            \n                            \n                                goLast\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pages\n                            \n                            \n                                pagesLimit\n                            \n                            \n                                paginatorStyle\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    paginatorClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:87\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:55\n                            \n                        \n                \n                    \n                        Total number of pages available.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagesLimit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:61\n                            \n                        \n                \n                    \n                        Maximum number of page numbers to display at once.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paginatorStyle\n                    \n                \n                \n                    \n                        Type :     \"page\" | \"arrow\"\n\n                    \n                \n                \n                    \n                        Default value : 'page'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:67\n                            \n                        \n                \n                    \n                        Style of the paginator navigation.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     \"light\" | \"dark\" | \"bootstrap\" | \"material\"\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:73\n                            \n                        \n                \n                    \n                        The theme of the paginator component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onPageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:87\n                            \n                        \n                \n                    \n                        Event emitted when the current page changes.\nProvides the new page number.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:79\n                        \n                    \n\n            \n                \n                    Dynamically applies CSS classes to the paginator element based on the theme.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPageNo\n                        \n                    \n                \n            \n            \n                \ngetPageNo(currentPage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Sets the current page and emits the page change event, then recalculates displayed pages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The page number to navigate to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPageNumbers\n                        \n                    \n                \n            \n            \n                \ngetPageNumbers(start: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Generates the array of page numbers to display based on current page and limit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The starting page number.\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The maximum number of pages to show.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goFirst\n                        \n                    \n                \n            \n            \n                \ngoFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Navigates to the first page if not already there.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goLast\n                        \n                    \n                \n            \n            \n                \ngoLast()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Navigates to the last page if not already there.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Navigates to the next page if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous page if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that recalculates page numbers when input properties change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:44\n                        \n                    \n\n            \n                \n                    The currently active page number.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:49\n                        \n                    \n\n            \n                \n                    Display string for pagination info.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:39\n                        \n                    \n\n            \n                \n                    Array of page numbers currently displayed.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        paginatorClass\n                    \n                \n\n                \n                    \n                        getpaginatorClass()\n                    \n                \n                            \n                                \n                                    Defined in projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts:79\n                                \n                            \n                    \n                        \n                                Dynamically applies CSS classes to the paginator element based on the theme.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * An advanced pagination component with configurable page limits and styles.\n * Supports both page number and arrow navigation styles with theme customization.\n *\n * @example\n * \n * \n */\n@Component({\n  selector: 'zt-paginator-x',\n  templateUrl: './zt-paginator-x.component.html',\n  styleUrls: ['./zt-paginator-x.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class ZtPaginatorXComponent implements OnInit, AfterViewInit {\n  /**\n   * Array of page numbers currently displayed.\n   */\n  pageNumbers: number[] = [];\n\n  /**\n   * The currently active page number.\n   */\n  currentPage: number = 1;\n\n  /**\n   * Display string for pagination info.\n   */\n  display = '';\n\n  /**\n   * Total number of pages available.\n   * @default 1\n   */\n  @Input() pages: number = 1;\n\n  /**\n   * Maximum number of page numbers to display at once.\n   * @default 3\n   */\n  @Input() pagesLimit: number = 3;\n\n  /**\n   * Style of the paginator navigation.\n   * @default 'page'\n   */\n  @Input() paginatorStyle: 'page' | 'arrow' = 'page';\n\n  /**\n   * The theme of the paginator component.\n   * @default 'light'\n   */\n  @Input() theme: 'light' | 'dark' | 'bootstrap' | 'material' = 'light';\n\n  /**\n   * Dynamically applies CSS classes to the paginator element based on the theme.\n   * @returns A string of CSS classes.\n   */\n  @HostBinding('class') get paginatorClass(): string {\n    return `theme-${this.theme}`;\n  }\n\n  /**\n   * Event emitted when the current page changes.\n   * Provides the new page number.\n   */\n  @Output() onPageChange: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Lifecycle hook that recalculates page numbers when input properties change.\n   * @param changes Object containing changed properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getPageNumbers(this.currentPage, this.pagesLimit);\n  }\n\n  ngAfterViewInit(): void {}\n\n  /**\n   * Generates the array of page numbers to display based on current page and limit.\n   * @param start The starting page number.\n   * @param limit The maximum number of pages to show.\n   */\n  getPageNumbers(start: number, limit: number) {\n    this.pageNumbers = [];\n    let count = 0;\n    if (start > 1) {\n      for (let i = start - 1; i = limit) break;\n        this.pageNumbers.push(i);\n        count++;\n      }\n    } else {\n      for (let i = start; i = limit) break;\n        this.pageNumbers.push(i);\n        count++;\n      }\n    }\n  }\n\n  /**\n   * Sets the current page and emits the page change event, then recalculates displayed pages.\n   * @param currentPage The page number to navigate to.\n   */\n  getPageNo(currentPage: number) {\n    this.currentPage = currentPage;\n    this.onPageChange.emit(currentPage);\n    this.getPageNumbers(this.currentPage, this.pagesLimit);\n  }\n\n  /**\n   * Navigates to the first page if not already there.\n   */\n  goFirst() {\n    if (this.currentPage !== 1) {\n      this.currentPage = 1;\n      this.onPageChange.emit(this.currentPage);\n      this.getPageNumbers(1, this.pagesLimit);\n    }\n  }\n\n  /**\n   * Navigates to the next page if available.\n   */\n  goNext() {\n    if (this.currentPage  1) {\n      this.currentPage--;\n      this.onPageChange.emit(this.currentPage);\n      this.getPageNumbers(this.currentPage, this.pagesLimit);\n    }\n  }\n\n  /**\n   * Navigates to the last page if not already there.\n   */\n  goLast() {\n    if (this.currentPage !== this.pages) {\n      this.currentPage = this.pages;\n      this.onPageChange.emit(this.currentPage);\n      this.getPageNumbers(this.pages, this.pagesLimit);\n    }\n  }\n}\n\n    \n\n    \n        @if (paginatorStyle === 'page') {\n  \n    \n      &laquo;\n      &lsaquo;\n      @for (p of this.pageNumbers; track p) {\n        {{ p }}\n        }\n        &rsaquo;\n        &raquo;\n      \n    \n  }\n\n  @if (paginatorStyle === 'arrow') {\n    \n      \n        &laquo;\n        &lsaquo;\n        {{ currentPage }} / {{ pages }}\n        &rsaquo;\n        &raquo;\n      \n    \n  }\n\n    \n\n    \n                \n                    ./zt-paginator-x.component.scss\n                \n                // ZT Paginator X - Theme Support\n// Light theme (default)\n:host(.theme-light) {\n  --zt-paginator-primary: #007bff;\n  --zt-paginator-text: #000000;\n  --zt-paginator-bg-active: #007bff;\n  --zt-paginator-text-active: #ffffff;\n  --zt-paginator-hover: #007bff;\n}\n\n// Dark theme\n:host(.theme-dark) {\n  --zt-paginator-primary: #4dabf7;\n  --zt-paginator-text: #ffffff;\n  --zt-paginator-bg-active: #4dabf7;\n  --zt-paginator-text-active: #000000;\n  --zt-paginator-hover: #63b3f7;\n  --zt-paginator-hover-bg: rgba(77, 171, 247, 0.1);\n}\n\n// Bootstrap theme\n:host(.theme-bootstrap) {\n  --zt-paginator-primary: #007bff;\n  --zt-paginator-text: #000000;\n  --zt-paginator-bg-active: #007bff;\n  --zt-paginator-text-active: #ffffff;\n  --zt-paginator-hover: #007bff;\n}\n\n// Material theme\n:host(.theme-material) {\n  --zt-paginator-primary: #6200ee;\n  --zt-paginator-text: #000000;\n  --zt-paginator-bg-active: #6200ee;\n  --zt-paginator-text-active: #ffffff;\n  --zt-paginator-hover: #6200ee;\n}\n\n:host {\n  user-select: none;\n\n  .pagination {\n    display: inline-block;\n  }\n\n  .pagination a {\n    color: var(--zt-paginator-text);\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: all 0.2s ease;\n\n    &:hover:not(:disabled) {\n      color: var(--zt-paginator-hover);\n      background-color: var(--zt-paginator-hover-bg, rgba(0, 0, 0, 0.05));\n      cursor: pointer;\n      border-radius: 4px;\n    }\n\n    &:disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n\n    &.active {\n      color: var(--zt-paginator-text-active);\n      background: var(--zt-paginator-bg-active);\n      font-weight: 600;\n      border: 1px solid var(--zt-paginator-primary);\n      border-radius: 4px;\n      padding: 6px 12px;\n    }\n\n    &.disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n      pointer-events: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (paginatorStyle === \\'page\\') {            «      ‹      @for (p of this.pageNumbers; track p) {        {{ p }}        }        ›        »            }  @if (paginatorStyle === \\'arrow\\') {                  «        ‹        {{ currentPage }} / {{ pages }}        ›        »            }'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ZtPaginatorXComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZtSelectModule.html":{"url":"modules/ZtSelectModule.html","title":"module - ZtSelectModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ZtSelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZtSelectModule\n\n\n\ncluster_ZtSelectModule_imports\n\n\n\ncluster_ZtSelectModule_exports\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n\n\nZtSelectModule\n\nZtSelectModule\n\nZtSelectModule -->\n\nSelectComponent->ZtSelectModule\n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nZtSelectModule->SelectComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-select/zt-select.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SelectComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SelectComponent } from './select.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, SelectComponent],\n  exports: [SelectComponent],\n})\nexport class ZtSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZtTextareaModule.html":{"url":"modules/ZtTextareaModule.html","title":"module - ZtTextareaModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ZtTextareaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZtTextareaModule\n\n\n\ncluster_ZtTextareaModule_exports\n\n\n\ncluster_ZtTextareaModule_declarations\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\n\n\nZtTextareaModule\n\nZtTextareaModule\n\nZtTextareaModule -->\n\nTextareaComponent->ZtTextareaModule\n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nZtTextareaModule->TextareaComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/zt-ui-components/src/lib/zt-textarea/zt-textarea.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextareaComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextareaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TextareaComponent } from './textarea.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [TextareaComponent],\n  imports: [CommonModule],\n  exports: [TextareaComponent],\n})\nexport class ZtTextareaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZtUiComponents.html":{"url":"components/ZtUiComponents.html","title":"component - ZtUiComponents","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ZtUiComponents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/zt-ui-components/src/lib/zt-ui-components.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-zt-ui-components\n            \n\n\n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n  zt-ui-components works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-zt-ui-components',\n  imports: [],\n  template: `\n    \n      zt-ui-components works!\n    \n  `,\n  styles: ``\n})\nexport class ZtUiComponents {\n\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  zt-ui-components works!'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'ButtonComponent', 'selector': 'zt-button'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'InputComponent', 'selector': 'zt-input'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'SelectComponent', 'selector': 'zt-select'},{'name': 'TextareaComponent', 'selector': 'zt-textarea'},{'name': 'ZtDataGridComponent', 'selector': 'zt-data-grid'},{'name': 'ZtPaginatorComponent', 'selector': 'zt-paginator'},{'name': 'ZtPaginatorXComponent', 'selector': 'zt-paginator-x'},{'name': 'ZtUiComponents', 'selector': 'lib-zt-ui-components'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ZtUiComponents'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridColumn\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridEvent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridFilterState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridGroupRow\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridGroupState\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridOptions\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridRow\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridSelectionState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridSortState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            interface\n            DataGridSummary\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            type alias\n            DataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            type alias\n            FilterOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            type alias\n            SelectionMode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n            \n            type alias\n            SortDirection\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-data-grid/zt-data-grid.component.ts\n            \n            component\n            ZtDataGridComponent\n            \n                86 %\n                (38/44)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-input/input.component.ts\n            \n            component\n            InputComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-paginator/zt-paginator-x/zt-paginator-x.component.ts\n            \n            component\n            ZtPaginatorXComponent\n            \n                85 %\n                (17/20)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-paginator/zt-paginator.component.ts\n            \n            component\n            ZtPaginatorComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/lib/zt-ui-components.ts\n            \n            component\n            ZtUiComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/button.stories.ts\n            \n            variable\n            Button\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/button.stories.ts\n            \n            variable\n            Floating_Button\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/button.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/button.stories.ts\n            \n            variable\n            Outline_Button\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/button.stories.ts\n            \n            variable\n            Round_Button\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/button.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/data-grid.stories.ts\n            \n            variable\n            DataGrid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/data-grid.stories.ts\n            \n            variable\n            DataGridArrowPaginator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/data-grid.stories.ts\n            \n            variable\n            DataGridStriped\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/data-grid.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/data-grid.stories.ts\n            \n            variable\n            sampleColumns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/data-grid.stories.ts\n            \n            variable\n            sampleData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/data-grid.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/header.stories.ts\n            \n            variable\n            LoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/header.stories.ts\n            \n            variable\n            LoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/header.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/header.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/input.stories.ts\n            \n            variable\n            Bootstrap_Input\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/input.stories.ts\n            \n            variable\n            Input\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/input.stories.ts\n            \n            variable\n            Material_Input\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/input.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/input.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/page.component.ts\n            \n            component\n            PageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/page.stories.ts\n            \n            variable\n            LoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/page.stories.ts\n            \n            variable\n            LoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/page.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/page.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/paginator.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/paginator.stories.ts\n            \n            variable\n            Paginator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/paginator.stories.ts\n            \n            variable\n            PaginatorBootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/paginator.stories.ts\n            \n            variable\n            PaginatorDark\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/paginator.stories.ts\n            \n            variable\n            PaginatorMaterial\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/paginator.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/select.stories.ts\n            \n            variable\n            Bootstrap_Select\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/select.stories.ts\n            \n            variable\n            Material_Select\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/select.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/select.stories.ts\n            \n            variable\n            Select\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/select.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/textarea.stories.ts\n            \n            variable\n            Bootstrap_Textarea\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/textarea.stories.ts\n            \n            variable\n            Material_Textarea\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/textarea.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/textarea.stories.ts\n            \n            variable\n            Textarea\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/textarea.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/zt-ui-components/src/stories/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^20.3.0\n        \n            @angular/compiler : ^20.3.0\n        \n            @angular/core : ^20.3.0\n        \n            @angular/forms : ^20.3.0\n        \n            @angular/platform-browser : ^20.3.0\n        \n            @angular/router : ^20.3.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            KEY_CODE   (projects/.../textarea.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/zt-ui-components/src/lib/zt-textarea/textarea.component.ts\n    \n        \n            \n                \n                    \n                        \n                        KEY_CODE\n                    \n                \n                    \n                        \n                            Enumeration of key codes used in the textarea component.\n\n                        \n                    \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : Delete\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nZT UI Components\nA comprehensive collection of reusable Angular UI components built with Angular 20+. This library provides modern, customizable components with multiple themes and extensive configuration options.\nFeatures\n\n🎨 Multiple themes (Light, Dark, Bootstrap, Material)\n📱 Responsive design\n🔧 Highly customizable\n📚 Well-documented with JSDoc comments\n🧪 Storybook integration for component demos\n🚀 Built with Angular standalone components\n\nComponents\nButton (zt-button)\nA versatile button component with various styles, sizes, and variants.\nFeatures:\n\nMultiple variants: default, primary, success, info, warning, danger, dark, link, round, floating\nOutline styles\nSize options: small, medium, large\nTheme support\n\nBasic Usage:\nExample :Click me\nOutlined ButtonInput (zt-input)\nA customizable input field with validation and styling options.\nFeatures:\n\nInput types: text, number, email, password\nCharacter length validation\nMultiple styles: zt, material, bootstrap\nTheme support\n\nBasic Usage:\nExample :\nSelect (zt-select)\nA dropdown select component with data binding.\nFeatures:\n\nData source binding\nCustomizable display and key fields\nClear button option\nTheme support\n\nBasic Usage:\nExample :\nTextarea (zt-textarea)\nA multi-line text input with character counting.\nFeatures:\n\nCharacter count display\nLength validation\nConfigurable rows and columns\nTheme support\n\nBasic Usage:\nExample :\nData Grid (zt-data-grid)\nA powerful data table component with sorting, filtering, and pagination.\nFeatures:\n\nColumn sorting\nRow selection (single/multiple)\nPagination\nCustomizable columns\nTheme support\nEdit/Delete actions\n\nBasic Usage:\nExample :\nPaginator (zt-paginator, zt-paginator-x)\nPagination components for data navigation.\nFeatures:\n\nPage number display\nNavigation controls\nConfigurable page limits (zt-paginator-x)\nStyle options: page, arrow\n\nBasic Usage:\nExample :\nInstallation\nExample :npm install zt-ui-componentsUsage\nImport the components you need in your Angular module or standalone component:\nExample :import { ButtonComponent, InputComponent } from 'zt-ui-components';\n\n@Component({\n  standalone: true,\n  imports: [ButtonComponent, InputComponent],\n  // ...\n})\nexport class MyComponent {}Development\nPrerequisites\n\nNode.js 18+\nAngular CLI 20+\n\nSetup\n\nClone the repository:\n\nExample :git clone https://github.com/yourusername/zt-ui-components.git\ncd zt-ui-components\nInstall dependencies:\n\nExample :npm install\nStart the development server:\n\nExample :npm start\nView Storybook stories:\n\nExample :npm run storybookBuilding\nExample :npm run buildRunning Tests\nExample :npm testGenerating Documentation\nExample :npx compodoc -p projects/zt-ui-components/tsconfig.lib.jsonAPI Documentation\nComprehensive API documentation is available via Compodoc. Run the documentation generation command above and open documentation/index.html in your browser.\nContributing\n\nFork the repository\nCreate a feature branch\nMake your changes\nAdd tests if applicable\nSubmit a pull request\n\nLicense\nMIT License - see the LICENSE file for details.\nSupport\nFor questions and support, please open an issue on GitHub.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ZtDataGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZtInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZtPaginatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZtSelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZtTextareaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZtDataGridModule\n\n\n\ncluster_ZtDataGridModule_declarations\n\n\n\ncluster_ZtDataGridModule_exports\n\n\n\ncluster_ZtInputModule\n\n\n\ncluster_ZtInputModule_imports\n\n\n\ncluster_ZtInputModule_exports\n\n\n\ncluster_ZtPaginatorModule\n\n\n\ncluster_ZtPaginatorModule_declarations\n\n\n\ncluster_ZtPaginatorModule_exports\n\n\n\ncluster_ZtSelectModule\n\n\n\ncluster_ZtSelectModule_imports\n\n\n\ncluster_ZtSelectModule_exports\n\n\n\ncluster_ZtTextareaModule\n\n\n\ncluster_ZtTextareaModule_declarations\n\n\n\ncluster_ZtTextareaModule_exports\n\n\n\n\nZtDataGridComponent\n\nZtDataGridComponent\n\n\n\nZtDataGridModule\n\nZtDataGridModule\n\nZtDataGridModule -->\n\nZtDataGridComponent->ZtDataGridModule\n\n\n\n\n\nZtDataGridComponent \n\nZtDataGridComponent \n\nZtDataGridComponent  -->\n\nZtDataGridModule->ZtDataGridComponent \n\n\n\n\n\nInputComponent\n\nInputComponent\n\n\n\nZtInputModule\n\nZtInputModule\n\nZtInputModule -->\n\nInputComponent->ZtInputModule\n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nZtInputModule->InputComponent \n\n\n\n\n\nZtPaginatorComponent\n\nZtPaginatorComponent\n\n\n\nZtPaginatorModule\n\nZtPaginatorModule\n\nZtPaginatorModule -->\n\nZtPaginatorComponent->ZtPaginatorModule\n\n\n\n\n\nZtPaginatorXComponent\n\nZtPaginatorXComponent\n\nZtPaginatorModule -->\n\nZtPaginatorXComponent->ZtPaginatorModule\n\n\n\n\n\nZtPaginatorComponent \n\nZtPaginatorComponent \n\nZtPaginatorComponent  -->\n\nZtPaginatorModule->ZtPaginatorComponent \n\n\n\n\n\nZtPaginatorXComponent \n\nZtPaginatorXComponent \n\nZtPaginatorXComponent  -->\n\nZtPaginatorModule->ZtPaginatorXComponent \n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n\n\nZtSelectModule\n\nZtSelectModule\n\nZtSelectModule -->\n\nSelectComponent->ZtSelectModule\n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nZtSelectModule->SelectComponent \n\n\n\n\n\nTextareaComponent\n\nTextareaComponent\n\n\n\nZtTextareaModule\n\nZtTextareaModule\n\nZtTextareaModule -->\n\nTextareaComponent->ZtTextareaModule\n\n\n\n\n\nTextareaComponent \n\nTextareaComponent \n\nTextareaComponent  -->\n\nZtTextareaModule->TextareaComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataType   (projects/.../models.ts)\n                        \n                        \n                            FilterOperator   (projects/.../models.ts)\n                        \n                        \n                            SelectionMode   (projects/.../models.ts)\n                        \n                        \n                            SortDirection   (projects/.../models.ts)\n                        \n                        \n                            Story   (projects/.../button.stories.ts)\n                        \n                        \n                            Story   (projects/.../data-grid.stories.ts)\n                        \n                        \n                            Story   (projects/.../header.stories.ts)\n                        \n                        \n                            Story   (projects/.../input.stories.ts)\n                        \n                        \n                            Story   (projects/.../page.stories.ts)\n                        \n                        \n                            Story   (projects/.../paginator.stories.ts)\n                        \n                        \n                            Story   (projects/.../select.stories.ts)\n                        \n                        \n                            Story   (projects/.../textarea.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/zt-ui-components/src/lib/zt-data-grid/models.ts\n    \n    \n        \n            \n                \n                    \n                    DataType\n                \n            \n            \n                \n                    Represents the data type of a column in the data grid.\n\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"date\" | \"boolean\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterOperator\n                \n            \n            \n                \n                    Represents the available filter operators for data grid filtering.\n\n                \n            \n            \n                \n                        \"equals\" | \"notEquals\" | \"contains\" | \"notContains\" | \"startsWith\" | \"endsWith\" | \"greaterThan\" | \"greaterThanOrEqual\" | \"lessThan\" | \"lessThanOrEqual\" | \"between\" | \"isEmpty\" | \"isNotEmpty\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectionMode\n                \n            \n            \n                \n                    Represents the selection mode for the data grid.\n\n                \n            \n            \n                \n                        \"none\" | \"single\" | \"multiple\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SortDirection\n                \n            \n            \n                \n                    Represents the direction of sorting.\n\n                \n            \n            \n                \n                        \"asc\" | \"desc\" | null\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/button.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/data-grid.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/header.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/input.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/page.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/paginator.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/select.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    projects/zt-ui-components/src/stories/textarea.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Bootstrap_Input   (projects/.../input.stories.ts)\n                        \n                        \n                            Bootstrap_Select   (projects/.../select.stories.ts)\n                        \n                        \n                            Bootstrap_Textarea   (projects/.../textarea.stories.ts)\n                        \n                        \n                            Button   (projects/.../button.stories.ts)\n                        \n                        \n                            DataGrid   (projects/.../data-grid.stories.ts)\n                        \n                        \n                            DataGridArrowPaginator   (projects/.../data-grid.stories.ts)\n                        \n                        \n                            DataGridStriped   (projects/.../data-grid.stories.ts)\n                        \n                        \n                            Floating_Button   (projects/.../button.stories.ts)\n                        \n                        \n                            Input   (projects/.../input.stories.ts)\n                        \n                        \n                            LoggedIn   (projects/.../header.stories.ts)\n                        \n                        \n                            LoggedIn   (projects/.../page.stories.ts)\n                        \n                        \n                            LoggedOut   (projects/.../header.stories.ts)\n                        \n                        \n                            LoggedOut   (projects/.../page.stories.ts)\n                        \n                        \n                            Material_Input   (projects/.../input.stories.ts)\n                        \n                        \n                            Material_Select   (projects/.../select.stories.ts)\n                        \n                        \n                            Material_Textarea   (projects/.../textarea.stories.ts)\n                        \n                        \n                            meta   (projects/.../button.stories.ts)\n                        \n                        \n                            meta   (projects/.../data-grid.stories.ts)\n                        \n                        \n                            meta   (projects/.../header.stories.ts)\n                        \n                        \n                            meta   (projects/.../input.stories.ts)\n                        \n                        \n                            meta   (projects/.../page.stories.ts)\n                        \n                        \n                            meta   (projects/.../paginator.stories.ts)\n                        \n                        \n                            meta   (projects/.../select.stories.ts)\n                        \n                        \n                            meta   (projects/.../textarea.stories.ts)\n                        \n                        \n                            Outline_Button   (projects/.../button.stories.ts)\n                        \n                        \n                            Paginator   (projects/.../paginator.stories.ts)\n                        \n                        \n                            PaginatorBootstrap   (projects/.../paginator.stories.ts)\n                        \n                        \n                            PaginatorDark   (projects/.../paginator.stories.ts)\n                        \n                        \n                            PaginatorMaterial   (projects/.../paginator.stories.ts)\n                        \n                        \n                            Round_Button   (projects/.../button.stories.ts)\n                        \n                        \n                            sampleColumns   (projects/.../data-grid.stories.ts)\n                        \n                        \n                            sampleData   (projects/.../data-grid.stories.ts)\n                        \n                        \n                            Select   (projects/.../select.stories.ts)\n                        \n                        \n                            Textarea   (projects/.../textarea.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/zt-ui-components/src/stories/input.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Bootstrap_Input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'bootstrap',\n    inputStyle: 'bs',\n    placeholder: 'Bootstrap style input',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'light',\n    inputStyle: 'zt',\n    placeholder: 'Enter text',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Material_Input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'light',\n    inputStyle: 'material',\n    placeholder: 'Material style input',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Input',\n  component: InputComponent,\n  argTypes: {\n    size: {\n      options: ['zt-md', 'zt-sm', 'zt-lg'],\n      control: { type: 'select' },\n      default: 'zt-md',\n    },\n    theme: {\n      options: ['light', 'dark', 'bootstrap', 'material'],\n      control: { type: 'select' },\n      default: 'light',\n    },\n    inputStyle: {\n      options: ['zt', 'material', 'bs'],\n      control: { type: 'select' },\n      default: 'zt',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    projects/zt-ui-components/src/stories/select.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Bootstrap_Select\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'bootstrap',\n    inputStyle: 'bs',\n    placeholder: 'Bootstrap style select',\n    dataSource: [\n      { id: 1, firstName: 'Eve' },\n      { id: 2, firstName: 'Frank' },\n      { id: 3, firstName: 'Grace' },\n    ],\n    key: 'id',\n    displayValue: 'firstName',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Material_Select\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'light',\n    inputStyle: 'material',\n    placeholder: 'Material style select',\n    dataSource: [\n      { id: 1, firstName: 'Alice' },\n      { id: 2, firstName: 'Charlie' },\n      { id: 3, firstName: 'David' },\n    ],\n    key: 'id',\n    displayValue: 'firstName',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Select',\n  component: SelectComponent,\n  argTypes: {\n    size: {\n      options: ['zt-md', 'zt-sm', 'zt-lg'],\n      control: { type: 'select' },\n      default: 'zt-md',\n    },\n    theme: {\n      options: ['light', 'dark', 'bootstrap', 'material'],\n      control: { type: 'select' },\n      default: 'light',\n    },\n    inputStyle: {\n      options: ['zt', 'material', 'bs'],\n      control: { type: 'select' },\n      default: 'zt',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Select\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'light',\n    inputStyle: 'zt',\n    placeholder: 'Choose an option',\n    dataSource: [\n      { id: 1, firstName: 'John' },\n      { id: 2, firstName: 'Jane' },\n      { id: 3, firstName: 'Bob' },\n    ],\n    key: 'id',\n    displayValue: 'firstName',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    projects/zt-ui-components/src/stories/textarea.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Bootstrap_Textarea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'bootstrap',\n    inputStyle: 'bs',\n    placeholder: 'Bootstrap style textarea',\n    rows: 4,\n    textlength: 255,\n    showCharCount: true,\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Material_Textarea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'light',\n    inputStyle: 'material',\n    placeholder: 'Material style textarea',\n    rows: 4,\n    textlength: 255,\n    showCharCount: true,\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Textarea',\n  component: TextareaComponent,\n  argTypes: {\n    size: {\n      options: ['zt-md', 'zt-sm', 'zt-lg'],\n      control: { type: 'select' },\n      default: 'zt-md',\n    },\n    theme: {\n      options: ['light', 'dark', 'bootstrap', 'material'],\n      control: { type: 'select' },\n      default: 'light',\n    },\n    inputStyle: {\n      options: ['zt', 'material', 'bs'],\n      control: { type: 'select' },\n      default: 'zt',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Textarea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'light',\n    inputStyle: 'zt',\n    placeholder: 'Enter your message',\n    rows: 4,\n    textlength: 255,\n    showCharCount: true,\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    projects/zt-ui-components/src/stories/button.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: \"zt-sm\",\n    outline: false,\n    theme: \"light\",\n  },\n  render: (args) => ({\n    template: `\n    default\n    primary\n    info\n    success\n    danger\n    warning\n    dark\n    link\n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Floating_Button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    theme: 'light',\n    size: \"zt-sm\"\n  },\n  render: (args: ButtonComponent) => ({\n    template: `\n    +\n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Button',\n  component: ButtonComponent,\n  argTypes: {\n    size: {\n      options: ['zt-md', 'zt-sm', 'zt-lg'],\n      control: { type: 'select' },\n      default: 'zt-md',\n    },\n    theme: {\n      options: ['light', 'dark', 'bootstrap', 'material'],\n      control: { type: 'select' },\n      default: 'light',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Outline_Button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    outline: true,\n    theme: 'light',\n  },\n  render: (args: ButtonComponent) => ({\n    template: `\n    default\n    primary\n    info\n    success\n    danger\n    warning\n    dark\n    link\n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Round_Button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'zt-md',\n    theme: 'light',\n  },\n  render: (args: ButtonComponent) => ({\n    template: `\n    +\n    ✓\n    ✕\n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    projects/zt-ui-components/src/stories/data-grid.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DataGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    dataSource: sampleData,\n    columns: sampleColumns,\n    striped: true,\n    showBorders: true,\n    showEdit: true,\n    showDelete: true,\n    editButtonType: 'link',\n    deleteButtonType: 'link',\n    allowSorting: true,\n    allowSelection: true,\n    selectionMode: 'none',\n    pages: 4,\n    currentPageSize: 5,\n    paginatorStyle: 'page',\n    theme: \"material\",\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DataGridArrowPaginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    dataSource: sampleData,\n    columns: sampleColumns,\n    striped: false,\n    showBorders: true,\n    showEdit: true,\n    showDelete: true,\n    editButtonType: 'button',\n    deleteButtonType: 'button',\n    allowSorting: true,\n    allowSelection: false,\n    selectionMode: 'none',\n    pages: 3,\n    currentPageSize: 4,\n    paginatorStyle: 'arrow',\n    theme: 'dark',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DataGridStriped\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    dataSource: sampleData,\n    columns: sampleColumns,\n    striped: true,\n    showBorders: true,\n    showEdit: false,\n    showDelete: false,\n    editButtonType: 'link',\n    deleteButtonType: 'link',\n    allowSorting: true,\n    allowSelection: false,\n    selectionMode: 'none',\n    pages: 3,\n    currentPageSize: 4,\n    paginatorStyle: 'page',\n    theme: 'light',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Data Grid',\n  component: ZtDataGridComponent,\n  argTypes: {\n    dataSource: {\n      control: { type: 'object' },\n    },\n    columns: {\n      control: { type: 'object' },\n    },\n    striped: {\n      control: { type: 'boolean' },\n      default: false,\n    },\n    showBorders: {\n      control: { type: 'boolean' },\n      default: true,\n    },\n    showEdit: {\n      control: { type: 'boolean' },\n      default: false,\n    },\n    showDelete: {\n      control: { type: 'boolean' },\n      default: false,\n    },\n    editButtonType: {\n      options: ['button', 'link'],\n      control: { type: 'select' },\n      default: 'link',\n    },\n    deleteButtonType: {\n      options: ['button', 'link'],\n      control: { type: 'select' },\n      default: 'link',\n    },\n    allowSorting: {\n      control: { type: 'boolean' },\n      default: true,\n    },\n    allowSelection: {\n      control: { type: 'boolean' },\n      default: false,\n    },\n    selectionMode: {\n      options: ['none', 'single', 'multiple'],\n      control: { type: 'select' },\n      default: 'none',\n    },\n    pages: {\n      control: { type: 'number' },\n      default: 1,\n    },\n    currentPageSize: {\n      control: { type: 'number' },\n      default: 10,\n    },\n    paginatorStyle: {\n      options: ['page', 'arrow'],\n      control: { type: 'select' },\n      default: 'page',\n    },\n    theme: {\n      options: ['light', 'dark', 'bootstrap', 'material'],\n      control: { type: 'select' },\n      default: 'light',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { field: 'id', title: 'ID', width: '80px', sortable: true },\n  { field: 'name', title: 'Name', sortable: true },\n  { field: 'age', title: 'Age', width: '100px', sortable: true },\n  { field: 'city', title: 'City', sortable: true },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { id: 1, name: 'John Doe', age: 30, city: 'New York' },\n  { id: 2, name: 'Jane Smith', age: 25, city: 'Los Angeles' },\n  { id: 3, name: 'Bob Johnson', age: 35, city: 'Chicago' },\n  { id: 4, name: 'Alice Brown', age: 28, city: 'Houston' },\n  { id: 5, name: 'Charlie Wilson', age: 42, city: 'Phoenix' },\n  { id: 6, name: 'Diana Davis', age: 31, city: 'Philadelphia' },\n  { id: 7, name: 'Edward Miller', age: 29, city: 'San Antonio' },\n  { id: 8, name: 'Fiona Garcia', age: 33, city: 'San Diego' },\n  { id: 9, name: 'George Rodriguez', age: 27, city: 'Dallas' },\n  { id: 10, name: 'Helen Martinez', age: 36, city: 'San Jose' },\n  { id: 11, name: 'Ian Anderson', age: 24, city: 'Austin' },\n  { id: 12, name: 'Julia Thomas', age: 32, city: 'Jacksonville' },\n]\n                    \n                \n\n\n        \n    \n\n    projects/zt-ui-components/src/stories/header.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}\n                    \n                \n\n\n        \n    \n\n    projects/zt-ui-components/src/stories/page.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    projects/zt-ui-components/src/stories/paginator.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Paginator',\n  component: ZtPaginatorComponent,\n  argTypes: {\n    pages: {\n      control: { type: 'number' },\n      default: 10,\n    },\n    theme: {\n      options: ['light', 'dark', 'bootstrap', 'material'],\n      control: { type: 'select' },\n      default: 'light',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    pages: 10,\n    theme: 'light',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PaginatorBootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    pages: 8,\n    theme: 'bootstrap',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PaginatorDark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    pages: 5,\n    theme: 'dark',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PaginatorMaterial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    pages: 12,\n    theme: 'material',\n  },\n  render: (args) => ({\n    template: `\n    \n    `,\n    props: args,\n  }),\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
